Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NdBoundedTensorSpec", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.SafeModule", "reference/generated/torchrl.modules.SafeProbabilisticModule", "reference/generated/torchrl.modules.SafeProbabilisticSequential", "reference/generated/torchrl.modules.SafeSequential", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NdBoundedTensorSpec.rst", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.SafeModule.rst", "reference/generated/torchrl.modules.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.SafeSequential.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "NdBoundedTensorSpec", "NdUnboundedContinuousTensorSpec", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "QValueActor", "RSSMPosterior", "RSSMPrior", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "TanhDelta", "TanhNormal", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Demos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Demos", "Task-specific policy in multi-task environments", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 33, 40, 43, 44, 46, 47, 60, 66, 69, 72, 73, 76, 79, 87, 88, 91, 93, 94, 95, 96, 102, 104, 106, 110, 112, 113, 114, 115, 117, 121, 127, 131, 132, 133, 136, 139, 144, 155, 159, 184, 186, 187, 194, 196, 201, 202, 203, 204], "tensordict": [0, 1, 3, 11, 12, 13, 14, 15, 18, 19, 21, 27, 28, 31, 33, 37, 38, 43, 44, 45, 46, 47, 54, 57, 58, 60, 61, 62, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 99, 102, 104, 110, 111, 114, 115, 116, 117, 121, 123, 124, 125, 126, 130, 131, 132, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 155, 159, 163, 164, 169, 172, 174, 177, 179, 182, 190, 194, 196, 197, 198, 199, 200, 201, 203], "class": [0, 1, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 186, 187, 188, 194, 196, 197, 201, 202, 203], "ha": [0, 6, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 73, 76, 115, 136, 196, 197, 199, 201, 202, 203, 204], "been": [0, 6, 11, 12, 14, 43, 44, 46, 47, 75, 197, 199, 203], "move": [0, 21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 80, 103, 114, 162, 197, 203, 204], "out": [0, 3, 21, 43, 44, 46, 47, 105, 106, 114, 115, 142, 143, 194, 201, 202, 203, 204], "dedic": [0, 88, 89, 90, 196, 199], "librari": [0, 6, 8, 9, 84, 190, 191, 195, 196, 203], "take": [0, 1, 3, 15, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 129, 148, 149, 150, 151, 152, 153, 154, 155, 165, 194, 196, 197, 201, 203], "look": [0, 4, 6, 21, 43, 44, 46, 47, 69, 115, 116, 117, 197, 201, 203, 204], "find": [0, 201], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 199, 201, 202, 203, 204], "code": [0, 3, 6, 69, 117, 198, 199, 200, 201, 203, 204], "github": [0, 2, 5, 6, 9, 204], "i": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 63, 65, 66, 69, 72, 73, 74, 75, 76, 78, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 144, 145, 146, 147, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 172, 177, 179, 182, 184, 188, 191, 194, 196, 197, 199, 201, 203, 204], "an": [0, 1, 2, 3, 4, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 62, 65, 66, 69, 70, 74, 75, 76, 80, 82, 88, 89, 90, 92, 93, 94, 95, 96, 102, 103, 104, 105, 108, 114, 115, 116, 125, 126, 129, 130, 131, 134, 136, 137, 138, 139, 145, 146, 147, 159, 160, 161, 164, 167, 172, 185, 186, 187, 188, 191, 196, 197, 199, 201, 202, 203, 204], "open": [0, 4, 6, 10, 204], "reinforc": [0, 2, 3, 8, 57, 93, 94, 95, 96, 123, 130, 134, 135, 139, 140, 172, 197, 204], "learn": [0, 2, 3, 6, 8, 21, 57, 93, 94, 95, 96, 106, 123, 130, 134, 135, 138, 139, 140, 172, 196, 197, 199, 203, 204], "rl": [0, 1, 2, 7, 9, 11, 12, 13, 14, 45, 87, 106, 110, 121, 130, 137, 155, 191, 194, 196, 201, 202, 203], "pytorch": [0, 1, 2, 74, 164, 194, 196, 202, 203, 204], "It": [0, 3, 6, 21, 27, 43, 44, 45, 46, 47, 52, 66, 76, 93, 95, 100, 112, 113, 115, 130, 131, 134, 136, 137, 138, 139, 144, 160, 179, 191, 196, 201, 202, 203, 204], "provid": [0, 2, 3, 8, 13, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 58, 65, 66, 69, 73, 76, 79, 80, 87, 92, 102, 103, 104, 110, 123, 144, 155, 161, 167, 169, 177, 179, 182, 184, 191, 194, 196, 197, 199, 201, 203, 204], "python": [0, 3, 5, 6, 9, 194, 196, 197, 198, 199, 201, 203, 204], "first": [0, 1, 3, 6, 10, 11, 12, 13, 14, 44, 58, 63, 66, 69, 74, 76, 103, 105, 108, 114, 115, 163, 196, 197, 199, 201, 202, 203, 204], "low": [0, 196, 197, 204], "high": [0, 8, 145, 148, 149, 152, 196, 197, 204], "level": [0, 18, 136, 196, 197, 204], "abstract": [0, 17, 18, 19, 22, 23, 29, 30, 42, 43, 67, 104, 194, 202, 204], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 21, 24, 31, 32, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 60, 61, 62, 69, 73, 75, 76, 79, 80, 86, 91, 96, 97, 102, 104, 106, 109, 113, 114, 115, 116, 117, 129, 130, 131, 134, 136, 137, 138, 139, 141, 144, 145, 146, 147, 184, 188, 189, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204], "intend": [0, 6, 11, 12, 13, 14, 204], "effici": [0, 2, 106, 196, 197, 199, 202, 204], "modular": [0, 117, 204], "properli": [0, 202, 204], "test": [0, 3, 4, 82, 102, 160, 184, 201, 204], "aim": [0, 3, 6, 69, 79, 103, 166, 191, 196, 197, 204], "support": [0, 3, 18, 40, 75, 84, 99, 114, 117, 123, 134, 194, 201, 202, 204], "research": [0, 6, 8, 204], "most": [0, 3, 6, 21, 196, 204], "written": [0, 3, 27, 37, 43, 44, 46, 47, 114, 115, 130, 131, 136, 137, 144, 194, 196, 199, 201, 204], "highli": [0, 2, 203, 204], "wai": [0, 137, 197, 199, 203, 204], "can": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 21, 27, 29, 31, 43, 44, 46, 47, 57, 60, 65, 66, 69, 73, 75, 76, 79, 80, 91, 104, 106, 114, 115, 116, 117, 119, 120, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 144, 160, 169, 177, 179, 182, 186, 187, 188, 191, 194, 196, 197, 199, 201, 203, 204], "easili": [0, 3, 6, 46, 47, 169, 177, 179, 182, 197, 202, 203, 204], "swap": [0, 3, 204], "compon": [0, 3, 37, 38, 39, 40, 123, 124, 130, 131, 134, 136, 137, 138, 139, 159, 164, 199, 201, 204], "transform": [0, 21, 31, 32, 33, 44, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 93, 100, 123, 124, 127, 129, 169, 172, 174, 177, 179, 182, 188, 190, 197], "them": [0, 6, 31, 32, 33, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 136, 196, 197, 199, 201, 202, 203, 204], "write": [0, 21, 44, 68, 114, 115, 117, 132, 133, 138, 139, 144, 194, 196, 197, 199, 201, 202, 204], "new": [0, 3, 11, 12, 13, 14, 21, 25, 27, 34, 43, 44, 46, 47, 75, 80, 86, 114, 115, 130, 131, 133, 134, 136, 137, 138, 139, 196, 197, 201, 202, 203, 204], "ones": [0, 18, 21, 43, 44, 46, 47, 58, 60, 61, 66, 69, 73, 76, 79, 114, 196, 202, 203, 204], "littl": [0, 3, 203, 204], "effort": [0, 3, 204], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 21, 24, 27, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 52, 57, 58, 60, 62, 66, 69, 73, 75, 76, 77, 78, 79, 80, 82, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 119, 120, 123, 124, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 155, 157, 160, 164, 165, 166, 167, 169, 177, 179, 182, 184, 188, 191, 194, 196, 197, 199, 201, 203, 204], "repo": [0, 5, 191, 204], "attempt": [0, 204], "align": [0, 204], "exist": [0, 21, 43, 44, 46, 47, 58, 76, 167, 188, 201, 203, 204], "ecosystem": [0, 204], "dataset": [0, 25, 26, 27, 32, 80, 161, 202, 203, 204], "pillar": [0, 204], "environ": [0, 1, 3, 7, 10, 11, 12, 13, 14, 21, 24, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 61, 65, 66, 69, 75, 76, 80, 82, 91, 102, 104, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 166, 167, 169, 170, 171, 172, 174, 177, 179, 182, 184, 185, 186, 187, 188, 191, 198, 200], "model": [0, 1, 3, 8, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 69, 79, 81, 88, 89, 90, 92, 103, 104, 114, 130, 137, 138, 139, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 190, 191, 194, 201, 203], "data": [0, 3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 66, 82, 87, 88, 89, 90, 91, 99, 102, 110, 111, 114, 115, 117, 121, 123, 124, 132, 138, 139, 145, 146, 147, 155, 161, 164, 165, 170, 184, 186, 187, 188, 190, 194, 197, 201, 202, 203], "util": [0, 11, 12, 13, 14, 15, 21, 43, 44, 46, 47, 69, 79, 82, 83, 84, 85, 86, 92, 127, 128, 129, 184, 190, 195, 196, 197, 201, 203, 204], "e": [0, 1, 3, 9, 10, 11, 12, 13, 14, 18, 21, 24, 37, 38, 43, 44, 46, 47, 58, 60, 69, 73, 75, 76, 79, 114, 115, 119, 120, 124, 144, 155, 166, 187, 196, 197, 202, 203, 204], "g": [0, 1, 3, 9, 10, 21, 24, 43, 44, 46, 47, 58, 60, 69, 73, 75, 76, 79, 114, 115, 119, 120, 144, 150, 151, 153, 154, 187, 196, 197, 203, 204], "collector": [0, 3, 11, 12, 13, 14, 15, 164, 165, 170, 171, 184, 186, 187, 190, 194, 197, 203, 204], "contain": [0, 3, 6, 11, 12, 13, 14, 18, 21, 25, 26, 27, 28, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 60, 69, 73, 76, 79, 80, 86, 91, 92, 103, 114, 130, 131, 132, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 155, 161, 166, 169, 172, 174, 177, 179, 182, 184, 185, 186, 187, 188, 194, 197, 201, 203, 204], "etc": [0, 3, 6, 21, 23, 30, 43, 44, 46, 47, 76, 103, 196, 202, 203, 204], "have": [0, 3, 5, 6, 11, 12, 14, 18, 21, 40, 43, 44, 46, 47, 57, 65, 75, 76, 80, 92, 102, 103, 116, 117, 131, 136, 137, 141, 155, 164, 194, 196, 197, 199, 201, 202, 203, 204], "few": [0, 2, 7, 155, 197, 203, 204], "depend": [0, 3, 6, 121, 137, 203, 204], "possibl": [0, 3, 19, 21, 24, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 160, 164, 196, 201, 202, 203, 204], "standard": [0, 66, 72, 80, 91, 100, 105, 106, 145, 146, 147, 196, 197, 204], "numpi": [0, 13, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 74, 164, 196, 197, 203, 204], "common": [0, 3, 44, 46, 47, 88, 89, 90, 125, 126, 184, 191, 194, 196, 199, 201, 202, 203, 204], "openai": [0, 6, 50, 51, 203, 204], "gym": [0, 3, 10, 11, 12, 13, 44, 50, 51, 66, 73, 80, 169, 172, 174, 177, 179, 182, 184, 191, 196, 197, 204], "onli": [0, 1, 4, 6, 11, 12, 14, 18, 21, 27, 43, 44, 46, 47, 58, 60, 69, 73, 76, 79, 80, 102, 114, 115, 116, 117, 167, 194, 196, 197, 199, 201, 203, 204], "option": [0, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 38, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 86, 87, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 130, 132, 133, 137, 138, 139, 144, 145, 146, 147, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 167, 169, 170, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 196, 197, 204], "On": [0, 6, 197, 202], "end": [0, 21, 31, 32, 33, 43, 44, 46, 47, 76, 92, 104, 148, 149, 150, 151, 152, 153, 154, 196, 199, 203, 204], "come": [0, 1, 46, 47, 87, 88, 89, 90, 110, 121, 196, 201, 203, 204], "set": [0, 1, 2, 3, 6, 8, 11, 12, 13, 14, 21, 24, 40, 43, 44, 45, 46, 47, 58, 60, 69, 73, 76, 79, 85, 104, 114, 155, 160, 171, 188, 191, 195, 196, 197, 199, 203, 204], "re": [0, 3, 7, 21, 43, 44, 46, 47, 115, 194, 197, 199, 203, 204], "usabl": [0, 194, 204], "function": [0, 3, 10, 15, 21, 37, 38, 39, 40, 43, 44, 46, 47, 60, 69, 75, 76, 77, 78, 79, 80, 82, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 115, 117, 120, 121, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 169, 172, 174, 177, 179, 182, 184, 190, 196, 197, 199, 201, 202, 203], "cost": [0, 2, 19, 197], "return": [0, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 84, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 102, 103, 104, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 144, 145, 146, 147, 150, 151, 153, 154, 161, 164, 166, 169, 170, 172, 174, 177, 179, 182, 184, 185, 186, 187, 188, 190, 194, 196, 197, 199, 201, 202, 203, 204], "process": [0, 1, 3, 11, 12, 14, 46, 47, 80, 194, 196, 197, 203, 204], "good": [0, 1, 8, 203, 204], "runtim": [0, 3, 21, 43, 44, 46, 47], "perform": [0, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 60, 65, 69, 75, 76, 77, 78, 79, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 112, 113, 127, 137, 160, 164, 196, 197, 199, 202, 203], "introduct": [0, 198, 200, 203], "env": [0, 1, 5, 6, 11, 12, 13, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 104, 114, 167, 169, 170, 171, 172, 174, 177, 179, 182, 184, 186, 187, 188, 190, 196, 197, 198, 199, 200], "modul": [0, 3, 10, 21, 43, 44, 45, 46, 47, 60, 69, 73, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 138, 140, 142, 164, 168, 173, 175, 176, 178, 181, 184, 189, 190, 194, 196, 197, 198, 199, 201], "us": [0, 1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 18, 19, 21, 25, 26, 27, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 58, 59, 66, 69, 73, 74, 75, 76, 79, 80, 82, 85, 86, 91, 92, 93, 94, 100, 103, 104, 106, 114, 115, 119, 120, 123, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 149, 152, 160, 161, 164, 165, 167, 170, 171, 172, 180, 184, 188, 189, 191, 194, 195, 198, 199, 200, 202, 203], "object": [0, 3, 11, 12, 13, 14, 18, 21, 37, 38, 39, 40, 43, 44, 46, 47, 69, 75, 76, 80, 87, 88, 110, 114, 115, 116, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 167, 170, 171, 183, 184, 188, 190, 194, 197, 201, 203], "state": [0, 1, 3, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 54, 57, 58, 60, 69, 73, 75, 76, 78, 79, 80, 81, 88, 91, 100, 102, 103, 107, 112, 113, 114, 138, 144, 145, 146, 147, 188, 196, 197, 203], "contribut": 0, "instal": [0, 9, 164, 191, 203], "improv": [0, 2, 130], "structur": [0, 3, 6], "dictionari": [0, 11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 76, 115, 186, 187, 188, 194, 196, 203], "featur": [0, 3, 11, 12, 13, 14, 24, 43, 44, 46, 47, 57, 92, 100, 101, 103, 105, 106, 115, 188, 196, 197, 201, 203], "tensor": [0, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 54, 57, 58, 60, 63, 66, 69, 72, 73, 74, 75, 76, 79, 80, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 123, 124, 127, 128, 132, 133, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 169, 172, 174, 177, 179, 182, 194, 196, 197, 199, 201, 203, 204], "tensordictmodul": [0, 11, 12, 13, 14, 114, 116, 196, 197, 198, 199, 200], "exampl": [0, 3, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 60, 61, 66, 69, 73, 74, 76, 79, 80, 86, 87, 88, 89, 90, 91, 92, 99, 102, 103, 110, 111, 114, 117, 121, 123, 124, 126, 155, 156, 157, 158, 159, 162, 163, 165, 169, 172, 174, 177, 179, 182, 184, 189, 194, 196, 197, 198, 199, 202, 203, 204], "do": [0, 3, 6, 11, 12, 13, 14, 44, 65, 86, 89, 105, 194, 196, 197, 199, 203, 204], "": [0, 1, 3, 5, 6, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 60, 69, 73, 76, 79, 80, 82, 92, 106, 114, 115, 139, 161, 179, 182, 196, 197, 199, 202, 203, 204], "don": [0, 5, 6, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 196, 202, 203, 204], "t": [0, 3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 43, 44, 46, 47, 69, 79, 80, 86, 114, 126, 132, 164, 165, 188, 191, 196, 197, 199, 203, 204], "showcas": 0, "implement": [0, 2, 3, 8, 10, 21, 40, 43, 44, 46, 47, 80, 118, 119, 120, 130, 137, 139, 169, 177, 179, 182, 194, 196, 197, 204], "deepmind": [0, 6, 8, 48, 49], "control": [0, 1, 3, 46, 47, 48, 49, 93, 94, 95, 96, 104, 113, 114, 115, 116, 131, 136, 137, 140, 145, 148, 149, 152, 172, 194, 196], "devic": [0, 1, 2, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 37, 38, 43, 44, 45, 46, 47, 54, 55, 60, 68, 69, 73, 74, 76, 79, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 105, 106, 110, 111, 114, 117, 121, 123, 124, 132, 165, 169, 172, 174, 177, 179, 180, 182, 196, 197, 199, 201, 204], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 43, 44, 45, 46, 47, 48, 49, 60, 65, 66, 69, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 116, 117, 127, 160, 186, 187, 188, 191, 194, 196, 197, 199, 201, 202, 204], "parallel": [0, 1, 3, 7, 11, 12, 14, 82, 130, 185, 186, 187, 188, 197], "vecnorm": [0, 188, 190], "task": [0, 8, 46, 47, 48, 69, 79, 196, 197, 198, 200, 203, 204], "specif": [0, 4, 27, 28, 33, 44, 164, 190, 194, 198, 200], "polici": [0, 1, 2, 3, 11, 12, 13, 14, 43, 44, 45, 46, 47, 85, 86, 88, 89, 90, 106, 114, 115, 123, 124, 130, 131, 132, 136, 137, 138, 139, 160, 165, 169, 170, 171, 172, 174, 177, 184, 186, 187, 194, 197, 198, 200, 201, 203, 204], "multi": [0, 3, 6, 8, 21, 22, 23, 43, 44, 46, 47, 102, 103, 196, 197, 198, 200, 204], "execut": [0, 1, 3, 6, 13, 31, 32, 33, 43, 44, 45, 46, 47, 116, 117, 167, 188, 194, 197, 200, 201, 203], "divers": [0, 46, 47], "rollout": [0, 1, 3, 11, 12, 13, 14, 43, 44, 45, 46, 47, 82, 91, 130, 167, 196, 197, 204], "ddpg": [0, 93, 94, 95, 96, 132, 135, 140, 172, 173, 190, 198, 200], "normal": [0, 31, 66, 80, 92, 103, 115, 119, 120, 160, 162, 188, 194, 197, 203], "observ": [0, 2, 3, 11, 12, 13, 29, 43, 44, 45, 46, 47, 48, 49, 54, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 73, 74, 75, 76, 77, 79, 80, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 102, 107, 108, 110, 111, 112, 121, 123, 124, 145, 146, 147, 169, 172, 174, 177, 179, 182, 184, 194, 197, 199, 201, 202, 203, 204], "build": [0, 3, 6, 15, 18, 21, 43, 44, 46, 47, 80, 91, 115, 164, 168, 173, 175, 176, 178, 180, 181, 183, 194, 201, 202, 203, 204], "evalu": [0, 21, 43, 44, 46, 47, 76, 97, 109, 120, 138, 170, 171, 197], "your": [0, 6, 7, 9, 21, 43, 44, 46, 47, 80, 188, 191, 197, 202, 204], "record": [0, 21, 43, 44, 46, 47, 137, 184, 190, 194, 197], "replai": [0, 13, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 40, 41, 46, 47, 132, 133, 138, 139, 161, 164, 180, 184, 190, 194, 197], "buffer": [0, 3, 13, 21, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 60, 69, 73, 76, 79, 114, 117, 132, 133, 138, 139, 161, 164, 180, 184, 190, 194, 197, 201, 203], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 66, 69, 73, 75, 76, 81, 91, 105, 106, 136, 138, 139, 169, 172, 174, 177, 179, 182, 188, 197, 203], "time": [0, 3, 4, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 58, 73, 80, 86, 100, 102, 138, 164, 197, 199, 201, 202, 203, 204], "train": [0, 1, 11, 12, 13, 14, 21, 43, 44, 46, 47, 69, 76, 79, 93, 95, 130, 131, 134, 136, 137, 138, 139, 164, 165, 184, 194, 202, 203], "experi": [0, 3, 25, 34, 191], "result": [0, 1, 3, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 86, 103, 124, 148, 149, 150, 151, 152, 153, 154, 165, 197, 202, 203, 204], "sampl": [0, 2, 8, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 43, 45, 83, 85, 91, 97, 109, 112, 114, 115, 119, 120, 131, 132, 133, 136, 137, 155, 161, 164, 166, 197, 201, 203, 204], "trajectori": [0, 1, 11, 12, 13, 14, 15, 21, 43, 44, 46, 47, 75, 91, 137, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 197, 203, 204], "td": [0, 18, 48, 49, 50, 51, 53, 54, 58, 61, 66, 74, 76, 80, 86, 87, 88, 89, 90, 91, 99, 104, 110, 111, 114, 117, 121, 123, 124, 146, 147, 150, 151, 153, 154, 155, 163, 169, 172, 174, 177, 179, 182, 201, 202, 203, 204], "lambda": [0, 11, 12, 13, 14, 147, 150, 151, 153, 154, 184, 201, 202, 203, 204], "pixel": [0, 3, 6, 18, 64, 69, 70, 74, 79, 93, 107, 108, 169, 174, 177, 179, 182, 196, 198, 200, 203, 204], "base": [0, 3, 8, 11, 12, 13, 14, 36, 42, 45, 78, 88, 164, 169, 177, 179, 182, 194, 196, 198, 200, 203], "dqn": [0, 99, 111, 123, 133, 134, 135, 140, 174, 175, 190, 198, 200], "problem": [0, 6, 13, 203], "deep": [0, 8, 57, 93, 94, 95, 96, 98, 130, 135, 139, 140, 172, 196], "q": [0, 93, 94, 95, 96, 98, 101, 123, 124, 132, 133, 134, 135, 138, 139, 179, 182, 201], "network": [0, 1, 21, 43, 44, 46, 47, 88, 89, 90, 92, 93, 94, 95, 96, 98, 100, 101, 103, 106, 107, 108, 112, 113, 114, 132, 133, 134, 135, 138, 139, 140, 142, 169, 172, 177, 183, 184, 194, 196, 199, 201, 203], "regular": [0, 14, 114, 115, 124, 134, 165, 194, 196, 201, 202, 203], "conclus": 0, "api": [0, 3, 69, 79, 194, 203, 204], "packag": [0, 5, 6, 9, 190, 191, 203], "trainer": [0, 130, 131, 134, 136, 137, 138, 139, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 196], "_util": [0, 10, 190], "knowledg": 0, "work": [0, 6, 7, 21, 43, 44, 46, 47, 58, 69, 80, 92, 103, 164, 191, 197, 199, 201, 202, 203, 204], "habitat": [0, 52, 191], "lab": [0, 3, 48, 49, 191], "about": [0, 191, 196, 197, 203, 204], "mujoco": [0, 5, 191], "issu": [0, 4, 114, 115, 191, 204], "when": [0, 1, 3, 4, 7, 11, 12, 13, 14, 21, 25, 26, 27, 31, 32, 33, 37, 38, 39, 40, 43, 44, 46, 47, 60, 65, 69, 73, 75, 76, 79, 80, 85, 91, 103, 104, 105, 114, 115, 117, 119, 127, 131, 136, 137, 144, 161, 188, 191, 194, 196, 197, 201, 202, 203], "render": [0, 7, 160, 191, 196, 197], "pro": [0, 6, 191], "tip": [0, 6, 191], "resourc": [0, 191], "version": [0, 1, 10, 21, 43, 44, 46, 47, 147, 191, 196, 197, 203], "index": [0, 6, 9, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 86, 161, 196, 199, 202, 204], "search": [0, 197], "page": [0, 6], "somewhat": [1, 203], "equival": [1, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 203, 204], "dataload": [1, 202], "except": [1, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 62, 109, 126, 196, 197, 202, 203], "1": [1, 2, 3, 9, 11, 12, 13, 14, 19, 20, 21, 24, 43, 44, 45, 46, 47, 54, 56, 58, 60, 61, 65, 66, 69, 73, 74, 76, 79, 80, 86, 88, 89, 90, 91, 92, 93, 94, 96, 101, 103, 105, 106, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 127, 130, 131, 136, 137, 138, 139, 140, 144, 148, 149, 150, 151, 152, 153, 154, 155, 160, 162, 169, 172, 174, 177, 179, 182, 184, 188, 191, 194, 196, 197, 199, 202, 203, 204], "thei": [1, 3, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 61, 62, 75, 76, 102, 130, 131, 134, 136, 137, 138, 139, 164, 194, 196, 197, 199, 201, 202, 203, 204], "collect": [1, 3, 11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 66, 69, 79, 82, 132, 138, 139, 155, 161, 164, 165, 166, 167, 184, 194, 196, 197, 202, 203, 204], "over": [1, 2, 3, 11, 12, 13, 14, 21, 43, 44, 46, 47, 66, 117, 134, 166, 194, 196, 201, 202, 203], "non": [1, 21, 25, 27, 43, 44, 46, 47, 56, 60, 69, 73, 76, 79, 114, 115, 196, 201, 203], "static": [1, 80], "2": [1, 9, 11, 12, 13, 20, 21, 43, 44, 46, 47, 58, 60, 66, 69, 73, 76, 79, 80, 92, 93, 94, 95, 99, 101, 102, 103, 114, 121, 123, 131, 132, 136, 138, 139, 144, 150, 151, 153, 154, 155, 196, 197, 199, 202, 203, 204], "like": [1, 6, 21, 43, 44, 46, 47, 52, 74, 82, 138, 196, 202, 203], "being": [1, 3, 14, 21, 43, 44, 46, 47, 76, 85, 165, 186, 187, 188, 196, 197], "accept": [1, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 79, 114, 115, 116, 194, 201, 203], "two": [1, 9, 21, 43, 44, 46, 47, 96, 115, 136, 139, 141, 160, 164, 169, 177, 179, 182, 196, 197, 199, 201, 202, 203, 204], "main": [1, 2, 115, 164, 196, 197, 199, 203], "argument": [1, 3, 11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 60, 69, 73, 75, 76, 79, 92, 103, 105, 114, 115, 116, 121, 157, 166, 169, 172, 174, 177, 179, 182, 184, 185, 188, 196, 197, 201, 203], "list": [1, 5, 6, 8, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 39, 40, 43, 44, 45, 46, 47, 57, 69, 76, 79, 103, 117, 121, 143, 145, 146, 147, 160, 161, 186, 187, 196, 197, 199, 201, 202, 203, 204], "constructor": [1, 13, 75, 169, 172, 174, 177, 179, 182, 185, 188, 201], "iter": [1, 12, 13, 20, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 66, 80, 92, 103, 114, 115, 116, 117, 125, 143, 160, 161, 163, 164, 169, 177, 179, 182, 194, 196], "step": [1, 3, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 54, 65, 66, 76, 86, 91, 100, 102, 104, 115, 130, 137, 144, 155, 160, 164, 194, 196, 197, 199, 202, 204], "queri": [1, 11, 12, 13, 14, 21, 43, 44, 46, 47, 69, 75, 80, 117, 201, 204], "defin": [1, 2, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 185, 197, 201, 202, 203], "number": [1, 3, 7, 11, 12, 13, 14, 17, 19, 21, 22, 24, 25, 26, 27, 32, 34, 37, 38, 39, 43, 44, 45, 46, 47, 57, 65, 66, 72, 80, 91, 92, 97, 98, 100, 101, 103, 107, 108, 112, 113, 114, 115, 118, 119, 120, 129, 138, 139, 155, 157, 160, 161, 164, 165, 166, 167, 186, 187, 188, 196, 197, 203], "befor": [1, 3, 6, 9, 11, 12, 13, 14, 21, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 79, 103, 105, 106, 130, 131, 134, 136, 137, 138, 139, 145, 146, 147, 196, 197, 201, 202, 203], "deliv": [1, 197, 204], "stack": [1, 6, 27, 46, 47, 80, 86, 116, 117, 155, 197, 199, 201, 202, 204], "user": [1, 21, 43, 44, 46, 47, 76, 102, 185, 194, 197, 201, 203, 204], "reset": [1, 3, 11, 12, 13, 14, 43, 44, 45, 46, 47, 54, 57, 60, 65, 69, 73, 75, 78, 79, 80, 81, 86, 122, 169, 172, 174, 177, 179, 182, 196, 197, 199, 204], "whenev": [1, 3, 165], "reach": [1, 11, 12, 13, 14, 43, 44, 45, 46, 47, 203, 204], "done": [1, 3, 6, 11, 12, 13, 18, 21, 43, 44, 45, 46, 47, 54, 66, 72, 73, 80, 86, 91, 132, 133, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 169, 172, 174, 177, 179, 182, 196, 197, 199, 202, 203, 204], "after": [1, 18, 21, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 86, 105, 196, 197, 201, 202, 203], "predifin": 1, "becaus": [1, 6, 75, 96, 102, 114, 115, 196, 197, 199, 202, 203], "potenti": 1, "comput": [1, 3, 11, 13, 19, 21, 25, 27, 43, 44, 46, 47, 60, 66, 69, 75, 76, 77, 78, 79, 88, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 112, 113, 115, 119, 120, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 167, 196, 197, 199, 201], "heavi": 1, "crucial": [1, 196, 197, 203], "configur": [1, 11, 12, 13, 14, 137, 169, 177, 179, 182], "appropri": [1, 6, 11, 12, 13, 14, 41, 42, 185, 188], "paramet": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 177, 179, 182, 184, 185, 186, 187, 188, 196, 197, 201, 204], "consider": [1, 3, 196], "whether": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 43, 44, 45, 46, 47, 76, 92, 103, 121, 132, 133, 134, 138, 139, 147, 161, 197, 203], "should": [1, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 40, 43, 44, 45, 46, 47, 60, 66, 69, 75, 76, 77, 78, 79, 80, 82, 86, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 114, 115, 127, 135, 136, 137, 138, 140, 144, 159, 160, 161, 164, 184, 186, 187, 188, 194, 196, 197, 199, 203, 204], "occur": [1, 12, 58, 114, 115, 203], "serial": [1, 3, 21, 43, 44, 46, 47, 80], "optim": [1, 21, 43, 44, 46, 47, 91, 105, 106, 137, 139, 159, 164, 169, 177, 184, 194, 196, 197, 202], "syncdatacollector": [1, 11, 12, 14, 184, 187, 190], "worker": [1, 11, 12, 13, 14, 46, 47, 80, 186, 187, 188, 203, 204], "multisyncdatacollector": [1, 187, 190, 204], "split": [1, 11, 12, 13, 14, 130, 131, 134, 136, 137, 138, 139, 194, 204], "workload": 1, "across": [1, 80, 165, 202], "aggreg": [1, 92, 93, 94, 117, 202], "final": [1, 116, 160, 196, 197, 203], "multiasyncdatacollector": [1, 14, 186, 190, 196, 197, 204], "sever": [1, 21, 43, 44, 46, 47, 58, 76, 137, 203], "batch": [1, 3, 11, 12, 13, 14, 15, 19, 21, 24, 25, 26, 27, 28, 31, 32, 33, 43, 44, 45, 46, 47, 66, 76, 97, 98, 102, 105, 109, 114, 118, 130, 131, 134, 136, 137, 138, 139, 148, 149, 150, 151, 152, 153, 154, 155, 161, 163, 164, 165, 186, 187, 188, 194, 196, 197, 199, 201, 203, 204], "gather": [1, 25, 27, 144, 167, 191, 201, 203], "continu": [1, 8, 17, 22, 23, 30, 93, 94, 95, 96, 115, 117, 140, 145, 148, 149, 152, 172, 196, 203, 204], "concomittantli": 1, "impli": [1, 203], "weight": [1, 8, 11, 12, 13, 14, 21, 25, 27, 43, 44, 46, 47, 60, 69, 73, 76, 79, 106, 114, 130, 131, 165, 183, 194, 196, 197, 199, 204], "mai": [1, 3, 4, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 80, 103, 194, 196, 203, 204], "slightli": [1, 196, 201, 203], "lag": [1, 11, 12, 13, 14], "therefor": [1, 3, 6, 137, 202, 203], "although": [1, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 194, 196, 197], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 11, 12, 13, 14, 25, 26, 27, 28, 31, 32, 33, 37, 38, 43, 44, 45, 46, 47, 69, 75, 79, 114, 115, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 144, 161, 164, 165, 194, 196, 197, 199, 201, 203], "asynchron": [1, 8, 12, 21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 130, 186], "off": [1, 2, 119, 120, 139, 160, 170, 194, 197, 203], "curriculum": 1, "For": [1, 3, 6, 8, 9, 11, 12, 13, 14, 21, 43, 44, 46, 47, 105, 123, 130, 134, 137, 160, 172, 194, 196, 201, 203], "remot": [1, 31, 46, 47, 203], "necessari": [1, 5, 11, 12, 13, 14, 138, 145, 146, 147, 196], "synchronis": 1, "from": [1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 21, 24, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 58, 66, 69, 73, 74, 75, 76, 79, 80, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 103, 104, 105, 110, 111, 114, 115, 116, 117, 119, 120, 121, 123, 124, 131, 132, 133, 136, 137, 138, 139, 144, 155, 161, 164, 166, 167, 169, 172, 174, 177, 179, 180, 182, 184, 185, 188, 191, 194, 196, 197, 199, 201, 202, 203, 204], "either": [1, 21, 43, 44, 46, 47, 172, 194, 202, 203, 204], "update_policy_weights_": [1, 11, 12, 13, 14, 196, 197, 204], "update_at_each_batch": [1, 11, 12, 14, 196], "true": [1, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 45, 46, 47, 48, 49, 58, 60, 65, 66, 69, 72, 73, 74, 76, 79, 80, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 103, 105, 106, 114, 115, 116, 117, 119, 120, 126, 130, 131, 136, 137, 138, 139, 141, 145, 146, 147, 150, 151, 153, 154, 157, 158, 160, 164, 174, 188, 194, 196, 197, 199, 201, 202, 203, 204], "second": [1, 163, 196, 197, 199, 201, 202, 203, 204], "consid": [1, 21, 43, 44, 46, 47, 97, 118, 196, 202], "oper": [1, 3, 6, 11, 12, 14, 21, 43, 44, 46, 47, 75, 88, 89, 90, 114, 123, 130, 131, 132, 133, 134, 136, 137, 144, 145, 146, 147, 164, 172, 174, 179, 182, 194, 196, 197, 199, 201, 203], "instanc": [1, 3, 6, 7, 11, 12, 13, 14, 21, 29, 43, 44, 45, 46, 47, 49, 57, 60, 69, 73, 75, 77, 78, 79, 80, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 112, 113, 115, 116, 117, 127, 160, 167, 169, 170, 171, 172, 174, 177, 179, 182, 184, 186, 187, 194, 197, 201, 202, 203], "cpu": [1, 3, 7, 9, 11, 12, 13, 21, 29, 37, 38, 43, 44, 45, 46, 47, 54, 55, 60, 69, 73, 76, 79, 91, 106, 110, 114, 117, 169, 172, 174, 177, 179, 182, 196, 197, 199, 202, 203, 204], "slower": 1, "than": [1, 7, 11, 12, 13, 14, 96, 103, 114, 165, 191, 196, 197, 201, 202, 203, 204], "one": [1, 3, 6, 10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 31, 32, 33, 40, 41, 42, 43, 44, 46, 47, 60, 65, 69, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 107, 108, 109, 111, 112, 113, 114, 115, 123, 124, 127, 129, 130, 131, 132, 133, 136, 137, 138, 157, 159, 160, 161, 164, 167, 169, 177, 179, 182, 188, 191, 194, 196, 197, 199, 201, 202, 203], "cuda": [1, 3, 6, 21, 43, 44, 46, 47, 60, 68, 69, 73, 76, 79, 114, 156, 196, 197, 202, 203], "multipl": [1, 3, 11, 12, 13, 14, 19, 46, 47, 58, 75, 80, 102, 105, 106, 114, 115, 138, 179, 188, 194, 197, 202, 204], "infer": [1, 46, 47, 80, 105, 139, 196, 201, 202], "dispatch": 1, "avail": [1, 4, 5, 115, 123, 124, 186, 187, 196, 197, 203], "speed": [1, 2, 7, 19, 196, 197], "up": [1, 2, 3, 7, 8, 19, 191, 196, 197, 201, 203], "avoid": [1, 21, 43, 44, 46, 47, 76, 80, 114, 166, 201], "oom": 1, "error": [1, 3, 6, 9, 10, 21, 43, 44, 46, 47, 82, 126, 196, 197, 202, 203], "choic": [1, 2], "size": [1, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 43, 44, 45, 46, 47, 54, 55, 58, 69, 73, 74, 76, 77, 79, 88, 89, 90, 91, 92, 97, 99, 102, 103, 109, 110, 111, 112, 113, 114, 117, 118, 121, 123, 124, 144, 155, 161, 169, 172, 174, 177, 179, 182, 196, 197, 199, 201, 203, 204], "pass": [1, 3, 13, 18, 21, 27, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 80, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 105, 107, 108, 112, 113, 114, 115, 117, 126, 127, 186, 187, 188, 196, 197, 199, 203], "ie": 1, "store": [1, 11, 12, 13, 14, 18, 21, 27, 33, 37, 38, 39, 43, 44, 46, 47, 80, 91, 102, 169, 172, 174, 177, 179, 182, 194, 196, 197, 202, 203], "while": [1, 3, 6, 21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 136, 137, 196, 197, 204], "wait": [1, 197], "also": [1, 2, 3, 7, 21, 27, 43, 44, 46, 47, 76, 113, 116, 117, 130, 132, 133, 194, 196, 197, 199, 201, 202, 203], "impact": 1, "memori": [1, 19, 21, 37, 43, 44, 46, 47, 60, 69, 73, 76, 79, 80, 114, 188, 194, 196, 204], "manag": [1, 142, 143, 160, 196, 201], "kei": [1, 3, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 33, 43, 44, 46, 47, 57, 58, 66, 69, 73, 75, 76, 79, 80, 86, 91, 104, 114, 115, 116, 117, 121, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 159, 160, 163, 164, 167, 169, 177, 179, 182, 194, 196, 197, 199, 201, 203, 204], "which": [1, 3, 6, 10, 11, 12, 13, 14, 18, 19, 21, 24, 33, 43, 44, 46, 47, 57, 58, 65, 66, 69, 75, 76, 88, 89, 90, 114, 115, 117, 119, 120, 130, 131, 134, 136, 137, 138, 139, 141, 155, 159, 169, 172, 174, 177, 179, 182, 194, 196, 197, 199, 201, 202, 203], "passing_devic": [1, 11, 12, 13, 14, 196, 197, 204], "dure": [1, 11, 12, 13, 14, 43, 44, 46, 47, 76, 160, 164, 196, 203], "A": [1, 3, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 52, 69, 73, 75, 76, 78, 80, 81, 82, 86, 91, 92, 103, 106, 115, 116, 117, 123, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 157, 161, 164, 165, 169, 174, 177, 179, 182, 184, 197, 202, 203], "heurist": [1, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 196, 203], "usual": [1, 3, 5, 6, 43, 44, 46, 47, 106, 169, 177, 179, 182, 191, 194, 203], "same": [1, 3, 13, 21, 43, 44, 46, 47, 65, 66, 75, 76, 80, 92, 103, 196, 197, 199, 201, 202, 203], "storag": [1, 2, 21, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 43, 44, 46, 47, 161, 190, 194, 196, 197], "default": [1, 3, 9, 11, 12, 13, 14, 18, 19, 21, 24, 27, 32, 37, 38, 43, 44, 46, 47, 48, 57, 58, 63, 65, 66, 69, 72, 73, 74, 76, 79, 80, 86, 87, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 105, 106, 107, 108, 110, 112, 113, 114, 115, 118, 119, 120, 121, 127, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 150, 151, 153, 154, 155, 157, 158, 160, 162, 164, 169, 172, 177, 179, 182, 184, 188, 194, 196, 197, 201, 202, 203, 204], "behaviour": [1, 3, 44, 58, 119, 120, 160, 197], "besid": 1, "those": [1, 6, 46, 47, 66, 115, 116, 117, 165, 186, 187, 196, 197, 203], "choos": [1, 196], "follow": [1, 2, 3, 5, 6, 21, 43, 44, 45, 46, 47, 69, 92, 103, 129, 131, 136, 164, 179, 182, 194, 196, 197, 199, 201, 202, 203, 204], "max_frames_per_traj": [1, 11, 12, 13, 14, 166, 196, 204], "frame": [1, 11, 12, 13, 14, 21, 44, 57, 157, 160, 164, 166, 167, 196, 197, 203, 204], "call": [1, 3, 6, 10, 11, 12, 13, 14, 21, 25, 26, 27, 31, 32, 33, 37, 38, 39, 40, 43, 44, 46, 47, 57, 60, 61, 68, 69, 73, 75, 76, 77, 78, 79, 80, 85, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 105, 107, 108, 112, 113, 114, 115, 117, 127, 144, 160, 161, 194, 196, 197, 201, 202, 203], "frames_per_batch": [1, 11, 12, 13, 14, 166, 196, 197, 204], "each": [1, 3, 6, 11, 12, 13, 14, 15, 20, 21, 25, 27, 43, 44, 46, 47, 73, 80, 117, 123, 124, 150, 151, 153, 154, 160, 186, 187, 196, 197, 201, 203, 204], "init_random_fram": [1, 11, 12, 13, 14, 166, 196, 197], "random": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30, 35, 43, 44, 45, 46, 47, 65, 66, 73, 114, 115, 138, 160, 167, 196, 197, 203, 204], "rand_step": [1, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 80, 203, 204], "reset_at_each_it": [1, 11, 12, 13, 14, 196], "split_traj": [1, 11, 12, 13, 14, 196], "pad": [1, 15, 92, 93, 94, 102, 196, 197], "along": [1, 57, 58, 66, 74, 103, 106, 114, 115, 197, 202], "mask": [1, 11, 12, 13, 196, 197, 202, 203, 204], "point": [1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 41, 42, 43, 44, 46, 47, 57, 60, 69, 73, 74, 76, 79, 104, 114, 129, 134, 146, 147, 164, 191, 199, 203], "boolean": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 148, 149, 150, 151, 152, 153, 154, 194], "repres": [1, 3, 11, 12, 13, 14, 27, 43, 44, 46, 47, 115, 123, 124, 141, 201, 202], "valid": [1, 76, 92, 103, 136, 194, 203], "valu": [1, 3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 45, 46, 47, 56, 58, 65, 66, 69, 71, 73, 74, 75, 76, 79, 80, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 109, 110, 111, 114, 115, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 164, 169, 172, 177, 179, 182, 184, 194, 196, 197, 199, 201, 203, 204], "exploration_mod": [1, 11, 13, 160, 190, 196, 197, 201], "explor": [1, 81, 106, 114, 115, 130, 160, 170, 171, 184, 190, 196, 197], "strategi": [1, 194, 196], "reset_when_don": [1, 11, 13], "central": 2, "part": [2, 21, 43, 44, 46, 47, 66, 121, 155, 188, 196, 197, 201, 203], "algorithm": [2, 8, 11, 12, 45, 130, 137, 138, 155, 169, 170, 177, 194, 196, 197, 202, 204], "wide": [2, 3], "we": [2, 3, 4, 6, 8, 18, 21, 43, 44, 46, 47, 69, 80, 91, 102, 191, 194, 196, 197, 199, 201, 202, 203, 204], "veri": [2, 3, 196, 197, 203, 204], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 58], "distribut": [2, 3, 8, 9, 25, 27, 66, 91, 97, 98, 99, 100, 109, 112, 113, 115, 116, 118, 119, 120, 123, 131, 134, 136, 137, 190, 194, 196, 197, 201, 203, 204], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 190, 196, 197], "advis": [2, 203], "share": [2, 37, 38, 39, 40, 46, 47, 80, 88, 89, 90, 188, 199, 201, 203, 204], "due": [2, 3, 203], "lower": [2, 11, 12, 13, 14, 17, 22, 80, 112, 113, 202], "serialis": 2, "memmaptensor": 2, "well": [2, 3, 11, 12, 14, 21, 40, 43, 44, 46, 47, 112, 113, 196, 197, 201, 202, 203, 204], "abil": 2, "specifi": [2, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 77, 91, 114, 115, 196, 201], "file": [2, 5, 6, 194, 200], "locat": [2, 6, 44, 66, 72, 119, 120, 202], "node": [2, 169, 172, 174, 177, 179, 182], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 13, 66, 80, 91, 97, 100, 102, 115, 118, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 196, 197, 203, 204], "liststorag": [2, 25, 26, 27, 32, 161, 190], "were": [2, 6, 46, 47, 196], "found": [2, 5, 6, 9, 18, 21, 27, 43, 44, 46, 47, 80, 115, 132, 137, 196, 197, 201], "rough": 2, "benchmark": [2, 8], "http": [2, 5, 6, 9, 25, 34, 57, 69, 93, 94, 95, 96, 100, 101, 106, 107, 108, 112, 113, 123, 130, 134, 135, 137, 138, 139, 140, 145, 148, 149, 152, 169, 172, 177, 179, 182, 204], "com": [2, 5, 6, 9, 204], "tree": 2, "type": [2, 21, 29, 43, 44, 45, 46, 47, 60, 69, 73, 76, 79, 80, 92, 103, 106, 114, 115, 125, 169, 172, 174, 177, 179, 182, 186, 196, 197, 202, 203], "1x": 2, "lazytensorstorag": [2, 190], "83x": 2, "3": [2, 3, 5, 6, 9, 11, 12, 13, 18, 19, 20, 21, 24, 43, 44, 46, 47, 57, 60, 63, 66, 69, 73, 74, 76, 79, 87, 88, 89, 90, 91, 92, 93, 94, 99, 101, 102, 103, 110, 114, 117, 121, 123, 126, 150, 151, 153, 154, 163, 174, 194, 196, 197, 199, 202, 203, 204], "44x": 2, "parent": [2, 3, 29, 43, 58, 66, 69, 75, 88, 137, 197, 202, 203, 204], "subclass": [2, 3, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 82, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 107, 108, 111, 112, 113, 114, 115, 116, 127, 137, 196], "basic": [2, 45, 203], "properti": [2, 43, 44, 45, 46, 47, 76, 97, 105, 109, 118, 119, 120, 201, 202], "action": [2, 3, 8, 11, 12, 13, 19, 24, 29, 43, 44, 45, 46, 47, 54, 61, 65, 76, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 103, 104, 110, 111, 113, 115, 118, 119, 121, 123, 124, 133, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 169, 172, 174, 177, 179, 182, 184, 188, 194, 196, 197, 199, 201, 202, 203, 204], "shape": [2, 3, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 44, 46, 47, 58, 74, 97, 98, 103, 105, 109, 110, 114, 117, 118, 141, 155, 164, 184, 196, 197, 199, 201, 202, 203, 204], "dtype": [2, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 43, 44, 45, 46, 47, 54, 55, 60, 61, 66, 69, 73, 74, 76, 79, 88, 89, 90, 91, 99, 105, 106, 110, 111, 114, 117, 121, 123, 124, 169, 172, 174, 177, 179, 182, 196, 197, 199, 201, 202, 203, 204], "domain": [2, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 73, 114, 115, 116, 117, 190, 203, 204], "offer": [3, 6, 203], "handl": [3, 21, 43, 44, 46, 47, 80, 103, 164, 186, 187], "differ": [3, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 103, 123, 124, 137, 141, 146, 160, 164, 165, 186, 187, 194, 196, 197, 199, 202, 203], "backend": [3, 6, 194, 196], "dm": [3, 203], "custom": [3, 21, 43, 44, 46, 47, 188], "goal": [3, 196, 197], "abl": [3, 199, 202, 204], "even": [3, 7, 12, 37, 38, 39, 40, 196, 202, 203], "simul": [3, 6, 55, 91, 196], "some": [3, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 69, 93, 115, 116, 117, 155, 166, 194, 196, 197, 201, 203, 204], "box": [3, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "wrapper": [3, 14, 27, 28, 33, 45, 48, 49, 50, 51, 52, 53, 54, 115, 145, 188, 196, 203], "under": [3, 21, 43, 44, 46, 47, 114, 115, 196, 203], "lib": [3, 5, 6, 8, 9, 11, 12, 13, 48, 49, 50, 51, 52, 53, 54, 66, 73, 80, 169, 172, 174, 177, 179, 182, 184, 196, 197, 199, 203, 204], "hope": 3, "imit": 3, "other": [3, 6, 21, 37, 38, 39, 40, 43, 44, 45, 46, 47, 80, 106, 115, 130, 131, 134, 136, 137, 138, 139, 169, 177, 179, 182, 186, 187, 194, 196, 197, 201, 203, 204], "envbas": [3, 11, 12, 13, 14, 44, 46, 47, 65, 75, 76, 80, 82, 91, 104, 160, 167, 169, 170, 171, 172, 174, 177, 179, 182, 184, 186, 187, 188, 190], "torch": [3, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 34, 37, 38, 43, 44, 45, 46, 47, 54, 58, 60, 61, 66, 69, 72, 73, 74, 76, 79, 80, 86, 87, 88, 89, 90, 91, 92, 97, 99, 100, 102, 103, 105, 106, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 132, 155, 163, 169, 172, 174, 177, 179, 182, 184, 194, 196, 197, 199, 201, 202, 203, 204], "nn": [3, 11, 12, 13, 21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 110, 111, 114, 115, 116, 117, 121, 123, 124, 125, 126, 130, 133, 134, 179, 182, 184, 196, 197, 199, 201, 204], "typic": [3, 21, 43, 44, 46, 47, 194], "method": [3, 11, 12, 13, 14, 21, 27, 31, 37, 38, 39, 40, 43, 44, 46, 47, 57, 60, 66, 69, 70, 73, 76, 79, 88, 89, 90, 91, 102, 114, 115, 116, 125, 130, 185, 194, 195, 196, 201, 202, 203], "organis": 3, "allow": [3, 11, 12, 13, 14, 21, 24, 43, 44, 46, 47, 86, 103, 141, 194, 196, 201, 202, 203], "gener": [3, 6, 13, 32, 36, 45, 66, 87, 97, 109, 110, 115, 121, 138, 145, 148, 149, 152, 164, 196, 197, 198, 199, 201, 202, 203, 204], "arbitrari": [3, 24, 46, 47, 196, 197], "input": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 43, 44, 45, 46, 47, 58, 60, 61, 69, 75, 77, 79, 86, 92, 93, 94, 95, 96, 102, 103, 105, 106, 112, 113, 114, 115, 116, 117, 129, 130, 131, 134, 136, 137, 138, 139, 144, 148, 149, 150, 151, 152, 153, 154, 166, 184, 194, 197, 202, 203, 204], "output": [3, 11, 12, 13, 14, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 69, 75, 79, 88, 92, 93, 94, 98, 100, 102, 103, 114, 115, 116, 117, 123, 124, 130, 131, 134, 136, 137, 138, 139, 155, 161, 196, 199, 202, 203, 204], "nest": [3, 18, 21, 43, 44, 46, 47, 194, 197, 202, 204], "attribut": [3, 21, 43, 44, 46, 47, 69, 115, 197, 201], "batch_siz": [3, 11, 12, 13, 18, 25, 26, 28, 31, 32, 33, 43, 45, 54, 55, 73, 88, 89, 90, 91, 99, 110, 111, 114, 117, 121, 123, 124, 155, 161, 169, 172, 174, 177, 179, 182, 196, 197, 199, 201, 202, 203, 204], "togeth": [3, 11, 12, 13, 14, 88, 89, 90, 201], "expect": [3, 6, 18, 21, 29, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 79, 82, 114, 117, 130, 131, 136, 137, 167, 191, 194, 196, 203], "live": [3, 11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 45, 46, 47, 161], "doe": [3, 25, 27, 34, 40, 105, 116, 117, 131, 136, 137, 144, 164, 194, 196, 202, 203], "actual": [3, 6, 11, 12, 14, 43, 44, 46, 47, 166, 196, 197], "respons": [3, 164, 201, 203], "just": [3, 155, 194, 197, 201, 202, 203, 204], "retriev": [3, 31, 32, 33, 43, 44, 46, 47, 58, 66, 86, 91, 115, 131, 136, 137, 145, 146, 147, 169, 172, 174, 177, 179, 182, 188, 194, 202, 203], "care": [3, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 196, 197], "map": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 37, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 88, 89, 90, 114, 115, 117, 123, 161, 190, 196, 197, 201, 202], "desir": [3, 21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 85, 92, 103, 114, 115, 196, 197, 202], "see": [3, 5, 6, 7, 8, 11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 81, 92, 103, 105, 114, 115, 119, 120, 196, 197, 201, 202, 203], "below": [3, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 92, 103, 114, 119, 120, 189, 198], "parametr": [3, 106, 115, 139, 196, 201], "hardwar": 3, "observation_spec": [3, 43, 45, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 73, 74, 75, 76, 77, 79, 91, 167, 184, 196, 199, 203], "compositespec": [3, 43, 45, 73, 87, 91, 110, 117, 190, 196, 203], "all": [3, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 60, 62, 66, 69, 73, 75, 76, 77, 78, 79, 80, 84, 85, 86, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 114, 115, 117, 127, 159, 164, 166, 186, 187, 188, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204], "spec": [3, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 87, 88, 89, 90, 99, 110, 111, 113, 114, 115, 117, 123, 124, 169, 172, 174, 177, 179, 182, 196, 197, 199, 204], "pair": [3, 21, 27, 43, 44, 46, 47, 88, 115, 196, 197, 199, 202, 203], "input_spec": [3, 43, 45, 46, 47, 60, 61, 69, 75, 76, 77, 79, 91, 203], "action_spec": [3, 43, 44, 45, 46, 47, 54, 76, 87, 89, 99, 110, 111, 113, 123, 124, 184, 196, 197, 199, 203, 204], "tensorspec": [3, 16, 17, 18, 19, 20, 22, 23, 24, 30, 43, 45, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 87, 110, 113, 114, 115, 116, 190], "reward_spec": [3, 43, 45, 56, 60, 61, 69, 71, 72, 75, 76, 77, 79, 91, 203], "reward": [3, 11, 12, 13, 21, 29, 43, 44, 45, 46, 47, 54, 56, 60, 61, 69, 71, 72, 75, 76, 77, 78, 79, 80, 86, 91, 132, 133, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 162, 188, 194, 196, 197, 199, 202, 203, 204], "importantli": [3, 115], "4": [3, 6, 11, 12, 13, 19, 24, 45, 48, 49, 50, 53, 57, 80, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 110, 111, 114, 117, 121, 123, 124, 126, 196, 197, 202, 203, 204], "action_s": 3, "simpli": [3, 5, 196, 197, 203], "With": [3, 194, 202, 203], "necessarili": 3, "requir": [3, 6, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 46, 47, 60, 69, 73, 76, 79, 103, 114, 116, 117, 130, 131, 134, 136, 137, 138, 139, 194, 196, 197, 201, 203], "stateless": [3, 46, 47, 75, 203], "set_se": [3, 11, 12, 13, 14, 43, 44, 45, 46, 47, 54, 66, 76, 196, 203, 204], "integ": [3, 11, 12, 13, 14, 20, 21, 24, 25, 26, 27, 40, 43, 44, 46, 47, 66, 92, 103, 161], "seed": [3, 11, 12, 13, 14, 43, 44, 45, 46, 47, 48, 76, 164, 196], "next": [3, 11, 12, 13, 18, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 54, 80, 86, 113, 138, 144, 161, 196, 197, 199, 203, 204], "determinist": [3, 21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 87, 100, 107, 113, 114, 115, 196, 197, 203], "preced": [3, 102, 201], "without": [3, 6, 8, 21, 43, 44, 46, 47, 89, 138, 144, 184, 191, 196, 197, 203], "risk": 3, "overlap": 3, "consecut": [3, 197, 203], "still": [3, 8, 136, 196, 197, 199, 203], "reproduc": 3, "max_step": [3, 43, 44, 45, 46, 47, 86, 196, 197, 203, 204], "maximum": [3, 11, 12, 13, 14, 17, 21, 22, 25, 26, 27, 37, 38, 39, 43, 44, 46, 47, 71, 110, 118, 119, 120, 139, 161, 196, 197, 203, 204], "safemodul": [3, 45, 55, 88, 89, 90, 91, 104, 110, 115, 117, 125, 126, 130, 131, 132, 136, 137, 138, 139, 144, 145, 146, 147, 160, 170, 171, 184, 190, 204], "ani": [3, 18, 21, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 69, 76, 80, 82, 92, 103, 106, 114, 115, 116, 117, 137, 161, 164, 191, 196, 197, 203], "compat": [3, 4, 6, 10, 21, 40, 43, 44, 46, 47, 52, 80, 125, 141, 197, 204], "better": [3, 197], "intens": [3, 7], "gym3": 3, "envpool": 3, "interfac": [3, 103, 105, 201], "simultan": [3, 46, 47], "often": [3, 135, 164, 203], "competit": 3, "advantag": [3, 101, 130, 131, 136, 137, 145, 146, 147, 148, 149, 150, 152, 153, 194, 196, 197, 203], "scale": [3, 66, 72, 88, 89, 90, 100, 110, 112, 113, 115, 117, 119, 120, 162, 167, 169, 177, 179, 182, 188, 196, 197, 201, 204], "varieti": 3, "its": [3, 6, 11, 12, 13, 14, 21, 27, 43, 44, 45, 46, 47, 57, 75, 76, 80, 92, 99, 115, 130, 131, 134, 136, 137, 138, 139, 164, 184, 194, 196, 197, 201, 203], "own": [3, 11, 12, 14, 21, 43, 44, 46, 47, 197, 201], "parallelenv": [3, 11, 12, 13, 14, 47, 185, 190, 196, 197, 199, 203, 204], "As": [3, 43, 44, 46, 47, 115, 196, 197, 203, 204], "inherit": [3, 104, 194, 201, 202], "enjoi": 3, "exact": 3, "Of": [3, 6, 191, 203], "cours": [3, 191, 203], "correspond": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 34, 43, 44, 45, 46, 47, 73, 76, 80, 115, 197], "count": [3, 160, 166, 203], "def": [3, 10, 21, 43, 44, 45, 46, 47, 91, 121, 123, 126, 194, 196, 197, 199, 201, 202, 203, 204], "make_env": [3, 80, 86, 170, 171, 196, 197, 203], "gymenv": [3, 11, 12, 13, 14, 52, 60, 66, 73, 76, 80, 169, 172, 174, 177, 179, 182, 184, 190, 196, 197, 203, 204], "pendulum": [3, 11, 12, 13, 14, 50, 51, 60, 66, 73, 76, 80, 184, 197, 203, 204], "v1": [3, 11, 12, 13, 66, 73, 141, 150, 151, 153, 154, 197, 203, 204], "from_pixel": [3, 48, 49, 169, 177, 179, 182, 196, 197, 203, 204], "9": [3, 6, 21, 80, 196, 197, 202], "81": 3, "0": [3, 5, 6, 9, 10, 20, 21, 24, 25, 27, 34, 43, 44, 45, 46, 47, 54, 56, 58, 60, 63, 65, 66, 69, 73, 74, 76, 79, 80, 86, 91, 92, 93, 94, 96, 100, 103, 105, 106, 112, 113, 114, 117, 118, 119, 120, 127, 130, 131, 136, 137, 138, 139, 140, 144, 155, 162, 164, 184, 188, 194, 196, 197, 199, 200, 201, 202, 203, 204], "print": [3, 5, 6, 11, 12, 13, 18, 19, 21, 24, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 61, 66, 73, 74, 80, 86, 87, 88, 89, 90, 92, 99, 103, 111, 114, 117, 121, 123, 124, 126, 169, 172, 174, 177, 179, 182, 184, 194, 196, 197, 199, 201, 202, 203, 204], "b": [3, 6, 15, 18, 105, 106, 201, 202], "c": [3, 5, 6, 18, 169, 172, 174, 177, 179, 182, 202], "d": [3, 25, 34, 115, 202, 204], "get": [3, 5, 6, 40, 46, 47, 58, 61, 66, 74, 80, 87, 115, 148, 149, 152, 196, 197, 201, 203, 204], "forc": [3, 5, 6, 197], "variou": [3, 11, 12, 13, 14, 130, 131, 134, 136, 137, 138, 139, 186, 187, 196, 197, 203], "reset_work": 3, "fals": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 51, 54, 58, 60, 65, 66, 69, 72, 73, 74, 76, 79, 80, 88, 89, 90, 91, 92, 93, 99, 103, 110, 111, 114, 115, 116, 117, 121, 123, 124, 125, 126, 132, 133, 134, 138, 139, 141, 145, 146, 147, 150, 151, 153, 154, 157, 158, 160, 161, 162, 164, 169, 172, 174, 177, 179, 182, 188, 194, 196, 197, 199, 201, 202, 203, 204], "field": [3, 11, 12, 13, 14, 18, 21, 43, 44, 45, 46, 47, 54, 73, 76, 88, 89, 90, 91, 99, 110, 111, 114, 117, 121, 123, 124, 167, 169, 172, 174, 177, 179, 182, 191, 197, 199, 201, 202, 203, 204], "bool": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 49, 54, 58, 65, 66, 69, 72, 73, 74, 76, 79, 80, 86, 91, 92, 93, 94, 103, 105, 106, 114, 115, 116, 117, 119, 120, 125, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 145, 146, 147, 150, 151, 153, 154, 157, 158, 160, 161, 162, 164, 169, 172, 174, 177, 179, 182, 188, 197, 199, 203, 204], "500": [3, 164, 196, 197, 203, 204], "uint8": [3, 74, 197, 203, 204], "none": [3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 117, 121, 123, 124, 125, 130, 137, 144, 145, 146, 147, 150, 151, 153, 154, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 179, 182, 184, 186, 187, 188, 194, 196, 197, 201, 202, 203, 204], "is_shar": [3, 11, 12, 13, 18, 45, 54, 73, 80, 88, 89, 90, 91, 99, 110, 111, 114, 117, 121, 123, 124, 169, 172, 174, 177, 179, 182, 197, 199, 201, 202, 203, 204], "note": [3, 11, 12, 13, 14, 21, 43, 44, 46, 47, 80, 115, 196, 197, 199, 201, 202, 203], "launch": 3, "quit": [3, 196, 197, 203], "mani": [3, 131, 136, 137, 138, 202, 203], "import": [3, 5, 6, 9, 11, 12, 13, 25, 27, 34, 44, 45, 46, 47, 66, 73, 80, 87, 88, 89, 90, 91, 99, 103, 110, 111, 114, 117, 121, 123, 124, 131, 157, 160, 169, 172, 174, 177, 179, 182, 184, 196, 197, 199, 201, 202, 203, 204], "start": [3, 11, 86, 159, 196, 197, 203], "bottleneck": 3, "why": [3, 196, 203], "so": [3, 5, 6, 9, 21, 43, 44, 46, 47, 80, 116, 117, 196, 203], "slow": 3, "onc": [3, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 194, 196, 197, 203], "great": [3, 6, 7, 202, 204], "speedup": [3, 203], "anoth": [3, 43, 44, 46, 47, 75, 103, 130, 131, 134, 136, 137, 138, 139, 196, 199, 202, 203], "thing": [3, 6, 197, 203], "creat": [3, 5, 6, 9, 11, 12, 14, 21, 32, 43, 44, 46, 47, 69, 75, 76, 80, 86, 92, 93, 94, 95, 96, 101, 103, 104, 115, 133, 134, 138, 167, 170, 171, 184, 186, 187, 196, 197, 201, 202, 203, 204], "misspecifi": 3, "caus": [3, 6], "breakag": 3, "prealloc": 3, "In": [3, 6, 9, 10, 11, 12, 14, 21, 43, 44, 46, 47, 60, 69, 73, 75, 76, 79, 103, 113, 114, 117, 119, 120, 129, 165, 186, 187, 188, 196, 197, 199, 202, 203], "obj": [3, 114, 115, 116], "check_env_spec": [3, 190], "rais": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 62, 76, 82, 126, 196], "assert": [3, 5, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 44, 80, 82, 86, 155, 163, 196, 197, 199, 201, 202, 203], "mismatch": [3, 202], "serialenv": [3, 190, 203], "mostli": [3, 14, 203], "purpos": [3, 6, 184, 202, 203], "want": [3, 5, 6, 196, 202, 203, 204], "assess": [3, 196], "subprocess": 3, "case": [3, 6, 10, 11, 12, 13, 14, 18, 25, 27, 34, 43, 44, 46, 47, 76, 103, 114, 115, 117, 129, 155, 165, 186, 187, 188, 194, 196, 201, 202, 203], "raw": [3, 119, 120], "must": [3, 6, 11, 12, 13, 14, 18, 21, 37, 38, 39, 40, 43, 44, 46, 47, 66, 73, 76, 92, 103, 114, 115, 123, 124, 148, 149, 150, 151, 152, 153, 154, 155, 160, 164, 165, 169, 172, 174, 177, 179, 182, 196, 197, 199, 201, 202, 204], "treat": 3, "To": [3, 5, 6, 21, 32, 43, 44, 46, 47, 80, 88, 89, 90, 164, 196, 197, 201, 203, 204], "logic": 3, "torchvis": [3, 203, 204], "transformedenv": [3, 60, 65, 66, 73, 75, 80, 169, 172, 174, 177, 179, 182, 190, 196, 197, 199, 203, 204], "primit": [3, 196, 197], "compos": [3, 21, 32, 35, 36, 41, 43, 44, 46, 47, 75, 76, 80, 169, 172, 174, 177, 179, 182, 190, 197, 199, 203, 204], "built": [3, 6, 180, 184, 185, 188, 203], "base_env": [3, 73, 196, 197, 203, 204], "totensorimag": [3, 174, 190, 197, 203, 204], "in_kei": [3, 11, 12, 13, 45, 56, 57, 58, 59, 61, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 79, 80, 87, 88, 89, 90, 91, 110, 114, 115, 117, 121, 125, 126, 132, 133, 179, 182, 184, 196, 197, 199, 201, 203, 204], "resiz": [3, 190, 197, 203], "64": [3, 93, 94, 101, 196, 197, 199, 203, 204], "By": [3, 24, 44, 46, 47, 115, 160, 188, 202, 203], "now": [3, 6, 196, 199, 201, 202, 203], "appar": [3, 157], "bring": [3, 203], "signific": [3, 203], "kind": [3, 29, 86], "consult": 3, "achiev": [3, 21, 43, 44, 46, 47, 194, 201, 202, 203], "interest": [3, 46, 47, 115, 203], "abov": [3, 6, 21, 43, 44, 46, 47, 119, 120, 129, 194, 196, 197, 203], "resize_par": 3, "sinc": [3, 6, 21, 43, 44, 45, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 196, 197, 203, 204], "out_kei": [3, 11, 12, 13, 45, 46, 47, 56, 58, 63, 67, 69, 70, 71, 74, 75, 79, 87, 88, 89, 90, 91, 110, 114, 115, 117, 121, 123, 124, 125, 126, 160, 184, 196, 199, 201, 203, 204], "keyword": [3, 21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 115, 185, 196, 201, 203], "easi": [3, 197, 202, 203], "root": [3, 119, 120, 203], "graph": [3, 142, 143], "inv": 3, "appli": [3, 21, 31, 32, 33, 43, 44, 46, 47, 76, 119, 159, 194, 196, 197, 201, 203, 204], "revers": 3, "order": [3, 13, 21, 24, 31, 32, 33, 43, 44, 46, 47, 76, 114, 116, 117, 201], "chain": [3, 32, 60, 92, 117, 203], "taken": [3, 43, 44, 46, 47, 197], "includ": [3, 6, 8, 21, 37, 38, 39, 40, 43, 44, 45, 46, 47, 76, 80, 166, 194, 196, 197, 202, 203], "invers": [3, 128], "through": [3, 13, 46, 47, 103, 115, 116, 117, 127, 196, 197, 199, 201, 203], "in_keys_inv": [3, 61, 75, 196, 199, 203], "append_transform": [3, 31, 32, 33, 69, 73, 196, 203, 204], "doubletofloat": [3, 169, 172, 177, 179, 182, 190, 196, 199], "float32": [3, 11, 12, 13, 18, 25, 29, 34, 45, 54, 61, 66, 73, 74, 88, 89, 90, 91, 99, 110, 111, 114, 117, 121, 123, 124, 169, 172, 174, 177, 179, 182, 197, 199, 201, 202, 203, 204], "float64": [3, 21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 199, 203], "torchrl": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 198, 199, 200, 201, 202], "against": [4, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 82, 114, 115], "latest": [4, 9, 204], "guarante": [4, 21, 37, 38, 39, 40, 43, 44, 46, 47, 80, 204], "wa": [4, 6, 43, 44, 46, 47, 76, 135, 140, 196, 197, 199, 204], "releas": [4, 6, 9, 21, 43, 44, 46, 47, 76, 204], "howev": [4, 6, 21, 43, 44, 46, 47, 76, 196, 197, 202, 203], "project": [4, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 114, 115, 197, 203, 204], "willing": 4, "keep": [4, 6, 12, 69, 79, 80, 157, 164, 197, 202, 203, 204], "backward": [4, 21, 43, 44, 46, 47, 80, 196, 197, 202], "older": [4, 6], "If": [4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 43, 44, 45, 46, 47, 58, 59, 65, 69, 75, 76, 79, 80, 92, 102, 103, 114, 115, 116, 117, 126, 127, 129, 144, 153, 154, 159, 161, 164, 165, 167, 169, 177, 179, 182, 184, 188, 191, 196, 197, 199, 201, 202, 203, 204], "you": [4, 5, 6, 7, 9, 21, 43, 44, 46, 47, 80, 191, 196, 197, 199, 202, 203, 204], "feel": [4, 191, 204], "free": [4, 6, 130, 137, 194, 204], "gladli": 4, "instruct": [5, 9], "prepar": 5, "conda": [5, 6, 191], "assum": [5, 18, 24, 33, 44, 46, 47, 69, 73, 79, 102, 150, 151, 153, 154, 196, 197, 199], "let": [5, 6, 21, 43, 44, 46, 47, 160, 196, 197, 199, 201, 202, 203, 204], "n": [5, 6, 16, 19, 21, 24, 43, 44, 46, 47, 57, 115, 130, 144, 194, 196, 197, 202, 203], "7": [5, 9, 19, 24, 91, 92, 102, 103, 196, 197, 204], "cmake": 5, "14": [5, 10, 66, 197], "activ": [5, 6, 8, 92, 100, 103, 137, 204], "sim": 5, "bullet": 5, "physic": [5, 6, 194, 196], "headless": [5, 6], "mode": [5, 13, 21, 43, 44, 46, 47, 76, 80, 83, 85, 97, 109, 115, 118, 119, 120, 160, 196, 197, 203, 204], "cluster": [5, 6, 191], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 102, 126], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 19], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 21, 43, 44, 46, 47, 196, 203], "command": [5, 6, 9, 203], "more": [5, 7, 11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 81, 103, 105, 114, 123, 130, 134, 137, 145, 148, 149, 152, 159, 161, 172, 191, 194, 196, 197, 199, 201, 202, 203], "detail": [5, 6, 21, 43, 44, 46, 47, 76, 123, 130, 134, 137, 172, 191, 199, 201, 202], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 190], "_has_habitat": 5, "check": [5, 6, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 58, 62, 82, 114, 115, 125, 196, 197, 199, 203], "_env": [5, 203], "available_env": [5, 48, 49, 50, 51, 53, 54, 203], "startswith": 5, "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 21, 43, 44, 46, 47, 76], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "solut": [5, 6, 8, 191, 194, 204], "debug": [5, 203], "link": [5, 6], "right": [5, 6, 102, 196, 197, 203], "replac": [5, 6, 21, 197], "path": [5, 6, 21, 37, 43, 44, 46, 47, 69, 79, 164, 194], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 21, 43, 44, 46, 47, 48, 76, 130, 131, 134, 136, 137, 138, 139, 158, 159, 169, 172, 174, 177, 179, 182, 194, 196, 197, 201, 203], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "config": [5, 6, 167, 169, 170, 171, 172, 174, 177, 179, 180, 182, 185], "var": [5, 6, 21, 43, 44, 46, 47, 76], "ld_preload": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 88, 89, 90, 199, 203], "joint": [6, 197], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 27, 68, 69, 79, 88, 89, 90, 196], "develop": [6, 204], "robot": [6, 69, 79], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 21], "area": 6, "demand": [6, 203], "fast": [6, 8, 138, 196, 197], "accur": [6, 196], "articul": 6, "interact": [6, 13, 115, 203], "recent": [6, 203], "acquir": [6, 196], "access": [6, 21, 43, 44, 46, 47, 69, 188, 191, 202], "whomev": 6, "licenc": 6, "incorpor": [6, 196], "make": [6, 21, 40, 43, 44, 46, 47, 51, 54, 66, 69, 82, 86, 105, 115, 137, 171, 188, 196, 197, 199, 201, 202, 203, 204], "relianc": 6, "obsolet": 6, "seri": [6, 24, 41, 42, 47, 65, 75, 203], "legaci": 6, "document": [6, 21, 43, 44, 46, 47, 76, 204], "capabl": [6, 194, 196, 199, 203], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 196], "gpu": [6, 7, 21, 43, 44, 46, 47, 203], "our": [6, 196, 197, 199, 201, 202, 204], "advic": [6, 203], "sudo": [6, 191], "enabl": [6, 160], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 46, 75, 79, 132, 194, 196, 203], "awar": [6, 37, 38, 39, 40], "fact": [6, 197, 203], "indent": 6, "workflow": [6, 88, 89, 90], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 21, 43, 44, 46, 47, 76, 88, 89, 90, 92, 103, 160, 196, 201, 203], "tell": 6, "variabl": [6, 19, 24, 88, 89, 90, 138, 194, 201], "mujoco_gl": 6, "pyopengl_platform": 6, "deactiv": 6, "pre": [6, 21, 38, 43, 44, 46, 47, 69, 79, 203], "binari": [6, 16, 24, 56, 123, 124], "need": [6, 9, 21, 40, 43, 44, 46, 47, 60, 69, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 105, 107, 108, 112, 113, 114, 127, 129, 138, 144, 164, 188, 196, 201, 202, 203, 204], "These": [6, 203], "instead": [6, 19, 21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 188, 196, 197, 201, 203], "refer": [6, 21, 43, 44, 46, 47, 76, 80, 91, 100, 107, 108, 112, 113, 123, 130, 134, 137, 145, 148, 149, 152, 172], "setup": 6, "mkdir": 6, "cd": 6, "here": [6, 8, 9, 196, 197, 199, 201, 202, 203, 204], "tag": [6, 188], "earlier": [6, 11, 12, 13, 14, 196], "roboti": 6, "u": [6, 9, 196, 201, 203, 204], "download": [6, 9, 69, 79, 196, 197, 198, 199, 201, 202, 203, 204], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 44, 91, 196, 197], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": 6, "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "too": [6, 119, 120, 130, 131, 134, 136, 137, 138, 139, 196, 197, 203], "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 202], "hard": [6, 135, 197, 203], "chang": [6, 21, 37, 38, 39, 40, 43, 44, 46, 47, 76, 80, 196, 202, 203], "later": [6, 96, 115, 196, 197], "known": [6, 7, 196], "try": [6, 126, 197, 202, 203, 204], "nativ": [6, 8, 43, 44, 46, 47, 57, 201], "usag": [6, 139], "local": [6, 9, 13, 21, 31, 43, 44, 46, 47, 76], "modifi": [6, 21, 43, 44, 46, 47, 60, 69, 73, 75, 76, 79, 114, 166, 169, 177, 179, 182, 196, 201], "nvidia": 6, "driver": 6, "hack": 6, "line": [6, 21, 43, 44, 46, 47], "adatp": 6, "script": [6, 169, 172, 174, 177, 179, 182, 184, 188, 194, 196, 197, 199, 201, 202, 203, 204], "go": [6, 201, 203], "unnot": 6, "until": 6, "complet": [6, 8, 44, 191, 197, 199], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "give": [6, 45, 191, 196, 197, 204], "troubleshoot": 6, "gl": 6, "h": [6, 59, 70, 74], "eglshim": 6, "10": [6, 18, 45, 74, 91, 102, 138, 139, 155, 194, 196, 197, 201, 202, 203, 204], "fatal": 6, "No": 6, "directori": [6, 37, 194], "sure": [6, 40, 86, 188, 196, 201, 202, 203, 204], "glu": 6, "38": [6, 197], "disappear": [6, 199], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "python3": [6, 9], "8": [6, 88, 89, 90, 92, 93, 94, 101, 103, 110, 114, 117, 197, 201, 203, 204], "site": 6, "__init__": [6, 45, 91, 121, 123, 126, 194, 201, 203], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "saniti": [6, 82], "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 21, 43, 44, 46, 47, 76, 196, 202, 203], "job": [6, 202], "schedul": [6, 160], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": [6, 197], "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": 6, "opengl": 6, "global": [6, 115, 194, 196, 201], "cuda_visible_devic": 6, "id": [6, 15, 138, 179], "around": [6, 14, 27, 28, 33, 45, 115, 145, 203], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 48, 59, 69, 74, 79, 103, 197, 202, 203], "black": 6, "read": [6, 11, 12, 13, 14, 37, 38, 39, 40, 44, 46, 47, 75, 88, 89, 90, 109, 114, 115, 117, 130, 131, 134, 136, 137, 138, 139, 164, 169, 177, 179, 182, 196, 197, 199, 201, 203], "miss": [6, 10, 18, 21, 43, 44, 46, 47, 76, 116, 117, 191], "onscreen": 6, "101": 6, "displai": [6, 164, 194, 197], "correctli": [6, 21, 43, 44, 46, 47], "ask": [7, 203], "core": [7, 169, 172, 174, 177, 179, 182, 194, 204], "twice": [7, 139], "much": [7, 25, 27, 34, 136, 137, 202, 203], "spin": [8, 203], "hug": 8, "face": [8, 197, 203], "syllabu": 8, "lectur": 8, "best": [8, 197, 204], "awesom": [8, 202], "curat": 8, "discuss": 8, "reddit": 8, "maintain": 8, "reagent": 8, "product": [8, 186, 187], "orient": [8, 203], "stabl": [8, 9, 196], "baselines3": 8, "tf": 8, "agent": [8, 31, 106], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 45, 203, 204], "dopamin": 8, "prototyp": [8, 115, 116, 190, 201, 204], "salina": 8, "flexibl": [8, 194, 201, 203], "simpl": [8, 21, 24, 43, 44, 46, 47, 93, 115, 196, 197, 202, 203], "sequenti": [8, 21, 43, 44, 46, 47, 116, 117, 201, 202, 203], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 204], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 24, 29, 108, 114, 115, 117, 123, 124, 196, 203, 204], "mbrl": [8, 45], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 197], "relat": [9, 196], "689": 9, "13": [9, 10, 197, 201], "lead": [9, 10, 18, 119, 120, 204], "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 196, 197, 198, 199, 201, 202, 203, 204], "24": [9, 197], "11": [9, 19, 24, 74, 91, 197], "2022": [9, 204], "12": [9, 197, 202], "pip": [9, 203, 204], "solv": [9, 191, 196, 197], "pip3": 9, "extra": [9, 21, 43, 44, 46, 47, 80], "url": 9, "org": [9, 25, 34, 57, 69, 93, 94, 95, 96, 100, 101, 106, 107, 108, 112, 113, 123, 130, 134, 135, 137, 139, 140, 145, 148, 149, 152, 169, 172, 177, 182], "whl": 9, "There": [9, 194, 197, 203], "upgrad": 9, "previou": [9, 21, 113, 196, 201, 203], "relas": 9, "functorch": [9, 114, 117, 125, 197, 204], "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 33, 37, 43, 44, 46, 47, 48, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 79, 80, 83, 85, 87, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 110, 114, 115, 121, 123, 124, 125, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 144, 146, 147, 158, 159, 160, 163, 167, 169, 172, 177, 179, 180, 182, 188, 196], "from_vers": 10, "to_vers": 10, "decor": 10, "fit": [10, 66, 194], "explicit": [10, 102, 196, 197], "intersect": 10, "rang": [10, 19, 80, 86, 136, 194, 196, 197, 201, 202, 204], "longer": [10, 197], "fun": [10, 201, 202], "self": [10, 21, 27, 43, 44, 45, 46, 47, 60, 69, 73, 76, 79, 91, 114, 121, 123, 126, 194, 201, 202, 204], "x": [10, 15, 18, 21, 74, 92, 98, 101, 102, 103, 123, 126, 127, 129, 148, 149, 150, 151, 152, 153, 154, 164, 197, 201, 204], "indic": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 58, 73, 92, 103, 127, 161, 167, 188, 191, 194, 196, 201, 202, 203], "doesn": 10, "create_env_fn": [11, 12, 13, 14, 46, 47, 196, 204], "sequenc": [11, 12, 13, 14, 18, 20, 25, 26, 28, 32, 41, 42, 56, 57, 58, 59, 61, 63, 64, 66, 67, 70, 71, 72, 74, 75, 80, 87, 92, 97, 103, 109, 110, 115, 116, 117, 121, 159, 161, 163, 164, 169, 177, 179, 182, 197, 199, 201, 203], "callabl": [11, 12, 13, 14, 21, 25, 26, 27, 28, 32, 43, 44, 45, 46, 47, 129, 130, 137, 161, 170, 171, 186, 187, 188], "union": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 33, 34, 43, 44, 46, 47, 55, 60, 66, 69, 72, 76, 79, 80, 92, 93, 94, 95, 96, 97, 101, 102, 103, 105, 106, 109, 110, 114, 115, 116, 118, 119, 120, 125, 126, 128, 133, 134, 135, 138, 139, 140, 145, 146, 147, 169, 170, 171, 172, 177, 179, 180, 182, 184, 185, 186, 187, 188], "tensordictbas": [11, 12, 13, 14, 15, 18, 21, 27, 31, 33, 43, 44, 46, 47, 57, 60, 65, 73, 75, 77, 78, 80, 81, 86, 91, 104, 114, 115, 130, 131, 132, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 164], "total_fram": [11, 12, 13, 14, 164, 166, 184, 194, 196, 197, 204], "int": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 57, 58, 59, 60, 63, 65, 66, 69, 70, 76, 77, 79, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 118, 119, 123, 124, 130, 131, 132, 136, 137, 138, 139, 155, 156, 157, 160, 161, 164, 165, 169, 172, 177, 179, 180, 182, 186, 187, 188], "create_env_kwarg": [11, 12, 13, 14, 46, 47, 196], "dict": [11, 12, 13, 14, 18, 19, 21, 32, 43, 44, 46, 47, 76, 80, 92, 93, 94, 95, 96, 101, 102, 103, 115, 160, 170, 171, 172, 179, 182, 186, 187, 188, 203], "200": [11, 12, 13, 14, 21, 43, 44, 46, 47, 93, 94, 100, 112, 113, 196], "postproc": [11, 12, 13, 14, 196, 197], "pin_memori": [11, 13, 14, 25, 26, 27, 28, 32, 46, 47, 68, 161, 196, 204], "init_with_lag": [11, 12, 13, 14], "given": [11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 60, 66, 69, 73, 76, 79, 86, 91, 100, 114, 115, 116, 117, 123, 124, 129, 132, 133, 144, 145, 146, 147, 156, 160, 184, 194, 196, 197, 201, 203], "datacollector": [11, 12, 13, 14, 115], "separ": [11, 12, 14, 15, 132, 138, 139, 196, 203], "synchron": [11, 186, 187], "item": [11, 27, 62, 132, 133, 155, 194, 196, 197, 202], "between": [11, 12, 13, 14, 21, 43, 44, 46, 47, 65, 71, 74, 76, 82, 92, 103, 115, 136, 141, 160, 164, 196, 197, 201, 202, 203], "recept": 11, "safe": [11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 114, 115, 125, 196, 204], "onlin": [11, 14, 130, 137, 155, 188], "env_mak": [11, 12, 13, 184, 203], "linear": [11, 12, 13, 21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 79, 87, 88, 89, 90, 91, 92, 103, 105, 106, 110, 111, 112, 113, 114, 117, 121, 123, 124, 126, 184, 199, 201, 204], "2000": [11, 12, 13, 196], "50": [11, 12, 13, 197], "enumer": [11, 12, 13, 21, 43, 44, 46, 47, 196, 197, 204], "break": [11, 12, 13, 21, 43, 44, 46, 47, 80, 196, 197, 201, 204], "step_count": [11, 12, 13, 196, 197, 204], "traj_id": [11, 12, 13, 15, 196, 197, 204], "shutdown": [11, 12, 13, 14, 196, 204], "del": [11, 12, 13, 196, 204], "bound": [11, 12, 13, 14, 17, 18, 21, 22, 43, 44, 46, 47, 80, 112, 113, 114, 115, 203], "total": [11, 12, 13, 14, 44, 131, 136, 137, 155, 157, 160, 164, 166, 167, 196, 197, 199, 200, 201, 202, 203, 204], "greater": [11, 12, 14, 196, 197, 204], "close": [11, 12, 13, 14, 44, 131, 136, 137, 196, 204], "signal": [11, 12, 14, 196], "sent": [11, 12, 14, 37, 38, 46, 47, 80, 197, 202], "server": [11, 12, 14], "per": [11, 12, 13, 14, 46, 100, 164, 186, 187, 196, 197, 204], "span": [11, 12, 13, 14], "unless": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 201], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 13, 14, 21, 196], "wrap": [11, 12, 13, 14, 21, 43, 44, 46, 47, 82, 88, 89, 90, 196, 197, 201, 203], "track": [11, 12, 13, 14, 80, 157, 196, 197, 202], "independ": [11, 12, 13, 14, 75, 139, 194, 196, 204], "neg": [11, 12, 13, 14, 25, 27, 34, 196], "ignor": [11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 201, 202, 203], "length": [11, 12, 13, 14, 16, 46, 47, 91, 92, 93, 95, 98, 103, 114, 155, 196, 197, 202, 203], "mainli": [11, 12, 13, 14], "offlin": [11, 12, 13, 14, 194, 204], "postprocessor": [11, 12, 14], "format": [11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 203], "accord": [11, 12, 13, 14, 25, 27, 66, 72, 105, 112, 119, 120, 201, 202], "split_trajectori": [11, 12, 13, 14, 190], "inform": [11, 12, 13, 14, 21, 43, 44, 46, 47, 92, 103, 194, 197], "place": [11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 80, 114, 165, 166, 197, 201], "loop": [11, 12, 13, 14, 44, 86, 164, 194, 196, 199, 202], "accommod": [11, 12, 13, 14], "kept": [11, 12, 13, 14, 46, 47, 75, 86, 119, 120], "origin": [11, 12, 13, 14, 69, 76, 79, 114, 115, 135, 137, 179, 182, 199, 202, 203], "long": [11, 12, 13, 14, 19, 24, 197, 202], "updat": [11, 12, 13, 14, 21, 25, 27, 34, 43, 44, 45, 46, 47, 76, 78, 80, 91, 114, 115, 130, 135, 137, 140, 145, 146, 147, 160, 164, 165, 170, 171, 183, 184, 194, 196, 197, 201, 203, 204], "everi": [11, 12, 14, 18, 21, 24, 40, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 80, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 164, 194, 196, 197, 202], "truncat": [11, 12, 13, 14, 120, 203], "help": [11, 12, 13, 14, 21, 43, 44, 46, 47, 191, 196], "desynchron": [11, 12, 13, 14], "match": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 92, 97, 103, 114, 115, 118, 136, 138, 139, 165, 197, 199, 201, 202, 203, 204], "load_state_dict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 80, 194], "state_dict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 80, 188, 194, 203], "ordereddict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 80], "load": [11, 12, 13, 14, 25, 26, 27, 32, 49, 161, 188, 194, 197], "form": [11, 12, 14, 21, 25, 26, 27, 32, 43, 44, 46, 47, 80, 129, 131, 136, 137, 161, 164], "worker0": [11, 12, 14], "state_dict0": [11, 12, 14], "worker1": [11, 12, 14], "state_dict1": [11, 12, 14], "reset_idx": [11, 12, 14], "static_se": [11, 12, 13, 14, 43, 44, 46, 47, 76], "increment": [11, 12, 13, 14, 43, 44, 46, 47, 136], "last": [11, 12, 13, 14, 21, 43, 45, 63, 92, 102, 103, 107, 197, 203, 204], "env_fn": [11, 12, 13, 14, 186, 187], "v0": [11, 12, 14, 44, 50, 51, 53, 54, 60, 76, 80, 184], "env_fn_parallel": [11, 12, 13, 14], "6": [11, 12, 13, 14, 54, 66, 92, 97, 102, 103, 118, 121, 169, 172, 174, 177, 179, 182, 196, 197, 201, 202, 203, 204], "out_se": [11, 12, 13, 14, 203], "shut": [11, 12, 13, 14], "down": [11, 12, 13, 14], "irrevers": [11, 12, 14], "arg": [12, 18, 21, 31, 37, 38, 43, 44, 45, 46, 47, 52, 69, 76, 77, 78, 79, 87, 88, 92, 99, 103, 111, 157, 164, 188], "kwarg": [12, 13, 14, 18, 21, 31, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 73, 76, 77, 78, 79, 87, 88, 92, 93, 94, 95, 96, 99, 101, 103, 104, 109, 110, 111, 115, 118, 120, 131, 136, 144, 157, 164, 169, 170, 171, 172, 177, 179, 182, 185, 186, 187], "envcreat": [13, 184, 185, 188, 196, 197, 203, 204], "return_in_plac": 13, "return_same_td": 13, "stop": [13, 43, 44, 46, 47, 203, 204], "equat": [13, 129, 131, 140], "exce": 13, "batcher": 13, "yield": [13, 21, 43, 44, 46, 47], "cautious": [13, 137], "ad": [13, 21, 25, 26, 27, 28, 31, 32, 33, 34, 43, 44, 46, 47, 76, 105, 106, 131, 136, 137, 161, 196, 203], "whole": [13, 21, 43, 44, 46, 47, 76, 155, 197], "content": [13, 92, 103, 197, 202, 204], "ident": [13, 46, 47, 186, 187, 196, 201, 202], "chunk": 13, "policy_state_dict": 13, "env_state_dict": 13, "singl": [14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 57, 58, 74, 92, 102, 103, 117, 134, 138, 150, 151, 153, 154, 161, 179, 188, 196, 197, 199, 201], "paradigm": 14, "prefer": 14, "mere": 14, "rollout_tensordict": 15, "zero": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 58, 66, 91, 102, 127, 201, 202, 204], "max": [15, 24, 118, 119, 120, 131, 138, 139, 196], "durat": [15, 197], "int64": [16, 19, 20, 24, 99, 111, 123, 124, 174, 197, 203], "discret": [16, 19, 20, 24, 109, 123, 124, 134], "vector": [16, 24, 46, 47, 93, 95, 103, 147, 153, 154, 190, 196, 197, 199, 201, 203], "assert_is_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "belong": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "otherwis": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 66, 73, 76, 80, 119, 120, 139, 160, 194, 196, 203], "encod": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 99, 108, 109, 111, 112, 123, 124, 129, 201], "val": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 204], "ndarrai": [16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30, 44], "np": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 44, 196], "slice": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 202], "tensor_to_index": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "is_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 203], "back": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 114, 115, 196], "rand": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 45, 54, 91, 203, 204], "uniform": [16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 34], "unbound": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 202], "to_numpi": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "transformed_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 75, 76, 118, 188], "type_check": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "whose": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 196], "fill": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 73, 202], "minimum": [17, 22, 71, 100, 110, 118, 119, 120, 127, 129, 139, 155, 196, 203, 204], "float": [17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 43, 44, 46, 47, 60, 61, 66, 69, 71, 72, 73, 74, 76, 79, 80, 97, 100, 105, 106, 112, 113, 114, 118, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 161, 162, 196, 197, 203], "unidimension": [17, 24, 30, 202], "upper": [17, 22], "composit": [18, 203], "unnam": 18, "tupl": [18, 21, 25, 32, 43, 44, 46, 47, 55, 66, 93, 102, 103, 132, 173, 175, 178, 181, 202], "effect": [18, 21, 43, 44, 46, 47, 76, 164, 197, 203], "cannot": [18, 202], "pixels_spec": 18, "ndboundedtensorspec": [18, 88, 89, 90, 110, 190, 203, 204], "32": [18, 92, 93, 94, 101, 103, 107, 108, 196, 197, 203, 204], "observation_vector_spec": 18, "33": [18, 21, 43, 44, 46, 47, 92, 103, 197], "composite_spec": 18, "observation_vector": [18, 58, 169, 172, 177, 179, 182, 196], "within": [18, 21, 33, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 80, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 204], "randn": [18, 66, 87, 88, 89, 90, 99, 102, 110, 111, 114, 117, 121, 123, 124, 163, 201, 202, 203, 204], "td_project": 18, "modif": [18, 21, 43, 44, 46, 47, 196, 202], "ob": [18, 61, 66, 74, 121, 196, 199, 203, 204], "yield_nesting_kei": 18, "keysview": 18, "selected_kei": [18, 46, 47, 196], "altern": [19, 129, 197, 202], "onehottensorspec": 19, "categor": [19, 24, 109, 123, 124], "larg": 19, "action_valu": [19, 24, 99, 111, 123, 124, 174, 197], "arang": [19, 24, 99, 123, 155], "view": [19, 21, 24, 43, 44, 46, 47, 103, 123, 196, 202, 203, 204], "argmax": [19, 99, 111, 123, 124], "dim": [19, 58, 102, 188, 196, 202], "chosen_action_valu": [19, 24, 111, 174, 197], "outcom": [19, 24, 97, 118], "nvec": 20, "use_regist": [20, 24], "concaten": [20, 57, 58, 66, 75, 103, 117, 196, 197, 202, 203], "hot": [20, 24, 99, 109, 111, 123, 124], "cardin": [20, 123, 124], "element": [20, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 92, 114, 115, 155, 161, 196, 203], "gamma": [21, 130, 131, 132, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 184, 196, 197, 204], "present": [21, 25, 34, 43, 44, 46, 47, 93, 94, 95, 96, 101, 106, 114, 115, 116, 117, 130, 131, 134, 136, 137, 138, 139, 188, 194, 196, 199, 204], "sutton": 21, "r": [21, 66, 115, 129, 144, 203], "1988": 21, "predict": [21, 100, 104, 134, 139, 144], "tempor": [21, 146], "44": [21, 197], "discount": [21, 130, 131, 132, 133, 134, 136, 137, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 196, 197], "factor": [21, 106, 119, 120, 130, 131, 132, 133, 134, 136, 137, 138, 196, 197, 203], "ahead": [21, 203], "add_modul": [21, 43, 44, 46, 47], "add": [21, 25, 26, 27, 28, 31, 32, 33, 41, 42, 43, 44, 46, 47, 105, 130, 159, 161, 196, 197, 202, 204], "child": [21, 43, 44, 46, 47, 202], "current": [21, 43, 44, 46, 47, 52, 76, 83, 100, 102, 113, 123, 124, 169, 177, 194, 196, 203, 204], "fn": [21, 43, 44, 46, 47, 186, 187], "recurs": [21, 43, 44, 46, 47], "submodul": [21, 43, 44, 46, 47], "children": [21, 43, 44, 46, 47], "init": [21, 43, 44, 46, 47, 196, 197], "no_grad": [21, 43, 44, 46, 47, 196, 197], "init_weight": [21, 43, 44, 46, 47], "m": [21, 43, 44, 46, 47, 115, 196, 197], "fill_": [21, 43, 44, 46, 47, 197, 202, 203], "net": [21, 43, 44, 46, 47, 102, 138, 179, 184, 197, 201, 204], "in_featur": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 88, 92, 93, 94, 95, 96, 102, 103, 105, 106, 114, 201, 204], "out_featur": [21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 79, 88, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 114, 196, 197, 201, 204], "bia": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 92, 100, 103, 105, 106, 114, 127, 128, 129, 197, 204], "requires_grad": [21, 43, 44, 46, 47, 196], "bfloat16": [21, 43, 44, 46, 47], "cast": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 80, 114, 169, 172, 174, 177, 179, 182, 202, 203], "datatyp": [21, 43, 44, 46, 47], "direct": [21, 43, 44, 46, 47, 197], "member": [21, 43, 44, 46, 47], "xdoctest": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "skip": [21, 43, 44, 46, 47, 76, 115, 157, 160], "buf": [21, 43, 44, 46, 47], "20l": [21, 43, 44, 46, 47], "1l": [21, 43, 44, 46, 47], "5l": [21, 43, 44, 46, 47], "immedi": [21, 43, 44, 46, 47, 144], "associ": [21, 43, 44, 46, 47, 112, 188, 201], "construct": [21, 43, 44, 46, 47, 113, 115, 164, 169, 177, 201, 203], "copi": [21, 43, 44, 46, 47, 76, 196, 197, 202], "doubl": [21, 23, 30, 43, 44, 46, 47, 60, 61, 69, 73, 74, 76, 79, 114, 133, 134, 135, 138, 140, 196, 203], "eval": [21, 43, 44, 46, 47, 76, 80, 196, 197], "certain": [21, 43, 44, 46, 47, 76, 136, 196, 197, 202, 203], "particular": [21, 43, 44, 46, 47, 76, 194, 197, 199], "behavior": [21, 43, 44, 46, 47, 76], "affect": [21, 43, 44, 46, 47, 75, 76], "dropout": [21, 43, 44, 46, 47, 76], "batchnorm": [21, 43, 44, 46, 47, 76], "disabl": [21, 43, 44, 46, 47, 76, 119, 120, 196], "gradient": [21, 43, 44, 46, 47, 76, 106, 119, 120, 130, 144, 145, 146, 147, 164, 196, 197], "comparison": [21, 43, 44, 46, 47, 76], "similar": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 80, 86, 114, 115, 196, 201, 203], "mechan": [21, 43, 44, 46, 47, 76], "confus": [21, 43, 44, 46, 47, 76], "extra_repr": [21, 43, 44, 46, 47], "represent": [21, 43, 44, 46, 47, 69, 79, 196, 197, 203], "string": [21, 43, 44, 46, 47, 115, 129, 163, 169, 177, 179, 182], "forward": [21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 107, 108, 112, 113, 114, 115, 121, 123, 125, 126, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 145, 146, 147, 196, 197, 201, 204], "tennsordict": 21, "dimens": [21, 57, 58, 63, 66, 74, 77, 92, 103, 105, 106, 118, 119, 130, 131, 134, 136, 137, 138, 139, 188, 196, 202], "shift": [21, 127], "nontermin": [21, 196], "termin": [21, 116, 196, 197, 201, 204], "original_reward": [21, 196], "newli": 21, "get_buff": [21, 43, 44, 46, 47], "target": [21, 43, 44, 46, 47, 75, 114, 115, 132, 133, 134, 135, 136, 138, 139, 140, 144, 166, 183, 184, 194, 196, 197], "throw": [21, 43, 44, 46, 47, 203], "docstr": [21, 43, 44, 46, 47], "get_submodul": [21, 43, 44, 46, 47], "explan": [21, 43, 44, 46, 47], "how": [21, 25, 27, 34, 43, 44, 46, 47, 131, 135, 136, 137, 164, 191, 196, 197, 199, 203, 204], "fulli": [21, 43, 44, 46, 47, 197], "qualifi": [21, 43, 44, 46, 47], "referenc": [21, 43, 44, 46, 47], "attributeerror": [21, 43, 44, 46, 47], "invalid": [21, 43, 44, 46, 47], "resolv": [21, 43, 44, 46, 47], "someth": [21, 43, 44, 46, 47, 191, 203], "get_extra_st": [21, 43, 44, 46, 47, 80], "set_extra_st": [21, 43, 44, 46, 47, 80], "pickleabl": [21, 43, 44, 46, 47, 80], "ensur": [21, 25, 27, 34, 43, 44, 46, 47, 69, 80, 125, 196], "pickl": [21, 43, 44, 46, 47, 80], "get_paramet": [21, 43, 44, 46, 47], "sai": [21, 43, 44, 46, 47, 203], "net_b": [21, 43, 44, 46, 47], "net_c": [21, 43, 44, 46, 47], "conv": [21, 43, 44, 46, 47, 92], "conv2d": [21, 43, 44, 46, 47, 92, 204], "16": [21, 43, 44, 46, 47, 197], "kernel_s": [21, 43, 44, 46, 47, 92, 93, 94, 197, 204], "stride": [21, 43, 44, 46, 47, 92, 93, 94, 101, 197, 204], "100": [21, 43, 44, 46, 47, 66, 156, 164, 184, 196, 197, 199, 203, 204], "diagram": [21, 43, 44, 46, 47], "show": [21, 43, 44, 46, 47, 197, 201, 204], "itself": [21, 43, 44, 46, 47], "would": [21, 43, 44, 46, 47, 103, 194, 197, 201, 202, 203], "degre": [21, 43, 44, 46, 47], "named_modul": [21, 43, 44, 46, 47], "o": [21, 43, 44, 46, 47], "transit": [21, 43, 44, 46, 47, 196, 197], "alwai": [21, 43, 44, 46, 47, 65, 197], "half": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 196], "ipu": [21, 43, 44, 46, 47], "strict": [21, 43, 44, 46, 47, 76], "descend": [21, 43, 44, 46, 47, 76], "exactli": [21, 43, 44, 46, 47, 52, 76], "persist": [21, 43, 44, 46, 47, 76], "strictli": [21, 43, 44, 46, 47, 76], "enforc": [21, 43, 44, 46, 47, 76, 116], "missing_kei": [21, 43, 44, 46, 47, 76], "unexpected_kei": [21, 43, 44, 46, 47, 76], "unexpect": [21, 43, 44, 46, 47, 76, 203], "namedtupl": [21, 43, 44, 46, 47, 76], "regist": [21, 24, 43, 44, 46, 47, 60, 69, 75, 76, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 194, 201], "duplic": [21, 43, 44, 46, 47, 133, 134, 202], "l": [21, 43, 44, 46, 47, 144], "idx": [21, 43, 44, 46, 47, 202], "named_buff": [21, 43, 44, 46, 47, 197], "prefix": [21, 43, 44, 46, 47, 76, 203], "prepend": [21, 43, 44, 46, 47], "running_var": [21, 43, 44, 46, 47], "named_children": [21, 43, 44, 46, 47], "conv4": [21, 43, 44, 46, 47], "conv5": [21, 43, 44, 46, 47], "memo": [21, 43, 44, 46, 47], "remove_dupl": [21, 43, 44, 46, 47], "alreadi": [21, 43, 44, 46, 47, 115, 196, 197], "named_paramet": [21, 43, 44, 46, 47, 197], "param": [21, 43, 44, 45, 46, 47, 97, 110, 111, 114, 117, 118, 121, 123, 124, 140, 143, 145, 146, 147, 172, 196, 197, 201, 204], "register_backward_hook": [21, 43, 44, 46, 47], "hook": [21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 107, 108, 111, 112, 113, 123, 124, 127, 157, 158, 160, 162, 164, 165, 190], "removablehandl": [21, 43, 44, 46, 47], "deprec": [21, 43, 44, 46, 47, 76, 203], "favor": [21, 43, 44, 46, 47], "register_full_backward_hook": [21, 43, 44, 46, 47], "futur": [21, 43, 44, 46, 47, 69, 76, 79, 103, 191, 204], "register_buff": [21, 43, 44, 46, 47], "running_mean": [21, 43, 44, 46, 47], "save": [21, 43, 44, 46, 47, 164, 194, 197], "alongsid": [21, 43, 44, 46, 47], "latter": [21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 186, 187], "num_featur": [21, 43, 44, 46, 47], "register_forward_hook": [21, 43, 44, 46, 47, 123, 124], "signatur": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 126], "posit": [21, 31, 32, 33, 43, 44, 46, 47, 76, 77, 201], "won": [21, 43, 44, 46, 47, 69, 79, 164, 188, 196], "inplac": [21, 43, 44, 46, 47, 196], "register_forward_pre_hook": [21, 43, 44, 46, 47], "invok": [21, 31, 43, 44, 46, 47], "respect": [21, 43, 44, 46, 47, 56, 60, 69, 73, 76, 79, 113, 114, 121, 159], "grad_input": [21, 43, 44, 46, 47], "grad_output": [21, 43, 44, 46, 47], "subsequ": [21, 43, 44, 46, 47], "entri": [21, 43, 44, 46, 47, 201], "technic": [21, 43, 44, 46, 47], "reason": [21, 43, 44, 46, 47, 69, 196, 197], "receiv": [21, 43, 44, 46, 47, 75, 103, 197, 199], "similarli": [21, 43, 44, 46, 47, 116, 117, 196, 201, 203], "caller": [21, 43, 44, 46, 47], "register_load_state_dict_post_hook": [21, 43, 44, 46, 47], "post": [21, 43, 44, 46, 47, 197], "incompatible_kei": [21, 43, 44, 46, 47], "consist": [21, 43, 44, 46, 47, 92, 103, 196, 197, 203], "addit": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 129, 197], "thrown": [21, 43, 44, 46, 47], "clearn": [21, 43, 44, 46, 47], "register_modul": [21, 43, 44, 46, 47, 194], "alia": [21, 43, 44, 46, 47], "register_paramet": [21, 43, 44, 46, 47], "requires_grad_": [21, 43, 44, 46, 47, 196], "autograd": [21, 43, 44, 46, 47, 76], "freez": [21, 43, 44, 46, 47], "finetun": [21, 43, 44, 46, 47], "individu": [21, 43, 44, 46, 47], "gan": [21, 43, 44, 46, 47], "share_memori": [21, 43, 44, 46, 47, 196], "share_memory_": [21, 43, 44, 46, 47, 202, 204], "destin": [21, 43, 44, 46, 47, 76, 86], "keep_var": [21, 43, 44, 46, 47, 76], "averag": [21, 43, 44, 46, 47, 76, 80, 162, 196, 201], "shallow": [21, 43, 44, 46, 47, 76], "pleas": [21, 43, 44, 46, 47, 76, 191], "design": [21, 24, 43, 44, 46, 47, 76, 130, 131, 134, 136, 137, 138, 139, 196, 197, 199, 202, 203], "detach": [21, 43, 44, 46, 47, 76, 196, 197], "non_block": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 197], "memory_format": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "channels_last": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "Its": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "complex": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 201], "integr": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 96, 114], "unchang": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "tri": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "convert": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 80, 114, 129, 202], "host": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "pin": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "4d": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "ignore_w": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "1913": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "3420": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "5113": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "2325": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "torch_doctest_cuda1": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "gpu1": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "1914": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "5112": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "2324": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "float16": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "cdoubl": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "3741": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "j": [21, 25, 34, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114, 194, 197], "2382": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "5593": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "4443": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "complex128": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "6122": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "1150": [21, 43, 44, 46, 47, 60, 69, 73, 76, 79, 114], "to_empti": [21, 43, 44, 46, 47], "dst_type": [21, 43, 44, 46, 47], "xpu": [21, 43, 44, 46, 47], "zero_grad": [21, 43, 44, 46, 47, 194, 196, 197, 202], "set_to_non": [21, 43, 44, 46, 47], "context": [21, 43, 44, 46, 47, 105, 142, 143, 145, 148, 149, 152, 160, 196, 197, 201], "grad": [21, 43, 44, 46, 47, 197], "dimension": [22, 23, 145, 148, 149, 152], "keepdim": 24, "sum": [24, 44, 144, 196, 197, 203], "user_regist": 24, "experiment": [24, 115], "onto": [24, 114, 115], "appear": 24, "priori": 24, "definit": [24, 40], "uniqu": 24, "discretebox": 24, "alpha": [25, 27, 34, 92, 138, 139, 196, 197, 204], "beta": [25, 27, 34, 136, 196, 197, 204], "ep": [25, 27, 34, 80, 131, 140, 162], "1e": [25, 27, 34, 80, 97, 100, 118], "08": [25, 27, 34, 196, 197], "collate_fn": [25, 26, 27, 28, 32, 161, 202, 204], "prefetch": [25, 26, 27, 28, 32, 161, 196, 197], "priorit": [25, 27, 34, 132, 133, 138, 139, 196, 197], "schaul": [25, 34], "quan": [25, 34], "antonogl": [25, 34], "silver": [25, 34], "2015": [25, 34], "arxiv": [25, 34, 57, 69, 93, 94, 95, 96, 100, 101, 106, 107, 108, 112, 113, 123, 130, 134, 135, 137, 139, 140, 145, 148, 149, 152, 169, 172, 177, 182], "ab": [25, 34, 69, 80, 100, 101, 106, 107, 108, 112, 113, 130, 135, 137, 169, 177], "1511": [25, 34, 101], "05952": [25, 34], "expon": [25, 27, 34], "\u03b1": [25, 27, 34], "determin": [25, 27, 34, 69, 79, 197], "delta": [25, 27, 34, 115, 118, 190], "prioriti": [25, 27, 33, 34, 37, 38, 39, 40, 132, 133, 138, 139, 194, 196, 197], "null": [25, 27, 34, 56, 196], "merg": [25, 26, 27, 32, 161], "mini": [25, 26, 27, 32, 161], "style": [25, 26, 27, 32, 161], "rb": [25, 26, 27, 32, 161, 197, 204], "multithread": [25, 26, 27, 32, 161], "instanti": [25, 26, 27, 46, 47, 75, 161, 196, 197, 202, 203], "extend": [25, 26, 27, 28, 31, 32, 33, 41, 42, 161, 194, 196, 197, 204], "multinomi": [25, 27], "update_prior": [25, 27, 34, 194, 196, 204], "circular": [26, 161, 196], "randomli": [26, 28, 65, 66, 73, 115, 161], "select": [26, 27, 28, 31, 32, 33, 46, 47, 65, 91, 161, 163, 196, 197], "priority_kei": [27, 33, 133, 134, 139, 204], "td_error": [27, 33, 132, 133, 134, 138, 139, 196, 204], "prioritizedreplaybuff": [27, 190, 204], "flaot": 27, "return_weight": 27, "_weight": 27, "replaybuff": [28, 31, 33, 42, 180, 184, 190, 204], "meta": [29, 194], "describ": [29, 58, 75, 118, 119, 169, 177, 203], "what": [29, 43, 44, 46, 47, 73, 191, 197, 201, 203, 204], "replay_buff": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 184, 196, 197], "rb_prototyp": [31, 32, 33], "invoc": 31, "friendli": [31, 196], "public": 31, "rpc": 31, "append": [31, 32, 33, 86, 196, 197, 202, 204], "insert_transform": [31, 32, 33], "insert": [31, 32, 33, 41, 42, 77, 197], "include_info": [31, 33], "sampler": [31, 32, 33, 34, 35, 37, 38, 39, 40, 190], "writer": [32, 41, 190], "max_siz": [32, 37, 39, 40, 197], "1_000": 32, "randomsampl": [32, 190], "roundrobinwrit": [32, 190], "kw": [33, 41], "max_capac": 34, "uniformli": [35, 203], "scratch_dir": [37, 196], "memmap": [37, 46, 47, 80], "attach": [37, 38, 39, 40, 197], "entiti": [37, 38, 39, 40], "made": [37, 38, 39, 40, 196], "eg": [37, 38, 39, 40], "alloc": 38, "__len__": 40, "roundrobin": 41, "piec": [41, 42], "_inplace_upd": [43, 46, 47, 76], "_batch_lock": [43, 46, 47, 76], "is_don": [43, 45, 204], "run_type_check": [43, 45], "compar": [43, 160, 197, 203], "batch_lock": [43, 44, 46, 47, 76], "environn": [43, 44, 45, 46, 47, 76], "immut": [43, 44, 46, 47, 76, 169, 177], "fake_tensordict": [43, 44, 46, 47], "fake": [43, 44, 46, 47], "overridden": [43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127], "recip": [43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127], "afterward": [43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127, 203], "former": [43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127], "silent": [43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 112, 113, 127], "info": [43, 44, 46, 47, 81, 201], "_step": [43, 44, 46, 47], "privat": [43, 44, 46, 47, 203], "_reset": [43, 44, 45, 46, 47, 91], "overwritten": [43, 44, 46, 47, 86, 196], "callback": [43, 44, 46, 47], "auto_reset": [43, 44, 46, 47, 197], "auto_cast_to_devic": [43, 44, 46, 47], "break_when_any_don": [43, 44, 46, 47], "return_contigu": [43, 44, 46, 47, 199], "soon": [43, 44, 46, 47], "smaller": [43, 44, 46, 47], "automat": [43, 44, 46, 47, 66, 87, 110, 197, 204], "lazystackedtensordict": [43, 44, 45, 46, 47, 197, 199, 202, 203, 204], "concomitt": [43, 44, 46, 47], "eras": [43, 44, 46, 47], "workspac": [43, 44, 46, 47], "carri": [43, 44, 46, 47], "discard": [44, 86, 203], "info_dict_read": 44, "set_info_dict_read": 44, "put": [44, 80, 188, 202], "f": [44, 129, 196, 197, 201, 202, 203], "read_act": 44, "read_don": 44, "reader": [44, 196, 197], "frame_skip": [44, 48, 49, 50, 53, 157, 160, 166, 194, 196, 204], "broken": [44, 82], "read_ob": 44, "dictat": [44, 115], "inner": [44, 194, 196, 203], "read_reward": 44, "total_reward": 44, "step_reward": 44, "far": [44, 119, 120, 203], "baseinfodictread": 44, "info_dict": 44, "hoc": 44, "manner": [44, 69, 196, 199], "dict_read": 44, "gymwrapp": [44, 190, 204], "default_info_dict_read": 44, "my_info_kei": 44, "some_env": 44, "meant": 45, "world": [45, 203], "limit": [45, 46, 47, 202], "safeti": 45, "constraint": 45, "behav": [45, 52, 109], "classic": [45, 201, 202], "directli": [45, 188, 197], "ndunboundedcontinuoustensorspec": [45, 73, 87, 88, 89, 90, 91, 114, 117, 121, 190], "mymbenv": [45, 91], "world_model": [45, 55, 91], "super": [45, 91, 121, 123, 126, 201, 204], "hidden_observ": [45, 91], "mlp": [45, 88, 91, 92, 93, 94, 95, 96, 99, 102, 169, 177, 179, 182, 190, 196, 197, 199, 201, 204], "worldmodelwrapp": [45, 91], "activation_class": [45, 91, 92, 93, 94, 95, 96, 100, 101, 103, 196, 197, 204], "relu": [45, 91, 129], "activate_last_lay": [45, 91, 96, 103], "depth": [45, 91, 92, 93, 94, 95, 96, 99, 100, 101, 103, 107, 108, 197, 199], "equal": [46, 47, 65, 66, 92, 98, 103, 141, 155, 186, 187, 202], "my_env_fun": [46, 47], "custom_attribute_list": [46, 47], "custom_attribut": [46, 47], "custom_method_list": [46, 47], "custom_method": [46, 47], "num_work": [46, 47, 196, 197], "deploi": [46, 47], "creation": [46, 47, 196, 203], "slight": [46, 47, 197], "overhead": [46, 47, 201], "env_input_kei": [46, 47], "permit": [46, 47], "drastic": [46, 47], "decreas": [46, 47], "io": [46, 47], "burden": [46, 47], "_batchedenv": [46, 47], "might": [46, 47, 191, 196, 203], "next_pixel": [46, 47], "next_vector": [46, 47], "amount": [46, 47], "occupi": [46, 47], "excluded_kei": [46, 47], "exclud": [46, 47, 196], "share_individual_td": [46, 47], "lazi": [46, 47, 69, 105, 116, 117, 196, 199, 202, 203], "shared_memori": [46, 47], "policy_proof": [46, 47], "ll": [46, 47, 196, 197, 203], "hidden": [46, 47, 88, 89, 90, 100, 102, 107, 108, 112, 113, 114, 117, 169, 177, 199, 201, 204], "allow_step_when_don": [46, 47], "encount": [46, 47, 191], "update_kwarg": [46, 47], "dm_control": [48, 49, 196, 199, 203], "env_nam": [48, 50, 53, 196, 203], "task_nam": 48, "cheetah": [48, 49, 196, 203], "suit": [49, 203], "disable_env_check": 50, "categorical_action_encod": 51, "serv": [52, 203], "placehold": [52, 76], "secur": 52, "jumanji": [53, 54], "snake": [53, 54], "6x6": [53, 54], "td1": 54, "int32": [54, 202, 204], "5": [54, 91, 92, 99, 100, 102, 103, 111, 119, 120, 123, 124, 136, 196, 197, 202, 203, 204], "12x12": 54, "tsp50": 54, "tsp100": 54, "model_bas": [55, 91], "dreamer": [55, 100], "prior_shap": 55, "belief_shap": 55, "obs_decod": 55, "transform_reward_spec": [56, 60, 61, 69, 71, 72, 75, 77, 79], "cat_dim": [57, 66], "success": [57, 75, 204], "account": 57, "movement": 57, "veloc": [57, 203], "propos": [57, 104, 135, 140, 179, 182], "plai": [57, 203], "atari": [57, 203], "pdf": [57, 93, 94, 95, 96, 123, 134, 138, 139, 140, 145, 148, 149, 152, 172, 179, 182], "1312": 57, "5602": 57, "tranform": [57, 60, 69, 73, 75, 78, 79, 81], "transform_observation_spec": [57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 73, 74, 75, 77, 79], "del_kei": [58, 197, 199], "unsqueeze_if_oor": 58, "observation_posit": 58, "observation_veloc": 58, "delet": [58, 202], "unsqueez": [58, 74, 77, 102, 202], "key1": [58, 155, 163], "key2": [58, 155, 163], "_": [58, 61, 66, 74, 80, 114, 129, 196, 197, 201, 204], "w": [59, 70, 74], "crop": 59, "center": 59, "width": [59, 70, 197], "height": [59, 70, 197], "squar": [59, 119, 120], "rewardsc": [60, 76, 190, 196], "rewardclip": [60, 190], "transformed_env": [60, 75, 76], "dest": [60, 69, 79, 114], "transform_input_spec": [60, 61, 69, 75, 77, 79], "finit": [62, 196], "first_dim": 63, "last_dim": 63, "flatten": [63, 196, 197], "adjac": 63, "turn": [64, 160, 197], "noop": [65, 204], "30": [65, 112, 113, 197], "op": [65, 165], "noop_max": 65, "loc": [66, 72, 88, 89, 90, 110, 115, 117, 119, 120, 167, 169, 177, 179, 182, 188, 196, 197, 201, 204], "standard_norm": [66, 72, 196, 197], "affin": [66, 72], "layer": [66, 80, 92, 93, 94, 100, 103, 105, 106, 107, 108, 122, 196, 197, 201], "set_default_tensor_typ": 66, "doubletensor": 66, "std": [66, 80, 196, 197, 203], "isclos": 66, "next_ob": [66, 196, 204], "normalis": 66, "stat": [66, 167, 188, 196], "rubric": [66, 117], "manual_se": [66, 196, 203, 204], "init_stat": 66, "3752e": 66, "01": [66, 127, 130, 131, 136, 137, 196, 197, 200], "5087e": 66, "03": [66, 196, 197, 200], "9294e": 66, "9636": 66, "5608": 66, "6408": 66, "num_it": 66, "reduce_dim": 66, "constant": [66, 194, 196, 197, 203], "ideal": [66, 196], "statist": [66, 80, 188, 196, 203], "approach": [66, 203], "gaussian": [66, 91, 105, 106], "empir": [66, 91, 115], "deviat": [66, 80, 91, 100, 105, 106, 137, 196, 197], "summari": [66, 80], "r3m": 69, "resnet": [69, 79], "visual": [69, 79], "embed": [69, 78, 79, 88, 89, 90, 114, 201], "ego4d": [69, 79], "paper": [69, 79, 135, 179, 182, 196], "univers": [69, 79], "manipul": [69, 203], "suraj": 69, "nair": 69, "aravind": 69, "rajeswaran": 69, "vikash": [69, 79], "kumar": [69, 79], "chelsea": 69, "finn": 69, "abhinav": 69, "gupta": 69, "2203": 69, "12601": 69, "_init": 69, "snippet": [69, 196], "resenet50": 69, "model_nam": [69, 79], "resnet50": [69, 79], "resnet34": 69, "resnet18": 69, "left": [69, 79, 197], "empti": [69, 76, 79, 196], "r3m_vec": 69, "feed": [69, 79], "244": [69, 79], "hub": [69, 79], "cach": [69, 76, 79, 156], "download_path": [69, 79], "tensor_pixels_kei": [69, 79], "interpol": [70, 197], "bilinear": 70, "clamp_min": 71, "clamp_max": 71, "clip": [71, 131, 164], "clip_min": 71, "scalar": [71, 94, 96, 105, 106, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "clip_max": 71, "default_valu": 73, "primer": 73, "popul": 73, "drawn": [73, 115], "rel": [73, 97, 118], "fix": [73, 139, 203], "chosen": [73, 169, 177, 179, 182], "mykei": 73, "dtype_or_devic": 73, "255": [74, 196, 203], "precis": [74, 196], "ri": 74, "randint": [74, 196], "out_keys_inv": 75, "principl": 75, "combin": [75, 202], "cattransform": 75, "notabl": 75, "cache_spec": 76, "anymor": [76, 114, 196], "unsqueeze_dim": 77, "vip": [78, 79], "toward": 79, "implicit": 79, "jason": 79, "ma": 79, "shagun": 79, "sodhani": 79, "dinesh": 79, "jayaraman": 79, "osbert": 79, "bastani": 79, "ami": 79, "zhang": 79, "vip_vec": 79, "shared_td": 80, "lock": 80, "decai": [80, 138, 162, 196, 197, 203], "9999": [80, 203], "0001": [80, 100, 162], "fly": [80, 136, 203], "substitut": 80, "to_observation_norm": 80, "rate": [80, 144, 196, 197], "99": [80, 130, 131, 136, 137, 138, 139, 144, 184, 196, 197, 204], "numer": [80, 114, 115, 119, 120, 202, 203], "underflow": 80, "1000": [80, 115, 135, 184, 196, 197], "build_td_for_shared_vecnorm": 80, "memmori": 80, "memmap_": [80, 202], "multiprocess": [80, 203], "mp": 80, "queue": 80, "td_share": 80, "v": [80, 102, 139, 197, 201, 204], "observationnorm": [80, 188, 190, 196, 197, 204], "state_dim": [81, 112, 113], "action_dim": [81, 93, 95, 199], "gsde": [81, 138, 188], "nois": [81, 106, 122, 138, 160, 188, 196], "func": [81, 201], "gsdemodul": 81, "short": 82, "discrep": [82, 130, 131, 132, 133, 136, 137], "imposs": 82, "probabilistictdmodul": [85, 103, 115, 139, 144, 160], "next_tensordict": [86, 196], "keep_oth": 86, "exclude_reward": 86, "exclude_don": 86, "exclude_act": 86, "_run_check": 86, "reflect": [86, 166], "renam": [86, 196], "next_": 86, "funtion": 86, "td_out": [86, 155, 163], "make_polici": 86, "next_td": 86, "next_observ": [86, 102, 199], "translat": [87, 110], "td_modul": [87, 88, 89, 90, 110, 114, 115, 117, 121, 201, 204], "actor": [88, 89, 90, 91, 93, 95, 99, 100, 110, 111, 123, 124, 130, 131, 132, 136, 137, 138, 139, 169, 172, 174, 177, 179, 182, 190, 196, 197, 204], "critic": [88, 130, 131, 136, 137, 139, 201], "get_policy_oper": [88, 89, 90, 169, 177, 201], "alon": [88, 89, 90], "tdmodul": [88, 89, 90, 184], "get_critic_oper": [88, 201], "common_oper": [88, 90], "produc": [88, 90, 92, 103, 109, 203], "policy_oper": [88, 89, 90], "value_oper": [88, 89, 90], "probabilisticactor": [88, 89, 90, 139, 190, 196], "valueoper": [88, 89, 90, 130, 131, 136, 137, 184, 190, 196, 201], "tanhnorm": [88, 89, 90, 110, 117, 190, 201, 204], "normalparamwrapp": [88, 89, 90, 110, 117, 201, 204], "spec_hidden": [88, 90], "module_hidden": [88, 90, 201], "td_module_hidden": [88, 90, 201], "spec_act": [88, 90], "module_act": [88, 90, 201], "td_module_act": [88, 89, 90, 201], "dist_in_kei": [88, 89, 90, 110, 117], "sample_out_kei": [88, 90, 117], "distribution_class": [88, 89, 90, 110, 115, 117, 196, 201, 204], "return_log_prob": [88, 89, 90, 115, 117, 201, 204], "module_valu": [88, 89, 90, 201], "num_cel": [88, 92, 93, 94, 95, 96, 100, 101, 103, 196, 197, 201, 204], "td_module_valu": [88, 89, 90, 201], "state_action_valu": [88, 121, 144, 172, 179, 182, 184, 196, 201, 204], "td_clone": [88, 89, 90, 201], "clone": [88, 89, 90, 114, 169, 177, 179, 182, 196, 197, 201, 202, 204], "sample_log_prob": [88, 89, 90, 115, 117, 169, 177, 179, 201, 204], "tensordictmodulewrapp": [88, 170, 171, 184], "estim": [88, 89, 90, 130, 131, 136, 137, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 196, 197], "get_value_oper": [88, 89, 90, 169, 177], "action_modul": 89, "state_valu": [89, 90, 121, 146, 147, 148, 149, 150, 152, 153, 169, 177, 182, 196], "safesequenti": [89, 90, 190], "planning_horizon": 91, "optim_step": [91, 202], "num_candid": 91, "num_top_k_candid": 91, "reward_kei": 91, "action_kei": [91, 104], "cross": 91, "entropi": [91, 130, 131, 136, 137, 138, 139], "botev": 91, "et": [91, 201], "al": [91, 174, 201, 203], "2013": 91, "cem": 91, "plan": [91, 104], "unit": [91, 100, 107, 108, 112, 113], "varianc": [91, 119, 120], "cumul": 91, "rank": 91, "top": 91, "k": [91, 197, 201, 202], "episod": [91, 148, 149, 150, 151, 152, 153, 154, 197], "repeat": 91, "maximis": [91, 93, 95, 196], "horizon": 91, "modelbasedenv": 91, "mpc": [91, 104], "planner": [91, 190], "candid": 91, "modelbasedenvbas": [91, 104, 190], "next_hidden_observ": 91, "elu": [92, 93, 94, 95, 96, 100, 101, 197, 204], "activation_kwarg": [92, 103], "norm_class": [92, 93, 94, 103], "norm_kwarg": [92, 103], "bias_last_lay": [92, 93, 94, 95, 96, 101, 103], "aggregator_class": [92, 93, 94, 197, 204], "squashdim": [92, 93, 204], "aggregator_kwarg": [92, 93, 94, 197], "squeeze_output": [92, 93, 94, 197], "convolut": [92, 93, 94], "neural": [92, 114, 197, 201, 203], "len": [92, 103, 196, 197, 202, 204], "cell": [92, 103, 196], "kernel": [92, 101, 102], "tanh": [92, 103, 118, 119, 120, 196, 204], "squeez": [92, 196, 197, 202], "singleton": [92, 103], "device_typ": [92, 93, 94, 95, 96, 101, 103, 105, 106], "cnet": 92, "34": [92, 103, 197], "35": [92, 103, 197], "possibli": [92, 114, 164, 196, 203], "rectangular": 92, "conv_net_kwarg": [93, 94], "mlp_net_kwarg": [93, 94, 95], "use_avg_pool": [93, 94], "WITH": [93, 94, 95, 96, 140, 172], "1509": [93, 94, 95, 96, 135, 140, 172], "02971": [93, 94, 95, 96, 140, 172], "convnet": [93, 190, 204], "ndims_in": 93, "avgpool": [93, 94], "128": [94, 196, 197], "adaptiveavgpool2d": [94, 197], "400": [95, 96, 197], "300": [95, 96, 169, 177], "mlp_net_kwargs_net1": 96, "mlp_net_kwargs_net2": 96, "atol": [97, 118], "06": [97, 118, 196, 197], "rtol": [97, 118], "batch_shap": [97, 118], "event_shap": [97, 118], "absolut": [97, 118], "toler": [97, 118], "log_prob": [97, 109, 120], "log": [97, 109, 115, 120, 130, 131, 134, 136, 137, 138, 139, 157, 158, 160, 164, 184, 194, 197, 201, 204], "probabl": [97, 109, 115, 120, 197, 201, 204], "densiti": [97, 109, 120], "mass": [97, 109, 120], "rsampl": [97, 109, 115], "sample_shap": [97, 109], "reparameter": [97, 109], "dqnet": 98, "atom": 98, "action_spac": [99, 111, 123, 124], "one_hot": [99, 111, 123, 124], "onehotdiscretetensorspec": [99, 111, 123, 124, 190], "nbin": [99, 123], "qvalue_actor": [99, 111, 123, 124], "std_bia": 100, "std_min_val": 100, "stochast": [100, 106, 107, 113, 138, 139], "belief": [100, 107, 112, 113], "1912": 100, "016034": 100, "softplu": [100, 127, 128, 129], "out_features_valu": 101, "cnn_kwarg": [101, 197], "mlp_kwarg": [101, 102, 197], "duel": [101, 197], "cnn": [101, 197, 204], "06581": 101, "512": 101, "lstm_kwarg": 102, "embedd": 102, "lstm": 102, "time_step": 102, "2d": 102, "hidden_s": 102, "input_s": 102, "hidden0_in": 102, "hidden1_in": 102, "hidden0_out": 102, "hidden1_out": 102, "single_bias_last_lay": 103, "layer_class": 103, "layer_kwarg": 103, "perceptron": 103, "seamless": 103, "though": 103, "reshap": [103, 202], "lazylinear": [103, 204], "42": [103, 164, 197], "noisylinear": [103, 105, 190, 197], "noisylazylinear": [103, 190], "At": [104, 199], "mpcplanner": 104, "tensordict_out": [104, 201, 203], "std_init": [105, 106], "noisi": [105, 106, 122], "term": [105, 106, 129, 130, 165, 197], "matrix": [105, 106], "ax": [105, 106], "initialize_paramet": 105, "isol": 105, "1706": 106, "10295v3": 106, "induc": 106, "aid": 106, "descent": 106, "remain": 106, "emploi": 106, "decod": [107, 201], "1803": [107, 108], "10122": [107, 108], "rnn_hidden": 107, "latent": 108, "logit": 109, "prob": 109, "One": [109, 114, 141, 196, 201, 202, 203], "excacli": 109, "probabilist": [110, 201, 204], "functional_modul": [110, 111, 114, 117, 121, 123, 124], "make_funct": [110, 111, 114, 117, 121, 123, 124, 125, 197, 201, 204], "tensordict_modul": [110, 111, 117, 123, 124, 125, 126, 200, 201], "hidden_dim": [112, 113], "scale_lb": [112, 113], "posterior": 112, "rssm": [112, 113], "1811": [112, 113], "04551": [112, 113], "obs_embed": 112, "rnn_hidden_dim": 113, "prior": 113, "dream": 113, "recurr": 113, "functionalmodul": [114, 125], "functionalmodulewithbuff": [114, 125], "character": 114, "overflow": [114, 115], "grucel": [114, 201], "td_fmodul": 114, "td_function": 114, "td_state": 114, "vmap": [114, 117, 197, 201, 204], "expand": [114, 117, 201, 204], "isn": 114, "ensembl": [114, 138], "params_repeat": 114, "td_vmap": [114, 117], "irrespect": [114, 115], "random_sampl": [114, 115], "tensor_spec": 115, "default_interaction_mod": [115, 201], "distribution_kwarg": [115, 196], "cache_dist": 115, "n_empirical_estim": 115, "probabilistictensordictmodul": [115, 116, 204], "rule": [115, 201], "interaction_mod": 115, "get_dist": [115, 116, 201], "__call__": [115, 194, 201], "real": 115, "median": 115, "suppli": 115, "fist": 115, "set_interaction_mod": 115, "diverg": [115, 136], "ppo": [115, 131, 136, 137, 169, 176, 177, 190], "partial_toler": [116, 117, 199], "probabilistictensordictsequenti": [116, 201, 204], "tensordictsequenti": [116, 199, 204], "expos": [116, 201], "recov": [116, 199], "who": [116, 117], "AND": [116, 117], "scan": [116, 117], "sub": [116, 117, 155, 164, 199, 203, 204], "tensordictsequenci": 117, "tensordictsequ": 117, "safeprobabilisticmodul": [117, 190], "spec1": 117, "net1": 117, "module1": 117, "td_module1": 117, "spec2": 117, "module2": 117, "td_module2": 117, "min": [118, 119, 120, 131, 138, 139, 196, 197], "event_dim": [118, 119], "upscal": [119, 120], "tanh_loc": [119, 120], "prevent": [119, 120, 136, 137, 196], "tanhtransform": 119, "ultim": [119, 120], "unstabl": [119, 120], "poor": [119, 120], "explos": [119, 120], "practic": [119, 120, 129, 191, 197, 203], "switch": [119, 120], "sigma": [119, 120], "formula": [119, 120, 131, 136, 137], "custommodul": [121, 126], "cat": [121, 196, 202, 204], "var_num": [123, 124], "regard": [123, 130, 134, 137, 202], "perspect": [123, 134], "1707": [123, 134, 137, 169, 177], "06887": [123, 134], "mult_one_hot": [123, 124], "customdistributionalqv": 123, "log_softmax": 123, "greedi": [124, 197], "_src": 125, "wrapper_typ": 125, "mislead": 126, "other_kei": 126, "typeerror": 126, "min_val": [127, 129], "bias": [127, 196], "_bia": 127, "invert": 128, "surject": 129, "exp": 129, "expln": 129, "biased_softplu": [129, 190], "beggin": 129, "biased_softplus_": 129, "syntax": [129, 196], "condit": 129, "met": 129, "safeprobabilisticsequenti": [130, 131, 136, 137, 170, 171, 190], "advantage_kei": [130, 131, 136, 137], "advantage_diff_kei": [130, 137], "value_error": [130, 137, 145, 146, 147], "entropy_bonu": [130, 131, 136, 137], "samples_mc_entropi": [130, 131, 136, 137], "entropy_coef": [130, 131, 136, 137], "critic_coef": [130, 131, 136, 137], "loss_critic_typ": [130, 131, 136, 137], "smooth_l1": [130, 131, 132, 133, 136, 137, 138, 139, 141], "advantage_modul": [130, 137], "a2c": [130, 168, 190], "loss": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 159, 164, 168, 173, 175, 176, 178, 179, 181, 184, 194, 196, 197, 202, 204], "reli": [130, 196, 203], "1602": 130, "01783v2": 130, "advantage_diff": 130, "loss_function_typ": 130, "l1": [130, 131, 132, 133, 136, 137, 138, 141, 197], "l2": [130, 131, 132, 133, 136, 137, 138, 141], "tha": 130, "throughout": [130, 131, 134, 136, 137, 138, 139, 203], "essenti": [130, 131, 134, 136, 137, 138, 139, 196, 202], "backpropag": [130, 131, 134, 136, 137, 138, 139], "clip_epsilon": 131, "threshold": 131, "bonu": [131, 136, 137], "favour": [131, 136, 137], "exploratori": [131, 136, 137], "mont": [131, 136, 137], "carlo": [131, 136, 137], "multipli": [131, 136, 137, 138, 139, 196], "loss_funct": [131, 132, 133, 137, 138, 139, 141], "actor_network": [132, 138, 139], "value_network": [132, 133, 134, 139, 145, 146, 147], "delay_actor": [132, 139], "delay_valu": [132, 133, 134, 139], "input_tensordict": [132, 133, 134], "assign": [132, 133, 196, 201], "qvalueactor": [133, 190, 197], "distributionalqvalueactor": [134, 190], "unlik": [134, 137, 201, 202, 204], "disctount": 134, "loss_modul": [135, 140, 164, 183, 184, 194, 202], "dqnloss": [135, 140, 175, 190], "ddpgloss": [135, 140, 173, 184, 190, 204], "sacloss": [135, 140, 181, 190], "value_network_update_interv": 135, "contrast": 135, "soft": [135, 139, 140], "06461": 135, "dtarg": 136, "decrement": 136, "samples_mc_kl": 136, "kl": 136, "penalti": 136, "old_polici": 136, "new_polici": 136, "adapt": 136, "old": [136, 203], "thu": 136, "distanc": [136, 141, 144], "apart": 136, "proxim": [137, 169, 177], "optimis": [137, 160], "flavour": [137, 196, 204], "constrain": 137, "clipppoloss": [137, 190], "klpenppoloss": [137, 190], "regularis": 137, "06347": [137, 169, 177], "qvalue_network": [138, 139], "num_qvalue_net": [138, 139], "sub_sample_len": 138, "priotity_kei": [138, 139], "alpha_init": [138, 139], "min_alpha": [138, 139], "max_alpha": [138, 139], "fixed_alpha": [138, 139], "target_entropi": [138, 139], "auto": [138, 139], "delay_qvalu": [138, 139], "redq": [138, 178, 179, 190], "openreview": [138, 179], "ay8zfzm0tdd": [138, 179], "idea": [138, 194, 197, 202], "sac": [138, 139, 181, 182, 190], "subsampl": [138, 155, 194], "know": [138, 160, 196, 197], "1801": [139, 182], "01290": [139, 182], "qvalue_network_bi": 139, "prod": 139, "n_action": 139, "redqloss": [140, 190], "999": [140, 162, 197], "epsilon": [140, 197], "prev_param": 140, "new_param": 140, "v2": [141, 150, 151, 153, 154, 169, 172, 177, 179, 182], "strict_shap": 141, "view_a": 141, "hold": [142, 143], "next_val_kei": 144, "pred_next_v": 144, "usus": 144, "mse": [144, 197], "q_valu": 144, "target_valu": [144, 204], "n_steps_to_next": 144, "value_next_st": 144, "lmbda": [145, 147, 148, 150, 151, 152, 153, 154, 196, 197], "average_reward": [145, 146, 147], "gradient_mod": [145, 146, 147], "1506": [145, 148, 149, 152], "02438": [145, 148, 149, 152], "exponenti": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162], "propag": [145, 146, 147], "throught": [145, 146, 147], "unused_arg": [145, 146, 147], "target_param": [145, 146, 147], "value_kei": [146, 147], "gae": [146, 147, 190], "next_state_valu": [148, 149, 150, 151, 152, 153, 154, 190], "old_stat": [148, 149, 150, 152, 153], "timestep": [148, 149, 150, 151, 152, 153, 154, 197], "new_stat": [148, 149, 150, 151, 152, 153, 154], "flag": [148, 149, 150, 151, 152, 153, 154], "rolling_gamma": [150, 151, 153, 154], "ti": [150, 151, 153, 154], "event": [150, 151, 153, 154], "g1": [150, 151, 153, 154], "g2": [150, 151, 153, 154], "g3": [150, 151, 153, 154], "g4": [150, 151, 153, 154], "v3": [150, 151, 153, 154], "v4": [150, 151, 153, 154, 196], "upcom": [150, 151, 153, 154, 196], "sub_traj_len": 155, "min_sub_traj_len": 155, "full": [155, 196, 197, 199, 201, 202, 203, 204], "20": [155, 196, 197, 203, 204], "register_op": [155, 156, 157, 158, 159, 162, 163, 165, 194], "process_optim_batch": [155, 162, 194], "_process_optim_batch_hook": [155, 194], "interv": [156, 165, 197], "clear": 156, "clear_cuda": 156, "pre_optim_step": [156, 194], "counter": [157, 194], "log_pbar": [157, 158, 160, 162, 194], "progress": [157, 158, 160, 164, 194, 203], "bar": [157, 158, 160, 164, 194], "count_fram": 157, "pre_steps_log": [157, 158, 194], "lognam": 158, "r_train": 158, "logger": [158, 160, 164, 184, 188, 194], "log_reward": 158, "loss_compon": 159, "appl": 159, "omit": [159, 197], "loss_": 159, "optimizer_hook": 159, "loss_actor": [159, 204], "record_interv": [160, 196], "record_fram": [160, 166, 196], "policy_explor": [160, 184, 196], "log_kei": 160, "suffix": 160, "underestim": 160, "suppos": [160, 194, 201, 202, 203], "set_exploration_mod": [160, 190, 196, 197, 204], "reward_evalu": 160, "video": [160, 188, 197], "reward_norm": 162, "batch_process": [162, 163, 194], "update_reward_stat": 162, "normalize_reward": 162, "make_train": [163, 190], "_process_batch_hook": [163, 194], "versatil": 164, "lossmodul": [164, 183, 184], "optim_steps_per_batch": [164, 194, 196], "epoch": 164, "clip_grad_norm": 164, "norm": [164, 197], "partial": 164, "deriv": 164, "clamp": 164, "clip_norm": 164, "progress_bar": 164, "tqdm": [164, 196, 197], "save_trainer_interv": 164, "disk": [164, 194, 197], "10000": [164, 197], "save_trainer_fil": [164, 194], "_datacollector": [165, 170, 171, 184], "update_weights_interv": 165, "sit": [165, 197], "sync": [165, 184, 194, 196, 204], "update_weight": 165, "post_step": [165, 194], "helper": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 196, 204], "cfg": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188], "dictconfig": [166, 167, 169, 170, 171, 172, 174, 177, 179, 180, 182, 183, 184, 185, 188], "correct": [166, 197], "divid": 166, "unknowingli": 166, "1m": 166, "annealing_fram": [166, 196], "init_env_step": [166, 167, 196], "proof_environ": [167, 169, 172, 174, 177, 179, 182, 196], "sta": 167, "ot": 167, "a2closs": [168, 190], "in_keys_actor": [169, 177], "observation_kei": [169, 177, 179, 182], "actorvalueoper": [169, 177, 190, 201], "dummi": [169, 172, 174, 177, 179, 182, 203], "join": [169, 177], "actorcriticoper": [169, 177, 190], "parser_env_arg": [169, 177, 179], "make_ppo_model": [169, 190], "parser_model_args_continu": [169, 177, 179, 182], "cattensor": [169, 172, 177, 179, 182, 190, 196, 197, 199, 203], "hydra": [169, 172, 174, 177, 179, 182], "config_stor": [169, 172, 174, 177, 179, 182], "configstor": [169, 172, 174, 177, 179, 182], "dataclass": [169, 172, 174, 177, 179, 182], "halfcheetah": [169, 172, 177, 179, 182, 196], "config_field": [169, 172, 174, 177, 179, 182], "config_cl": [169, 172, 174, 177, 179, 182], "ppomodelconfig": [169, 177], "envconfig": [169, 172, 174, 177, 179, 182], "make_dataclass": [169, 172, 174, 177, 179, 182], "cls_name": [169, 172, 174, 177, 179, 182], "config_path": [169, 172, 174, 177, 179, 182], "config_nam": [169, 172, 174, 177, 179, 182], "actor_valu": [169, 177], "17": [169, 172, 177, 179, 182, 196, 197], "actor_model_explor": [170, 171, 196], "make_env_kwarg": [170, 171], "creator": [170, 171, 186, 187, 188], "actor_net_kwarg": [172, 179, 182], "value_net_kwarg": [172, 182], "modulelist": [172, 179, 182, 204], "ddpgcnnactor": [172, 190], "ddpgmlpactor": [172, 190], "ddpgcnnqnet": [172, 190], "ddpgmlpqnet": [172, 190], "ddpgmodelconfig": 172, "targetnetupdat": [173, 175, 178, 181, 183, 184], "discretemodelconfig": 174, "pong": [174, 203], "v5": [174, 203], "pixels_onli": [174, 196, 197, 203, 204], "210": [174, 203], "160": [174, 197, 203], "ppoloss": [176, 190], "redqloss_deprec": 178, "qvalue_net_kwarg": [179, 182], "qvalu": [179, 182, 196, 197], "redqmodelconfig": 179, "replayargsconfig": 180, "sacmodelconfig": 182, "target_net_updat": 184, "constitu": 184, "learnt": [184, 197], "tempfil": 184, "tensorboardlogg": 184, "tensordictreplaybuff": [184, 190, 196, 197], "egreedywrapp": [184, 197], "env_proof": 184, "obs_spec": 184, "net_valu": 184, "dir": [184, 194], "gettempdir": 184, "exp_nam": [184, 196], "argpars": [185, 188], "namespac": [185, 188], "parser": [185, 188], "transformed_env_constructor": [185, 190], "env_kwarg": [186, 187, 196], "num_env_per_collector": [186, 187], "num_collector": [186, 187], "less": [186, 187, 196, 197, 204], "video_tag": 188, "norm_obs_onli": 188, "use_env_cr": 188, "custom_env_mak": 188, "custom_env": 188, "return_transformed_env": 188, "action_dim_gsd": 188, "state_dim_gsd": 188, "batch_dim": [188, 202], "obs_norm_state_dict": 188, "wheter": 188, "maker": [188, 196], "overrid": 188, "exclus": 188, "my": [189, 198], "asyncdatacollector": 190, "tensordictprioritizedreplaybuff": [190, 196, 204], "remotetensordictreplaybuff": 190, "prioritizedsampl": 190, "boundedtensorspec": 190, "unboundedcontinuoustensorspec": [190, 203], "binarydiscretetensorspec": 190, "multonehotdiscretetensorspec": 190, "discretetensorspec": 190, "multistep": [190, 196, 197], "gymlikeenv": 190, "centercrop": 190, "grayscal": [190, 197, 203], "flattenobserv": 190, "unsqueezetransform": 190, "observationtransform": 190, "catfram": [190, 197], "finitetensordictcheck": 190, "noopresetenv": [190, 203, 204], "binarizereward": 190, "pinmemorytransform": 190, "gsdenois": 190, "tensordictprim": 190, "r3mtransform": 190, "viptransform": 190, "viprewardtransform": 190, "step_mdp": [190, 196, 197, 203, 204], "get_available_librari": 190, "dreamerenv": 190, "dmcontrolenv": [190, 196, 199, 203], "dmcontrolwrapp": 190, "jumanjienv": 190, "jumanjiwrapp": 190, "actorcriticwrapp": [190, 201], "is_tensordict_compat": 190, "ensure_tensordict_compat": 190, "qvaluehook": 190, "distributionalqvaluehook": 190, "duelingcnndqnet": [190, 197], "distributionaldqnnet": 190, "lstmnet": 190, "dreameractor": 190, "obsencod": 190, "obsdecod": 190, "rssmprior": 190, "rssmposterior": 190, "reset_nois": 190, "cemplann": 190, "mpcplannerbas": 190, "truncatednorm": 190, "tanhdelta": [190, 196], "onehotcategor": 190, "inv_softplu": 190, "distributionaldqnloss": [190, 197], "tdlambdaestim": 190, "tdestim": 190, "generalized_advantage_estim": 190, "vec_generalized_advantage_estim": 190, "vec_td_lambda_return_estim": 190, "vec_td_lambda_advantage_estim": [190, 196, 197], "td_lambda_return_estim": 190, "td_lambda_advantage_estim": 190, "td_advantage_estim": 190, "distance_loss": 190, "hold_out_net": [190, 196], "hold_out_param": 190, "softupd": [190, 196], "hardupd": [190, 196], "checkpoint": 190, "batchsubsampl": [190, 194], "countframeslog": 190, "logreward": [190, 194], "optimizerhook": 190, "rewardnorm": 190, "selectkei": [190, 194], "updateweight": [190, 194], "clearcudacach": 190, "builder": [190, 197, 203], "sync_sync_collector": 190, "sync_async_collector": 190, "make_collector_offpolici": 190, "make_collector_onpolici": 190, "parallel_env_constructor": [190, 196], "make_sac_loss": 190, "make_a2c_loss": 190, "make_dqn_loss": 190, "make_ddpg_loss": 190, "make_target_updat": 190, "make_ppo_loss": 190, "make_redq_loss": 190, "make_dqn_actor": 190, "make_ddpg_actor": [190, 196], "make_a2c_model": 190, "make_sac_model": 190, "make_redq_model": 190, "make_replay_buff": [190, 196], "correct_for_frame_skip": 190, "get_stats_random_rollout": [190, 196], "implement_for": 190, "journei": 191, "guid": [191, 196, 197], "textbook": 191, "highlight": 191, "readi": [191, 199], "ever": 191, "cover": [191, 204], "bump": 191, "think": [191, 203], "commun": [191, 203], "benefit": 191, "submit": [191, 204], "pr": 191, "outer": [194, 196, 203], "believ": 194, "scheme": [194, 203], "substenti": 194, "sketch": 194, "_pre_steps_log_hook": 194, "_pre_optim_hook": 194, "sub_batch": 194, "_post_loss_hook": 194, "post_loss": 194, "_post_optim_hook": 194, "post_optim": 194, "_post_optim_log": 194, "post_optim_log": 194, "_post_steps_hook": 194, "_post_steps_log_hook": 194, "post_steps_log": 194, "comment": [194, 204], "categori": 194, "extens": 194, "replaybuffertrain": 194, "reserv": 194, "trainerhookbas": 194, "three": [194, 197], "logginghook": 194, "logging_hook": 194, "save_dict": 194, "some_valu": 194, "els": [194, 196, 197], "torchsnapshot": 194, "ckpt_backend": 194, "py": [194, 196, 197, 199, 200, 201, 202, 203, 204], "wherea": [194, 196, 201], "pt": [194, 197], "filepath": 194, "select_kei": 194, "save_train": 194, "load_from_fil": 194, "perfectli": 194, "intern": 195, "click": [196, 197, 199, 201, 202, 203, 204], "tutori": [196, 197, 199, 200, 201, 203], "scratch": [196, 197], "familiar": [196, 197, 203], "suffici": [196, 197], "transpar": [196, 197], "understood": [196, 197], "understand": [196, 197], "sota": [196, 197, 204], "rather": [196, 197], "illustr": [196, 197], "deepcopi": 196, "matplotlib": [196, 197, 203], "pyplot": [196, 197, 203], "plt": [196, 197, 203], "ornsteinuhlenbeckprocesswrapp": 196, "wish": 196, "env_librari": 196, "env_task": 196, "env_arg": 196, "elif": [196, 197], "notimplementederror": 196, "rescal": 196, "leav": 196, "make_transformed_env": 196, "reward_sc": 196, "double_to_float_list": 196, "double_to_float_inv_list": 196, "dmcontrol": 196, "downstream": 196, "_stat": 196, "leverag": [196, 203], "adopt": [196, 203], "env_per_collector": 196, "env_creat": 196, "parallel_env": [196, 203, 204], "td_stat": 196, "_td_stat": 196, "numel": 196, "_td_stats_select": 196, "to_tensordict": [196, 197, 202], "got": [196, 202], "isfinit": 196, "sd": 196, "get_env_stat": 196, "proof_env": 196, "env_spec": 196, "actor_net": 196, "num_lay": 196, "actor_modul": [196, 204], "q_net": 196, "qnet": 196, "frequenc": 196, "make_record": 196, "recorder_obj": 196, "higher": [196, 197, 203], "likelihood": 196, "special": [196, 201, 203], "arrai": 196, "prb": 196, "buffer_s": [196, 197], "buffer_scratch_dir": 196, "adjust": 196, "device_count": [196, 197, 203], "1000000": 196, "ou": 196, "becom": [196, 203], "lr": [196, 197], "5e": 196, "weight_decai": 196, "5000": 196, "warm": 196, "tau": [196, 197], "005": [196, 197], "tmp": [196, 197], "n_steps_forward": 196, "semin": 196, "ornstein": 196, "uhlenbeck": 196, "qnet_target": 196, "annealing_num_step": [196, 197], "9152e": 196, "3728e": 196, "00": [196, 197, 200], "6790e": 196, "02": [196, 197], "8100e": 196, "0432e": 196, "4661e": 196, "7335e": 196, "6330e": 196, "3439e": 196, "04": [196, 197], "3564e": 196, "1885e": 196, "4405e": 196, "1127e": 196, "9993e": 196, "7058e": 196, "7317e": 196, "3022e": 196, "2335": 196, "3836": 196, "3375": 196, "3587": 196, "3461": 196, "4445": 196, "3917": 196, "3489": 196, "5510": 196, "5761": 196, "1731": 196, "4106": 196, "3918": 196, "0521": 196, "4038": 196, "4419": 196, "9479": 196, "coupl": 196, "async": [196, 204], "transmiss": 196, "3018685293": 196, "adam": [196, 197], "optimizer_actor": 196, "optimizer_qnet": 196, "total_collection_step": 196, "scheduler1": 196, "lr_schedul": 196, "cosineannealinglr": 196, "t_max": 196, "scheduler2": 196, "temporarili": 196, "differenti": 196, "henc": 196, "word": [196, 203], "Then": [196, 199], "fed": 196, "hood": 196, "metadata": [196, 203], "ommit": 196, "earli": [196, 204], "rewards_ev": 196, "norm_factor_train": 196, "collected_fram": 196, "pbar": [196, 197], "r0": 196, "filter": 196, "current_fram": [196, 197], "sampled_tensordict": 196, "backprop": 196, "next_valu": [196, 197], "value_est": 196, "value_loss": 196, "pow": [196, 197], "sampled_tensordict_actor": 196, "actor_loss": 196, "p_in": 196, "p_dest": 196, "zip": [196, 198], "copy_": 196, "b_in": 196, "b_dest": 196, "td_record": 196, "r_evalu": 196, "set_descript": [196, 197], "4f": [196, 197], "2500": 196, "07": 196, "258": 196, "57it": 196, "memmapstorag": [196, 197], "69q_lpck": 196, "057220458984375": 196, "mb": [196, 197, 200], "b77a9p9a": 196, "002384185791015625": 196, "psta8gx9": 196, "0095367431640625": 196, "q71pz8w3": 196, "em67348": 196, "tlgxuu3d": 196, "rmziopo6": 196, "1621246337890625": 196, "caeaatvi": 196, "ts05_w6h": 196, "gjjxy8j2": 196, "qf8fzy_8": 196, "steps_to_next_ob": [196, 197], "ttkbigfz": 196, "019073486328125": 196, "fgjxtrrf": 196, "tmpm3zulm6j": 196, "2201": 196, "3075": 196, "7568": 196, "05": [196, 197], "40": [196, 197], "186": 196, "61it": 196, "1951": 196, "60": [196, 204], "1500": 196, "84it": [196, 197], "8002": 196, "80": 196, "320": [196, 197, 203], "40it": [196, 197], "0825": 196, "316": 196, "20it": 196, "0302": 196, "09": [196, 197], "plot": [196, 197], "mention": [196, 197, 203], "figur": [196, 197, 201, 203], "label": [196, 197, 202], "legend": [196, 197], "xlabel": [196, 197], "ylabel": [196, 197], "tight_layout": [196, 197], "250": 196, "devid": 196, "100000": [196, 197], "batch_size_traj": 196, "simplic": [196, 201], "td_lambda": 196, "95": [196, 197], "roughli": [196, 204], "four": 196, "big": [196, 197, 203], "inde": [196, 202], "revert": 196, "compli": [196, 202], "incompat": [196, 202], "bit": 196, "rand_idx": 196, "d2g89tvw": 196, "1444091796875": 196, "7y16ps": 196, "0476837158203125": 196, "m5xyc8f8": 196, "000762939453125": 196, "bv2eyx7": 196, "f9gduw7x": 196, "24249267578125": 196, "6_l90ca0": 196, "_ulpch3v": 196, "19073486328125": 196, "xs5pujak": 196, "rbudcm7_": 196, "tmpbjsyc3hr": 196, "28": [196, 197], "titl": [196, 197], "labmda": 196, "text": 196, "minut": [196, 197, 199, 201, 202, 203, 204], "56": [196, 200], "522": [196, 200], "coding_ddpg": [196, 200], "jupyt": [196, 197, 198, 199, 201, 202, 203, 204], "ipynb": [196, 197, 199, 201, 202, 203, 204], "galleri": [196, 197, 198, 199, 201, 202, 203, 204], "sphinx": [196, 197, 198, 199, 201, 202, 203, 204], "cartpol": [197, 203], "tabl": 197, "pick": 197, "highest": 197, "discretiz": 197, "amort": 197, "seen": 197, "past": 197, "esitm": 197, "ipython": 197, "get_funct": [197, 201], "is_notebook": 197, "shell": 197, "get_ipython": 197, "__class__": 197, "__name__": 197, "zmqinteractiveshel": 197, "qtconsol": 197, "terminalinteractiveshel": 197, "nameerror": 197, "interpret": 197, "hyperparam": 197, "hopefulli": 197, "sentit": 197, "variat": 197, "2e": 197, "harder": [197, 204], "restrict": [197, 203], "n_optim": 197, "n_worker": 197, "smooth": 197, "loos": 197, "notic": 197, "eps_greedy_v": 197, "eps_greedy_val_env": 197, "predefin": 197, "init_bia": 197, "500000": 197, "techin": 197, "dummy_env": 197, "9924753904342651": 197, "07655905932188034": 197, "pole": 197, "un": 197, "actuat": 197, "cart": 197, "frictionless": 197, "upright": [197, 203], "balanc": [197, 203], "pixels_sav": 197, "eval_rollout": 197, "imageio": 197, "mimwrit": 197, "cartpole_random": 197, "mp4": 197, "fp": 197, "480": 197, "360": 197, "trick": 197, "num_ob": 197, "num_act": 197, "make_model": 197, "output_s": 197, "could": [197, 202, 203], "unflatten_kei": 197, "fairli": 197, "params_target": 197, "actor_explor": 197, "eps_init": 197, "eps_end": 197, "pai": 197, "attent": [197, 201], "params_flat": 197, "flatten_kei": 197, "params_target_flat": 197, "600": 197, "bootstrap": 197, "value_next_step": 197, "not_termin": 197, "significantli": 197, "data_collector": 197, "traj_lengths_ev": 197, "grad_val": 197, "traj_length": 197, "mavg": 197, "traj_count": 197, "prev_traj_count": 197, "enough": 197, "send": [197, 202, 204], "sampled_data": 197, "sampled_data_out": 197, "tdstep": 197, "exp_valu": 197, "mse_loss": 197, "gv": 197, "p": [197, 201], "sqrt": 197, "clip_grad_value_": 197, "p1": 197, "p2": 197, "set_": 197, "clear_output": 197, "gcf": 197, "clf": 197, "figsiz": 197, "15": 197, "subplot": [197, 203], "traj": 197, "savefig": 197, "dqn_td0": 197, "png": 197, "56it": 197, "tmpxhye2kfz": 197, "00762939453125": 197, "tmpc286wguv": 197, "003814697265625": 197, "tmpt8h08rvh": 197, "0019073486328125": 197, "tmpm65najw": 197, "000476837158203125": 197, "tmpjsj6oa5p": 197, "tmpvcepywul": 197, "31": 197, "25": 197, "tmpw1x2t7yo": 197, "tmpbhmz4zxe": 197, "tmpyqe7r_yg": 197, "tmpu3uqto9": 197, "37": 197, "52it": 197, "19": 197, "96": 197, "52": 197, "66it": 197, "0074": 197, "8632": 197, "26": [197, 200, 203], "36": 197, "12it": 197, "1714": 197, "18": [197, 203], "3189": 197, "29it": 197, "2797": 197, "0664": 197, "192": 197, "24it": 197, "21": [197, 199], "4259": 197, "9056": 197, "45": 197, "224": 197, "22": 197, "38it": 197, "7113": 197, "9448": 197, "51": 197, "256": 197, "23": 197, "3930": 197, "3628": 197, "58": 197, "288": 197, "83it": 197, "27": [197, 200, 204], "7130": 197, "9446": 197, "92it": 197, "6751": 197, "0902": 197, "70": 197, "352": 197, "70it": 197, "3286": 197, "0947": 197, "77": 197, "384": 197, "3337": 197, "6477": 197, "83": 197, "416": 197, "06it": 197, "6387": 197, "9841": 197, "90": 197, "448": 197, "79it": 197, "29": 197, "2140": 197, "4624": 197, "09it": 197, "0949": 197, "9516": 197, "512it": 197, "00it": 197, "9271": 197, "7825": 197, "39": 197, "imshow": [197, 203], "imread": 197, "axi": 197, "1499": 197, "traj_lengths_train": 197, "saved_results_td0": 197, "entir": 197, "capac": 197, "smooth_l1_loss": 197, "clip_grad_norm_": 197, "dqn_tdlambda": 197, "76it": 197, "03it": 197, "tmpp66fdizf": 197, "244140625": 197, "tmpihjjdrzn": 197, "1220703125": 197, "tmp_weshr5j": 197, "06103515625": 197, "tmpvgx0v09c": 197, "0152587890625": 197, "tmpzlzv0i1t": 197, "tmpjkeb8st1": 197, "tmpmlssqm_i": 197, "tmpolsry1k": 197, "tmp8nl10izh": 197, "tmpolbbqj4x": 197, "55it": 197, "41it": 197, "3474": 197, "1635": 197, "73it": 197, "9076": 197, "8870": 197, "43": 197, "8461": 197, "2767": 197, "17it": 197, "3571": 197, "6400": [197, 204], "13it": 197, "3229": 197, "9208": 197, "27it": 197, "0513": 197, "2692": 197, "32it": 197, "8131": 197, "6708": 197, "49it": 197, "6156": 197, "6626": 197, "71it": 197, "3112": 197, "7024": 197, "68it": 197, "49": [197, 200], "8099": 197, "4585": 197, "2757": 197, "4437": 197, "47": 197, "69it": 197, "3515": 197, "0202": 197, "48": 197, "2361": 197, "3372": 197, "60it": 197, "1542": 197, "8749": 197, "saved_results_tdlambda": 197, "fewer": 197, "load_td0": 197, "load_tdlambda": 197, "frames_td0": 197, "frames_tdlambda": 197, "evals_td0": 197, "evals_tdlambda": 197, "mavgs_td0": 197, "mavgs_tdlambda": 197, "losses_td0": 197, "losses_tdlambda": 197, "values_td0": 197, "values_tdlambda": 197, "grad_vals_td0": 197, "grad_vals_tdlambda": 197, "traj_lengths_td0": 197, "traj_lengths_tdlambda": 197, "traj_count_td0": 197, "traj_count_tdlambda": 197, "td0": 197, "goe": [197, 203], "greatli": 197, "nth": 197, "noticebli": 197, "myopic": 197, "collectorclass": 197, "till": 197, "worst": 197, "accuraci": 197, "fanci": 197, "techniqu": 197, "55": [197, 200], "421": [197, 200], "coding_dqn": [197, 200], "tutorials_python": 198, "tutorials_jupyt": 198, "distinct": 199, "humanoid": [199, 203], "walk": [199, 203], "env1": 199, "env1_obs_kei": 199, "observation_stand": 199, "env2": 199, "env2_obs_kei": 199, "observation_walk": 199, "tdreset1": 199, "tdreset2": 199, "tdreset": 199, "67": 199, "backbon": [199, 204], "policy_common": 199, "policy_stand": 199, "policy_walk": 199, "seq": 199, "But": 199, "env1_mak": 199, "env2_mak": 199, "_single_task": 199, "td_rollout": 199, "shown": 199, "654": [199, 200], "multi_task": [199, 200], "746": 200, "torchrl_demo": [200, 204], "981": [200, 204], "torch_env": [200, 203], "009": [200, 203], "137": [200, 201], "tensordict_tutori": [200, 202], "022": [200, 202], "recommand": 201, "conveni": [201, 202], "a_out": 201, "mergelinear": 201, "in_1": 201, "in_2": 201, "linear_1": 201, "linear_2": 201, "x_1": 201, "x_2": 201, "multiheadlinear": 201, "out_1": 201, "out_2": 201, "splitlinear": 201, "output_1": 201, "output_2": 201, "split_and_merge_linear": 201, "make_functional_with_buff": 201, "replica": 201, "params_expand": [201, 204], "buffers_expand": 201, "num_model": 201, "group": 201, "zeros_lik": 201, "result_td": 201, "ok": 201, "conflict": 201, "wire": 201, "tensordictsequentialand": 201, "block": 201, "demonstr": [201, 203], "architectur": 201, "vaswani": 201, "2017": 201, "asid": 201, "src": 201, "ffn": 201, "skiplayernorm": 201, "splithead": 201, "tokenstoqkv": 201, "attentionblocktensordict": 201, "connect": 201, "moreov": 201, "complic": [201, 202, 203], "to_nam": 201, "from_nam": 201, "to_dim": 201, "to_len": 201, "from_dim": 201, "latent_dim": 201, "num_head": 201, "x_out": 201, "attn": 201, "thank": 201, "transformerblockencodertensordict": 201, "transformerblockdecodertensordict": 201, "token": 201, "extract": 201, "x_from": 201, "x_to": 201, "transformerencodertensordict": 201, "num_block": 201, "transformerdecodertensordict": 201, "transformertensordict": 201, "from_len": 201, "x_encod": 201, "x_decod": 201, "ve": 201, "operar": 201, "td_token": 201, "tdtransform": 201, "t1": 201, "t2": 201, "011441469192504883": 201, "t3": 201, "t4": 201, "008064985275268555": 201, "minim": 201, "introduc": [201, 202], "margin": 201, "deal": 202, "furthermor": 202, "awai": 202, "organ": 202, "power": 202, "segment": 202, "get_data_a": 202, "get_data_b": 202, "reusabl": 202, "lot": 202, "rewriten": 202, "modal": 202, "get_data": 202, "reus": 202, "argu": 202, "dictdataset": 202, "__getitem__": 202, "collat": 202, "collate_dict_fn": 202, "dict_list": 202, "final_dict": 202, "single_dict": 202, "simpler": 202, "collate_tensordict_fn": 202, "furtherdown": 202, "_permutedtensordict": 202, "_unsqueezedtensordict": 202, "_viewedtensordict": 202, "datastructur": 202, "explicitli": 202, "caramba": 202, "algebra": 202, "foo": [202, 203], "multidimension": 202, "insid": [202, 203], "violat": 202, "err": 202, "resp": 202, "among": 202, "tensordict_clon": 202, "tensodict": 202, "tuple_index": 202, "new_tensordict": 202, "get_sub_tensordict": 202, "subtensordict": 202, "pointer": 202, "subtd": 202, "td2": 202, "booltensor": 202, "fashion": 202, "clonned_tensordict": 202, "staked_tensordict": 202, "contigu": [202, 204], "isinst": 202, "unbind": 202, "list_tensordict": 202, "comeback": 202, "permut": [202, 203, 204], "unsqueezed_tensordict": 202, "role": 203, "supervis": 203, "unsupervis": 203, "rom": 203, "licens": 203, "pygam": 203, "unifi": 203, "_build_env": 203, "sphinx_gallery_start_ignor": 203, "warn": 203, "filterwarn": 203, "sphinx_gallery_end_ignor": 203, "adventur": 203, "ram": 203, "airraid": 203, "alien": 203, "amidar": 203, "assault": 203, "happen": 203, "continuousbox": [203, 204], "inf": 203, "tool": 203, "5059": 203, "pack": 203, "brief": 203, "exectut": 203, "brax": 203, "reproduct": 203, "did": 203, "shortcut": 203, "tensordict_tprim": 203, "tensordict_rollout": [203, 204], "quickli": 203, "axesimag": 203, "0x7fb7d96b6f10": 203, "inconsist": 203, "supplementari": 203, "again": 203, "acrobot": 203, "swingup": 203, "swingup_spars": 203, "ball_in_cup": 203, "catch": 203, "balance_spars": 203, "three_pol": 203, "two_pol": 203, "finger": 203, "turn_easi": 203, "turn_hard": 203, "fish": 203, "swim": 203, "hopper": 203, "hop": 203, "run_pure_st": 203, "bring_bal": 203, "bring_peg": 203, "insert_bal": 203, "insert_peg": 203, "point_mass": 203, "reacher": 203, "swimmer": 203, "swimmer6": 203, "swimmer15": 203, "walker": 203, "dog": 203, "fetch": 203, "trot": 203, "humanoid_cmu": 203, "lqr": 203, "lqr_2_1": 203, "lqr_6_2": 203, "quadrup": 203, "escap": 203, "stacker": 203, "stack_2": 203, "stack_4": 203, "240": [203, 204], "env_transform": 203, "wrapper1": 203, "wrapper2": 203, "obviou": 203, "truth": 203, "extern": 203, "env0": 203, "env_transformed_bi": 203, "stanc": 203, "transformeddistribut": 203, "base_dist": 203, "ndunboundeddiscretetensorspec": 203, "concat": 203, "mofidi": 203, "_inv_apply_transform": 203, "_apply_transform": 203, "transformedenviron": 203, "moderet": 203, "computation": 203, "legitim": 203, "side": 203, "incom": 203, "amongst": 203, "has_cuda": 203, "simplest": 203, "wor": 203, "convention": 203, "program": 203, "scope": 203, "difficulti": 203, "markovian": 203, "reconstruct": 203, "3288080526": 203, "sometim": 203, "constain": 203, "sleep": 203, "uuid": 203, "uuid1": 203, "bar_": 203, "get_someth": 203, "bar_160ccbac": 203, "7af6": 203, "11ed": 203, "8def": 203, "0242ac120002": 203, "aargh": 203, "ourselv": 203, "foo_list": 203, "vec_env": 203, "_dispatch_caller_parallel": 203, "0x7fb7c44f5640": 203, "bar_19533f1c": 203, "b88b": 203, "bar_19425756": 203, "99a8": 203, "bar_19442478": 203, "a915": 203, "121": 203, "122": 203, "parallen": 203, "carefulli": 203, "commonli": 203, "approxim": 203, "particularili": 203, "evolv": 203, "caution": 203, "previous": 203, "steadi": 203, "approx": 203, "1946": 203, "0786": 203, "2230": 203, "0400": 203, "2224": 203, "1931": 203, "_extra_st": 203, "observation_count": 203, "observation_ssq": 203, "observation_sum": 203, "1110": 203, "1844": 203, "0907": 203, "9096": 203, "9701": 203, "0178": 203, "dispach": 203, "small": 203, "absor": 203, "demo": 204, "icml": 204, "dai": 204, "overview": 204, "vmoen": 204, "fb": 204, "question": 204, "team": 204, "decid": 204, "invest": 204, "platform": 204, "media": 204, "truli": 204, "rest": 204, "predominantli": 204, "wandb": 204, "tensorboard": 204, "tensordict1": 204, "tensordict2": 204, "tensordict_sampl": 204, "_sum_tre": 204, "28791671991348267": 204, "gym_env": 204, "0000": 204, "squash": 204, "lazyconv2d": 204, "backbone_modul": 204, "value_modul": 204, "tensordict_exp": 204, "base_modul": 204, "0137": 204, "1524": 204, "0641": 204, "grad_fn": 204, "addbackward0": 204, "indexputbackward0": 204, "8728": 204, "1335": 204, "9833": 204, "3497": 204, "6889": 204, "6433": 204, "clampbackward1": 204, "1131": 204, "1761": 204, "3425": 204, "2665": 204, "2915": 204, "6207": 204, "1441": 204, "2375": 204, "1242": 204, "1372": 204, "3810": 204, "meanbackward1": 204, "tensordicts_prealloc": 204, "tensordicts_stack": 204, "disclaim": 204, "concatmodul": 204, "loss_fn": 204, "loss_td": 204, "loss_valu": 204, "pred_valu": 204, "pred_value_max": 204, "target_value_max": 204, "bug": 204, "bc": 204, "year": 204, "roadmap": 204, "compris": 204, "hierarch": 204, "contributor": 204, "curiou": 204, "feedback": 204, "nascent": 204, "pypi": 204}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "SyncDataCollector"], [14, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[13, 1, 1, "", "iterator"], [13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "rollout"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[15, 2, 1, "", "split_trajectories"]], "torchrl.data": [[16, 0, 1, "", "BinaryDiscreteTensorSpec"], [17, 0, 1, "", "BoundedTensorSpec"], [18, 0, 1, "", "CompositeSpec"], [19, 0, 1, "", "DiscreteTensorSpec"], [20, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [21, 0, 1, "", "MultiStep"], [22, 0, 1, "", "NdBoundedTensorSpec"], [23, 0, 1, "", "NdUnboundedContinuousTensorSpec"], [24, 0, 1, "", "OneHotDiscreteTensorSpec"], [25, 0, 1, "", "PrioritizedReplayBuffer"], [26, 0, 1, "", "ReplayBuffer"], [27, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [28, 0, 1, "", "TensorDictReplayBuffer"], [29, 0, 1, "", "TensorSpec"], [30, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "keys"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[21, 1, 1, "", "add_module"], [21, 1, 1, "", "apply"], [21, 1, 1, "", "bfloat16"], [21, 1, 1, "", "buffers"], [21, 1, 1, "", "children"], [21, 1, 1, "", "cpu"], [21, 1, 1, "", "cuda"], [21, 1, 1, "", "double"], [21, 1, 1, "", "eval"], [21, 1, 1, "", "extra_repr"], [21, 1, 1, "", "float"], [21, 1, 1, "", "forward"], [21, 1, 1, "", "get_buffer"], [21, 1, 1, "", "get_extra_state"], [21, 1, 1, "", "get_parameter"], [21, 1, 1, "", "get_submodule"], [21, 1, 1, "", "half"], [21, 1, 1, "", "ipu"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "modules"], [21, 1, 1, "", "named_buffers"], [21, 1, 1, "", "named_children"], [21, 1, 1, "", "named_modules"], [21, 1, 1, "", "named_parameters"], [21, 1, 1, "", "parameters"], [21, 1, 1, "", "register_backward_hook"], [21, 1, 1, "", "register_buffer"], [21, 1, 1, "", "register_forward_hook"], [21, 1, 1, "", "register_forward_pre_hook"], [21, 1, 1, "", "register_full_backward_hook"], [21, 1, 1, "", "register_load_state_dict_post_hook"], [21, 1, 1, "", "register_module"], [21, 1, 1, "", "register_parameter"], [21, 1, 1, "", "requires_grad_"], [21, 1, 1, "", "set_extra_state"], [21, 1, 1, "", "share_memory"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "to"], [21, 1, 1, "", "to_empty"], [21, 1, 1, "", "train"], [21, 1, 1, "", "type"], [21, 1, 1, "", "xpu"], [21, 1, 1, "", "zero_grad"]], "torchrl.data.NdBoundedTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.NdUnboundedContinuousTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "sample"], [27, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[31, 0, 1, "", "RemoteTensorDictReplayBuffer"], [32, 0, 1, "", "ReplayBuffer"], [33, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "append_transform"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "insert_transform"], [31, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "append_transform"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "insert_transform"], [32, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[33, 1, 1, "", "add"], [33, 1, 1, "", "append_transform"], [33, 1, 1, "", "extend"], [33, 1, 1, "", "insert_transform"], [33, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[34, 0, 1, "", "PrioritizedSampler"], [35, 0, 1, "", "RandomSampler"], [36, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[34, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[37, 0, 1, "", "LazyMemmapStorage"], [38, 0, 1, "", "LazyTensorStorage"], [39, 0, 1, "", "ListStorage"], [40, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[40, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[41, 0, 1, "", "RoundRobinWriter"], [42, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[41, 1, 1, "", "add"], [41, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "extend"]], "torchrl.envs": [[43, 0, 1, "", "EnvBase"], [44, 0, 1, "", "GymLikeEnv"], [45, 2, 1, "", "ModelBasedEnvBase"], [46, 0, 1, "", "ParallelEnv"], [47, 0, 1, "", "SerialEnv"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 3, 1, "", "batch_locked"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "fake_tensordict"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "id0", "rand_step"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "id1", "reset"], [43, 1, 1, "id2", "rollout"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "id3", "set_seed"], [43, 1, 1, "", "share_memory"], [43, 3, 1, "", "specs"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "id4", "step"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "close"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "read_action"], [44, 1, 1, "", "read_done"], [44, 1, 1, "", "read_obs"], [44, 1, 1, "", "read_reward"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_info_dict_reader"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "update_kwargs"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "update_kwargs"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[48, 2, 1, "", "DMControlEnv"], [49, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[50, 2, 1, "", "GymEnv"], [51, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[52, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[53, 2, 1, "", "JumanjiEnv"], [54, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.model_based.dreamer": [[55, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[56, 0, 1, "", "BinarizeReward"], [57, 0, 1, "", "CatFrames"], [58, 0, 1, "", "CatTensors"], [59, 0, 1, "", "CenterCrop"], [60, 0, 1, "", "Compose"], [61, 0, 1, "", "DoubleToFloat"], [62, 0, 1, "", "FiniteTensorDictCheck"], [63, 0, 1, "", "FlattenObservation"], [64, 0, 1, "", "GrayScale"], [65, 0, 1, "", "NoopResetEnv"], [66, 0, 1, "", "ObservationNorm"], [67, 0, 1, "", "ObservationTransform"], [68, 0, 1, "", "PinMemoryTransform"], [69, 0, 1, "", "R3MTransform"], [70, 0, 1, "", "Resize"], [71, 0, 1, "", "RewardClipping"], [72, 0, 1, "", "RewardScaling"], [73, 0, 1, "", "TensorDictPrimer"], [74, 0, 1, "", "ToTensorImage"], [75, 0, 1, "", "Transform"], [76, 0, 1, "", "TransformedEnv"], [77, 0, 1, "", "UnsqueezeTransform"], [78, 0, 1, "", "VIPRewardTransform"], [79, 0, 1, "", "VIPTransform"], [80, 0, 1, "", "VecNorm"], [81, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[56, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[57, 1, 1, "", "reset"], [57, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[58, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[59, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[60, 1, 1, "", "forward"], [60, 1, 1, "", "reset"], [60, 1, 1, "", "to"], [60, 1, 1, "", "transform_input_spec"], [60, 1, 1, "", "transform_observation_spec"], [60, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[61, 1, 1, "", "transform_input_spec"], [61, 1, 1, "", "transform_observation_spec"], [61, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[65, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[66, 1, 1, "", "init_stats"], [66, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[69, 1, 1, "", "forward"], [69, 1, 1, "", "reset"], [69, 1, 1, "", "to"], [69, 1, 1, "", "transform_input_spec"], [69, 1, 1, "", "transform_observation_spec"], [69, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[70, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[71, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[72, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[73, 1, 1, "", "reset"], [73, 1, 1, "", "to"], [73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[75, 1, 1, "", "forward"], [75, 1, 1, "", "reset"], [75, 1, 1, "", "transform_input_spec"], [75, 1, 1, "", "transform_observation_spec"], [75, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[76, 3, 1, "", "action_spec"], [76, 3, 1, "", "batch_locked"], [76, 1, 1, "", "eval"], [76, 3, 1, "", "input_spec"], [76, 1, 1, "", "load_state_dict"], [76, 3, 1, "", "observation_spec"], [76, 3, 1, "", "reward_spec"], [76, 1, 1, "", "set_seed"], [76, 1, 1, "", "state_dict"], [76, 1, 1, "", "to"], [76, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[77, 1, 1, "", "forward"], [77, 1, 1, "", "transform_input_spec"], [77, 1, 1, "", "transform_observation_spec"], [77, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[78, 1, 1, "", "forward"], [78, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[79, 1, 1, "", "forward"], [79, 1, 1, "", "reset"], [79, 1, 1, "", "to"], [79, 1, 1, "", "transform_input_spec"], [79, 1, 1, "", "transform_observation_spec"], [79, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[80, 1, 1, "", "build_td_for_shared_vecnorm"], [80, 1, 1, "", "get_extra_state"], [80, 1, 1, "", "set_extra_state"], [80, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[81, 1, 1, "", "reset"]], "torchrl.envs.utils": [[82, 2, 1, "", "check_env_specs"], [83, 2, 1, "", "exploration_mode"], [84, 2, 1, "", "get_available_libraries"], [85, 2, 1, "", "set_exploration_mode"], [86, 2, 1, "", "step_mdp"]], "torchrl.modules": [[87, 0, 1, "", "Actor"], [88, 0, 1, "", "ActorCriticOperator"], [89, 0, 1, "", "ActorCriticWrapper"], [90, 0, 1, "", "ActorValueOperator"], [91, 0, 1, "", "CEMPlanner"], [92, 0, 1, "", "ConvNet"], [93, 0, 1, "", "DdpgCnnActor"], [94, 0, 1, "", "DdpgCnnQNet"], [95, 0, 1, "", "DdpgMlpActor"], [96, 0, 1, "", "DdpgMlpQNet"], [97, 0, 1, "", "Delta"], [98, 0, 1, "", "DistributionalDQNnet"], [99, 0, 1, "", "DistributionalQValueActor"], [100, 0, 1, "", "DreamerActor"], [101, 0, 1, "", "DuelingCnnDQNet"], [102, 0, 1, "", "LSTMNet"], [103, 0, 1, "", "MLP"], [104, 0, 1, "", "MPCPlannerBase"], [105, 0, 1, "", "NoisyLazyLinear"], [106, 0, 1, "", "NoisyLinear"], [107, 0, 1, "", "ObsDecoder"], [108, 0, 1, "", "ObsEncoder"], [109, 0, 1, "", "OneHotCategorical"], [110, 0, 1, "", "ProbabilisticActor"], [111, 0, 1, "", "QValueActor"], [112, 0, 1, "", "RSSMPosterior"], [113, 0, 1, "", "RSSMPrior"], [114, 0, 1, "", "SafeModule"], [115, 0, 1, "", "SafeProbabilisticModule"], [116, 0, 1, "", "SafeProbabilisticSequential"], [117, 0, 1, "", "SafeSequential"], [118, 0, 1, "", "TanhDelta"], [119, 0, 1, "", "TanhNormal"], [120, 0, 1, "", "TruncatedNormal"], [121, 0, 1, "", "ValueOperator"], [122, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[88, 1, 1, "", "get_critic_operator"], [88, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[89, 1, 1, "", "get_policy_operator"], [89, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[90, 1, 1, "", "get_policy_operator"], [90, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[91, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[92, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[93, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[94, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[95, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[96, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[97, 1, 1, "", "log_prob"], [97, 3, 1, "", "mean"], [97, 3, 1, "", "mode"], [97, 1, 1, "", "rsample"], [97, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[98, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[100, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[101, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[102, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[103, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[104, 1, 1, "", "forward"], [104, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[105, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[107, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[108, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[109, 1, 1, "", "log_prob"], [109, 3, 1, "", "mode"], [109, 1, 1, "", "rsample"], [109, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[112, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[113, 1, 1, "", "forward"]], "torchrl.modules.SafeModule": [[114, 1, 1, "", "random"], [114, 1, 1, "", "random_sample"], [114, 1, 1, "", "to"]], "torchrl.modules.SafeProbabilisticModule": [[115, 1, 1, "", "random"], [115, 1, 1, "", "random_sample"]], "torchrl.modules.TanhDelta": [[118, 3, 1, "", "mean"], [118, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[119, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[120, 1, 1, "", "log_prob"], [120, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[123, 0, 1, "", "DistributionalQValueHook"], [124, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[125, 0, 1, "", "ensure_tensordict_compatible"], [126, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[127, 0, 1, "", "biased_softplus"], [128, 0, 1, "", "inv_softplus"], [129, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[127, 1, 1, "", "forward"]], "torchrl.objectives": [[130, 0, 1, "", "A2CLoss"], [131, 0, 1, "", "ClipPPOLoss"], [132, 0, 1, "", "DDPGLoss"], [133, 0, 1, "", "DQNLoss"], [134, 0, 1, "", "DistributionalDQNLoss"], [135, 0, 1, "", "HardUpdate"], [136, 0, 1, "", "KLPENPPOLoss"], [137, 0, 1, "", "PPOLoss"], [138, 0, 1, "", "REDQLoss"], [139, 0, 1, "", "SACLoss"], [140, 0, 1, "", "SoftUpdate"], [141, 0, 1, "", "distance_loss"], [142, 0, 1, "", "hold_out_net"], [143, 0, 1, "", "hold_out_params"], [144, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[130, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[131, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[132, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[133, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[134, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[136, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[137, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[138, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[139, 1, 1, "", "forward"]], "torchrl.objectives.value": [[145, 0, 1, "", "GAE"], [146, 0, 1, "", "TDEstimate"], [147, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[145, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[146, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[147, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[148, 0, 1, "", "generalized_advantage_estimate"], [149, 0, 1, "", "td_advantage_estimate"], [150, 0, 1, "", "td_lambda_advantage_estimate"], [151, 0, 1, "", "td_lambda_return_estimate"], [152, 0, 1, "", "vec_generalized_advantage_estimate"], [153, 0, 1, "", "vec_td_lambda_advantage_estimate"], [154, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[155, 0, 1, "", "BatchSubSampler"], [156, 0, 1, "", "ClearCudaCache"], [157, 0, 1, "", "CountFramesLog"], [158, 0, 1, "", "LogReward"], [159, 0, 1, "", "OptimizerHook"], [160, 0, 1, "", "Recorder"], [161, 0, 1, "", "ReplayBuffer"], [162, 0, 1, "", "RewardNormalizer"], [163, 0, 1, "", "SelectKeys"], [164, 0, 1, "", "Trainer"], [165, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[161, 1, 1, "", "add"], [161, 1, 1, "", "extend"], [161, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[166, 2, 1, "", "correct_for_frame_skip"], [167, 2, 1, "", "get_stats_random_rollout"], [168, 2, 1, "", "make_a2c_loss"], [169, 2, 1, "", "make_a2c_model"], [170, 2, 1, "", "make_collector_offpolicy"], [171, 2, 1, "", "make_collector_onpolicy"], [172, 2, 1, "", "make_ddpg_actor"], [173, 2, 1, "", "make_ddpg_loss"], [174, 2, 1, "", "make_dqn_actor"], [175, 2, 1, "", "make_dqn_loss"], [176, 2, 1, "", "make_ppo_loss"], [177, 2, 1, "", "make_ppo_model"], [178, 2, 1, "", "make_redq_loss"], [179, 2, 1, "", "make_redq_model"], [180, 2, 1, "", "make_replay_buffer"], [181, 2, 1, "", "make_sac_loss"], [182, 2, 1, "", "make_sac_model"], [183, 2, 1, "", "make_target_updater"], [184, 2, 1, "", "make_trainer"], [185, 2, 1, "", "parallel_env_constructor"], [186, 2, 1, "", "sync_async_collector"], [187, 2, 1, "", "sync_sync_collector"], [188, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 192, 193, 194, 195, 196, 197, 203, 204], "document": [0, 8], "tutori": 0, "refer": [0, 190], "indic": 0, "tabl": 0, "collector": [1, 196], "packag": [1, 2, 3, 192, 193, 194, 195], "data": [1, 2, 196, 204], "helper": [1, 3], "function": [1, 204], "replai": [2, 196, 204], "buffer": [2, 196, 204], "compos": [2, 60], "prototyp": 2, "tensorspec": [2, 29], "util": [2, 192, 193, 194], "env": [3, 203, 204], "vector": [3, 204], "transform": [3, 75, 196, 201, 203, 204], "domain": 3, "specif": [3, 199], "librari": [3, 204], "work": [4, 5], "gym": [4, 203], "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 202], "up": 5, "your": [5, 196], "environ": [5, 6, 196, 197, 199, 203, 204], "instal": [5, 6, 204], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 196, 197, 201, 204], "common": [5, 6], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 203], "all": 6, "new": 6, "bindindg": 6, "2": [6, 201], "1": [6, 201], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "train": [7, 196, 197], "cluster": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 201], "rl": [8, 204], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "syncdatacollector": 13, "asyncdatacollector": 14, "split_trajectori": 15, "binarydiscretetensorspec": 16, "boundedtensorspec": 17, "compositespec": 18, "discretetensorspec": 19, "multonehotdiscretetensorspec": 20, "multistep": 21, "ndboundedtensorspec": 22, "ndunboundedcontinuoustensorspec": 23, "onehotdiscretetensorspec": 24, "prioritizedreplaybuff": 25, "replaybuff": [26, 32, 161], "tensordictprioritizedreplaybuff": 27, "tensordictreplaybuff": [28, 33], "unboundedcontinuoustensorspec": 30, "remotetensordictreplaybuff": 31, "prioritizedsampl": 34, "randomsampl": 35, "sampler": 36, "lazymemmapstorag": 37, "lazytensorstorag": 38, "liststorag": 39, "storag": 40, "roundrobinwrit": 41, "writer": 42, "envbas": 43, "gymlikeenv": 44, "modelbasedenvbas": 45, "parallelenv": 46, "serialenv": 47, "dmcontrolenv": 48, "dmcontrolwrapp": 49, "gymenv": 50, "gymwrapp": 51, "habitatenv": 52, "jumanjienv": 53, "jumanjiwrapp": 54, "dreamerenv": 55, "binarizereward": 56, "catfram": 57, "cattensor": 58, "centercrop": 59, "doubletofloat": 61, "finitetensordictcheck": 62, "flattenobserv": 63, "grayscal": 64, "noopresetenv": 65, "observationnorm": 66, "observationtransform": 67, "pinmemorytransform": 68, "r3mtransform": 69, "resiz": 70, "rewardclip": 71, "rewardsc": 72, "tensordictprim": 73, "totensorimag": 74, "transformedenv": 76, "unsqueezetransform": 77, "viprewardtransform": 78, "viptransform": 79, "vecnorm": [80, 203], "gsdenois": 81, "check_env_spec": 82, "exploration_mod": 83, "get_available_librari": 84, "set_exploration_mod": 85, "step_mdp": 86, "actor": [87, 201], "actorcriticoper": [88, 201], "actorcriticwrapp": 89, "actorvalueoper": 90, "cemplann": 91, "convnet": 92, "ddpgcnnactor": 93, "ddpgcnnqnet": 94, "ddpgmlpactor": 95, "ddpgmlpqnet": 96, "delta": 97, "distributionaldqnnet": 98, "distributionalqvalueactor": 99, "dreameractor": 100, "duelingcnndqnet": 101, "lstmnet": 102, "mlp": 103, "mpcplannerbas": 104, "noisylazylinear": 105, "noisylinear": 106, "obsdecod": 107, "obsencod": 108, "onehotcategor": 109, "probabilisticactor": [110, 201], "qvalueactor": 111, "rssmposterior": 112, "rssmprior": 113, "safemodul": 114, "safeprobabilisticmodul": 115, "safeprobabilisticsequenti": 116, "safesequenti": 117, "tanhdelta": 118, "tanhnorm": 119, "truncatednorm": 120, "valueoper": 121, "reset_nois": 122, "distributionalqvaluehook": 123, "qvaluehook": 124, "ensure_tensordict_compat": 125, "is_tensordict_compat": 126, "biased_softplu": 127, "inv_softplu": 128, "map": 129, "a2closs": 130, "clipppoloss": 131, "ddpgloss": 132, "dqnloss": 133, "distributionaldqnloss": 134, "hardupd": 135, "klpenppoloss": 136, "ppoloss": 137, "redqloss": 138, "sacloss": 139, "softupd": 140, "distance_loss": 141, "hold_out_net": 142, "hold_out_param": 143, "next_state_valu": 144, "gae": 145, "tdestim": 146, "tdlambdaestim": 147, "generalized_advantage_estim": 148, "td_advantage_estim": 149, "td_lambda_advantage_estim": 150, "td_lambda_return_estim": 151, "vec_generalized_advantage_estim": 152, "vec_td_lambda_advantage_estim": 153, "vec_td_lambda_return_estim": 154, "batchsubsampl": 155, "clearcudacach": 156, "countframeslog": 157, "logreward": 158, "optimizerhook": 159, "record": [160, 196], "rewardnorm": 162, "selectkei": 163, "trainer": [164, 194], "updateweight": 165, "correct_for_frame_skip": 166, "get_stats_random_rollout": 167, "make_a2c_loss": 168, "make_a2c_model": 169, "make_collector_offpolici": 170, "make_collector_onpolici": 171, "make_ddpg_actor": 172, "make_ddpg_loss": 173, "make_dqn_actor": 174, "make_dqn_loss": 175, "make_ppo_loss": 176, "make_ppo_model": 177, "make_redq_loss": 178, "make_redq_model": 179, "make_replay_buff": 180, "make_sac_loss": 181, "make_sac_model": 182, "make_target_updat": 183, "make_train": 184, "parallel_env_constructor": 185, "sync_async_collector": 186, "sync_sync_collector": 187, "transformed_env_constructor": 188, "readm": [189, 198], "demo": [189, 198], "api": 190, "knowledg": 191, "base": [191, 197], "contribut": [191, 204], "content": 191, "modul": [192, 204], "tensordict": [192, 202, 204], "hook": [192, 194], "model": [192, 196, 197, 204], "explor": 192, "planner": 192, "distribut": 192, "object": [193, 196, 204], "dqn": [193, 197], "ddpg": [193, 196], "sac": 193, "redq": 193, "ppo": 193, "a2c": 193, "return": 193, "checkpoint": 194, "builder": 194, "_util": 195, "code": [196, 197, 202], "parallel": [196, 199, 203], "execut": [196, 199], "normal": 196, "observ": 196, "build": [196, 197], "evalu": 196, "hyperparamet": [196, 197], "initi": 196, "time": [196, 200], "polici": [196, 199], "experi": 196, "result": 196, "sampl": 196, "trajectori": 196, "td": [196, 197], "lambda": [196, 197], "pixel": 197, "The": 197, "problem": 197, "deep": 197, "q": 197, "network": 197, "regular": 197, "loop": 197, "conclus": 197, "possibl": 197, "improv": [197, 202], "task": 199, "multi": 199, "divers": 199, "rollout": [199, 203], "comput": 200, "tensordictmodul": [201, 204], "exampl": 201, "simpl": 201, "usag": [201, 202], "multipl": 201, "input": 201, "3": 201, "output": 201, "4": 201, "combin": 201, "tensordictsequenti": 201, "5": 201, "compat": 201, "do": [201, 202], "": 201, "don": 201, "t": [201, 202], "probabilistictensordictmodul": 201, "showcas": 201, "implement": 201, "benchmark": 201, "modular": 202, "can": 202, "i": 202, "thi": 202, "python": 202, "dict": 202, "structur": 202, "dictionari": 202, "featur": 202, "get": 202, "kei": 202, "valu": 202, "updat": 202, "tensordict_or_dict": 202, "del": 202, "tensor": 202, "batch": 202, "size": 202, "devic": [202, 203], "memori": 202, "share": 202, "via": 202, "physic": 202, "oper": 202, "spec": 203, "seed": 203, "reset": 203, "step": 203, "frame_skip": 203, "deepmind": 203, "control": 203, "run": 203, "close": 203, "access": 203, "attribut": 203, "kwarg": 203, "introduct": 204, "chang": 204, "config": 204, "sequenc": 204, "program": 204, "ensembl": 204, "meta": 204, "special": 204, "class": 204, "state": 204}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials:": [[0, null]], "References:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[2, "composable-replay-buffers-prototype"]], "TensorSpec": [[2, "tensorspec"], [29, "tensorspec"]], "Utils": [[2, "utils"], [192, "utils"], [193, "utils"], [194, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [196, "transforms"], [204, "transforms"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[7, "pro-tips"]], "Training on a cluster": [[7, "training-on-a-cluster"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "SyncDataCollector": [[13, "syncdatacollector"]], "aSyncDataCollector": [[14, "asyncdatacollector"]], "split_trajectories": [[15, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[16, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[17, "boundedtensorspec"]], "CompositeSpec": [[18, "compositespec"]], "DiscreteTensorSpec": [[19, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[20, "multonehotdiscretetensorspec"]], "MultiStep": [[21, "multistep"]], "NdBoundedTensorSpec": [[22, "ndboundedtensorspec"]], "NdUnboundedContinuousTensorSpec": [[23, "ndunboundedcontinuoustensorspec"]], "OneHotDiscreteTensorSpec": [[24, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[25, "prioritizedreplaybuffer"]], "ReplayBuffer": [[26, "replaybuffer"], [32, "replaybuffer"], [161, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[27, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[28, "tensordictreplaybuffer"], [33, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[30, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[31, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[34, "prioritizedsampler"]], "RandomSampler": [[35, "randomsampler"]], "Sampler": [[36, "sampler"]], "LazyMemmapStorage": [[37, "lazymemmapstorage"]], "LazyTensorStorage": [[38, "lazytensorstorage"]], "ListStorage": [[39, "liststorage"]], "Storage": [[40, "storage"]], "RoundRobinWriter": [[41, "roundrobinwriter"]], "Writer": [[42, "writer"]], "EnvBase": [[43, "envbase"]], "GymLikeEnv": [[44, "gymlikeenv"]], "ModelBasedEnvBase": [[45, "modelbasedenvbase"]], "ParallelEnv": [[46, "parallelenv"]], "SerialEnv": [[47, "serialenv"]], "DMControlEnv": [[48, "dmcontrolenv"]], "DMControlWrapper": [[49, "dmcontrolwrapper"]], "GymEnv": [[50, "gymenv"]], "GymWrapper": [[51, "gymwrapper"]], "HabitatEnv": [[52, "habitatenv"]], "JumanjiEnv": [[53, "jumanjienv"]], "JumanjiWrapper": [[54, "jumanjiwrapper"]], "DreamerEnv": [[55, "dreamerenv"]], "BinarizeReward": [[56, "binarizereward"]], "CatFrames": [[57, "catframes"]], "CatTensors": [[58, "cattensors"]], "CenterCrop": [[59, "centercrop"]], "Compose": [[60, "compose"]], "DoubleToFloat": [[61, "doubletofloat"]], "FiniteTensorDictCheck": [[62, "finitetensordictcheck"]], "FlattenObservation": [[63, "flattenobservation"]], "GrayScale": [[64, "grayscale"]], "NoopResetEnv": [[65, "noopresetenv"]], "ObservationNorm": [[66, "observationnorm"]], "ObservationTransform": [[67, "observationtransform"]], "PinMemoryTransform": [[68, "pinmemorytransform"]], "R3MTransform": [[69, "r3mtransform"]], "Resize": [[70, "resize"]], "RewardClipping": [[71, "rewardclipping"]], "RewardScaling": [[72, "rewardscaling"]], "TensorDictPrimer": [[73, "tensordictprimer"]], "ToTensorImage": [[74, "totensorimage"]], "Transform": [[75, "transform"]], "TransformedEnv": [[76, "transformedenv"]], "UnsqueezeTransform": [[77, "unsqueezetransform"]], "VIPRewardTransform": [[78, "viprewardtransform"]], "VIPTransform": [[79, "viptransform"]], "VecNorm": [[80, "vecnorm"], [203, "vecnorm"]], "gSDENoise": [[81, "gsdenoise"]], "check_env_specs": [[82, "check-env-specs"]], "exploration_mode": [[83, "exploration-mode"]], "get_available_libraries": [[84, "get-available-libraries"]], "set_exploration_mode": [[85, "set-exploration-mode"]], "step_mdp": [[86, "step-mdp"]], "Actor": [[87, "actor"], [201, "actor"]], "ActorCriticOperator": [[88, "actorcriticoperator"], [201, "actorcriticoperator"]], "ActorCriticWrapper": [[89, "actorcriticwrapper"]], "ActorValueOperator": [[90, "actorvalueoperator"]], "CEMPlanner": [[91, "cemplanner"]], "ConvNet": [[92, "convnet"]], "DdpgCnnActor": [[93, "ddpgcnnactor"]], "DdpgCnnQNet": [[94, "ddpgcnnqnet"]], "DdpgMlpActor": [[95, "ddpgmlpactor"]], "DdpgMlpQNet": [[96, "ddpgmlpqnet"]], "Delta": [[97, "delta"]], "DistributionalDQNnet": [[98, "distributionaldqnnet"]], "DistributionalQValueActor": [[99, "distributionalqvalueactor"]], "DreamerActor": [[100, "dreameractor"]], "DuelingCnnDQNet": [[101, "duelingcnndqnet"]], "LSTMNet": [[102, "lstmnet"]], "MLP": [[103, "mlp"]], "MPCPlannerBase": [[104, "mpcplannerbase"]], "NoisyLazyLinear": [[105, "noisylazylinear"]], "NoisyLinear": [[106, "noisylinear"]], "ObsDecoder": [[107, "obsdecoder"]], "ObsEncoder": [[108, "obsencoder"]], "OneHotCategorical": [[109, "onehotcategorical"]], "ProbabilisticActor": [[110, "probabilisticactor"], [201, "probabilisticactor"]], "QValueActor": [[111, "qvalueactor"]], "RSSMPosterior": [[112, "rssmposterior"]], "RSSMPrior": [[113, "rssmprior"]], "SafeModule": [[114, "safemodule"]], "SafeProbabilisticModule": [[115, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[116, "safeprobabilisticsequential"]], "SafeSequential": [[117, "safesequential"]], "TanhDelta": [[118, "tanhdelta"]], "TanhNormal": [[119, "tanhnormal"]], "TruncatedNormal": [[120, "truncatednormal"]], "ValueOperator": [[121, "valueoperator"]], "reset_noise": [[122, "reset-noise"]], "DistributionalQValueHook": [[123, "distributionalqvaluehook"]], "QValueHook": [[124, "qvaluehook"]], "ensure_tensordict_compatible": [[125, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[126, "is-tensordict-compatible"]], "biased_softplus": [[127, "biased-softplus"]], "inv_softplus": [[128, "inv-softplus"]], "mappings": [[129, "mappings"]], "A2CLoss": [[130, "a2closs"]], "ClipPPOLoss": [[131, "clipppoloss"]], "DDPGLoss": [[132, "ddpgloss"]], "DQNLoss": [[133, "dqnloss"]], "DistributionalDQNLoss": [[134, "distributionaldqnloss"]], "HardUpdate": [[135, "hardupdate"]], "KLPENPPOLoss": [[136, "klpenppoloss"]], "PPOLoss": [[137, "ppoloss"]], "REDQLoss": [[138, "redqloss"]], "SACLoss": [[139, "sacloss"]], "SoftUpdate": [[140, "softupdate"]], "distance_loss": [[141, "distance-loss"]], "hold_out_net": [[142, "hold-out-net"]], "hold_out_params": [[143, "hold-out-params"]], "next_state_value": [[144, "next-state-value"]], "GAE": [[145, "gae"]], "TDEstimate": [[146, "tdestimate"]], "TDLambdaEstimate": [[147, "tdlambdaestimate"]], "generalized_advantage_estimate": [[148, "generalized-advantage-estimate"]], "td_advantage_estimate": [[149, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[150, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[151, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[152, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[153, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[154, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[155, "batchsubsampler"]], "ClearCudaCache": [[156, "clearcudacache"]], "CountFramesLog": [[157, "countframeslog"]], "LogReward": [[158, "logreward"]], "OptimizerHook": [[159, "optimizerhook"]], "Recorder": [[160, "recorder"]], "RewardNormalizer": [[162, "rewardnormalizer"]], "SelectKeys": [[163, "selectkeys"]], "Trainer": [[164, "trainer"]], "UpdateWeights": [[165, "updateweights"]], "correct_for_frame_skip": [[166, "correct-for-frame-skip"]], "get_stats_random_rollout": [[167, "get-stats-random-rollout"]], "make_a2c_loss": [[168, "make-a2c-loss"]], "make_a2c_model": [[169, "make-a2c-model"]], "make_collector_offpolicy": [[170, "make-collector-offpolicy"]], "make_collector_onpolicy": [[171, "make-collector-onpolicy"]], "make_ddpg_actor": [[172, "make-ddpg-actor"]], "make_ddpg_loss": [[173, "make-ddpg-loss"]], "make_dqn_actor": [[174, "make-dqn-actor"]], "make_dqn_loss": [[175, "make-dqn-loss"]], "make_ppo_loss": [[176, "make-ppo-loss"]], "make_ppo_model": [[177, "make-ppo-model"]], "make_redq_loss": [[178, "make-redq-loss"]], "make_redq_model": [[179, "make-redq-model"]], "make_replay_buffer": [[180, "make-replay-buffer"]], "make_sac_loss": [[181, "make-sac-loss"]], "make_sac_model": [[182, "make-sac-model"]], "make_target_updater": [[183, "make-target-updater"]], "make_trainer": [[184, "make-trainer"]], "parallel_env_constructor": [[185, "parallel-env-constructor"]], "sync_async_collector": [[186, "sync-async-collector"]], "sync_sync_collector": [[187, "sync-sync-collector"]], "transformed_env_constructor": [[188, "transformed-env-constructor"]], "README Demos": [[189, "readme-demos"], [198, "readme-demos"]], "API Reference": [[190, "api-reference"]], "Knowledge Base": [[191, "knowledge-base"]], "Contributing": [[191, "contributing"], [204, "contributing"]], "Contents:": [[191, null]], "torchrl.modules package": [[192, "torchrl-modules-package"]], "TensorDict modules": [[192, "tensordict-modules"]], "Hooks": [[192, "hooks"]], "Models": [[192, "models"], [204, "models"]], "Exploration": [[192, "exploration"]], "Planners": [[192, "planners"]], "Distributions": [[192, "distributions"]], "torchrl.objectives package": [[193, "torchrl-objectives-package"]], "DQN": [[193, "dqn"]], "DDPG": [[193, "ddpg"]], "SAC": [[193, "sac"]], "REDQ": [[193, "redq"]], "PPO": [[193, "ppo"]], "A2C": [[193, "a2c"]], "Returns": [[193, "returns"]], "torchrl.trainers package": [[194, "torchrl-trainers-package"]], "Checkpointing": [[194, "checkpointing"]], "Trainer and hooks": [[194, "trainer-and-hooks"]], "Builders": [[194, "builders"]], "torchrl._utils package": [[195, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[196, "coding-ddpg-using-torchrl"]], "Environment": [[196, "environment"]], "Parallel execution": [[196, "parallel-execution"]], "Normalization of the observations": [[196, "normalization-of-the-observations"]], "Building the model": [[196, "building-the-model"]], "Evaluator: building your recorder object": [[196, "evaluator-building-your-recorder-object"]], "Replay buffer": [[196, "replay-buffer"]], "Hyperparameters": [[196, "hyperparameters"], [197, "hyperparameters"]], "Initialization": [[196, "initialization"]], "Data collector": [[196, "data-collector"]], "Time to train the policy!": [[196, "time-to-train-the-policy"]], "Experiment results": [[196, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[196, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[197, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[197, "building-the-environment"]], "The problem": [[197, "the-problem"]], "Building the model (Deep Q-network)": [[197, "building-the-model-deep-q-network"]], "Regular DQN": [[197, "regular-dqn"]], "Training loop": [[197, "training-loop"], [197, "id1"]], "TD-lambda": [[197, "td-lambda"]], "Conclusion and possible improvements": [[197, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[199, "task-specific-policy-in-multi-task-environments"]], "Policy": [[199, "policy"]], "Executing diverse tasks in parallel": [[199, "executing-diverse-tasks-in-parallel"]], "Rollout": [[199, "rollout"]], "Computation times": [[200, "computation-times"]], "TensorDictModule": [[201, "tensordictmodule"]], "TensorDictModule by examples": [[201, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[201, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[201, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[201, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[201, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[201, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[201, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[201, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[201, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[201, "benchmarking"]], "TensorDict": [[202, "tensordict"], [204, "tensordict"]], "Improving the modularity of codes": [[202, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[202, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[202, "tensordict-structure"]], "TensorDict Dictionary Features": [[202, "tensordict-dictionary-features"]], "get(key)": [[202, "get-key"]], "set(key, value)": [[202, "set-key-value"]], "keys()": [[202, "keys"]], "values()": [[202, "values"]], "update(tensordict_or_dict)": [[202, "update-tensordict-or-dict"]], "del": [[202, "del"]], "TensorDict tensor features": [[202, "tensordict-tensor-features"]], "Batch size": [[202, "batch-size"]], "Devices": [[202, "devices"]], "Memory sharing via physical memory usage": [[202, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[202, "tensor-operations"]], "TorchRL envs": [[203, "torchrl-envs"]], "Gym environments": [[203, "gym-environments"]], "Env Specs": [[203, "env-specs"]], "Seeding, resetting and steps": [[203, "seeding-resetting-and-steps"]], "Rollouts": [[203, "rollouts"]], "frame_skip": [[203, "frame-skip"]], "Rendering": [[203, "rendering"]], "DeepMind Control environments": [[203, "deepmind-control-environments"]], "Transforming envs": [[203, "transforming-envs"]], "Environment device": [[203, "environment-device"]], "Running environments in parallel": [[203, "running-environments-in-parallel"]], "Closing parallel environments": [[203, "closing-parallel-environments"]], "Seeding": [[203, "seeding"]], "Accessing environment attributes": [[203, "accessing-environment-attributes"]], "kwargs for parallel environments": [[203, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[203, "transforming-parallel-environments"]], "Introduction to TorchRL": [[204, "introduction-to-torchrl"]], "Data": [[204, "data"]], "Replay buffers": [[204, "replay-buffers"]], "Envs": [[204, "envs"]], "Changing environments config": [[204, "changing-environments-config"]], "Vectorized Environments": [[204, "vectorized-environments"]], "Modules": [[204, "modules"]], "TensorDictModules": [[204, "tensordictmodules"]], "Sequences of Modules": [[204, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[204, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[204, "specialized-classes"]], "Using Environments and Modules": [[204, "using-environments-and-modules"]], "Objectives": [[204, "objectives"]], "State of the Library": [[204, "state-of-the-library"]], "Installing the Library": [[204, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[14, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[15, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[16, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[17, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[18, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[19, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[21, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.zero_grad"]], "ndboundedtensorspec (class in torchrl.data)": [[22, "torchrl.data.NdBoundedTensorSpec"]], "assert_is_in() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.encode"]], "index() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.index"]], "is_in() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.is_in"]], "project() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.project"]], "rand() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.type_check"]], "zero() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.zero"]], "ndunboundedcontinuoustensorspec (class in torchrl.data)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.zero"]], "onehotdiscretetensorspec (class in torchrl.data)": [[24, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[26, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[29, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[30, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[34, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[36, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[37, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[38, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[39, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[40, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[40, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[42, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[42, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[42, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[43, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[43, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[43, "id0"], [43, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[43, "id1"], [43, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[43, "id2"], [43, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[43, "id3"], [43, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[43, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[43, "id4"], [43, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[44, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[45, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[45, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[45, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[45, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[45, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[45, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[46, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[46, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[46, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[47, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[47, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[47, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[48, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[49, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[50, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[51, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[52, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[53, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[54, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[55, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[56, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[56, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[57, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[57, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[58, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[59, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[61, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[61, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[61, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[63, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[64, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[65, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[66, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[66, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[70, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[71, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[72, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[73, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[73, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[73, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[74, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[78, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[78, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[80, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[80, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[80, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[80, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[81, "torchrl.envs.transforms.gSDENoise.reset"]], "check_env_specs() (in module torchrl.envs.utils)": [[82, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[83, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[84, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[85, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[86, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[87, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[88, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[88, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[88, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[89, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[89, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[89, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[90, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[90, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[90, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[91, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[91, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[92, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[92, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[93, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[93, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[94, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[94, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[95, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[95, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[96, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[96, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[97, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[97, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[97, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[97, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[97, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[97, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[98, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[98, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[99, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[100, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[100, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[101, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[101, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[102, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[102, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[103, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[103, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[104, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[104, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[104, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[105, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[105, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[106, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[107, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[107, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[108, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[108, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[109, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[109, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[109, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[109, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[109, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[110, "torchrl.modules.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules)": [[111, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[112, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[112, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[113, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[113, "torchrl.modules.RSSMPrior.forward"]], "safemodule (class in torchrl.modules)": [[114, "torchrl.modules.SafeModule"]], "random() (torchrl.modules.safemodule method)": [[114, "torchrl.modules.SafeModule.random"]], "random_sample() (torchrl.modules.safemodule method)": [[114, "torchrl.modules.SafeModule.random_sample"]], "to() (torchrl.modules.safemodule method)": [[114, "torchrl.modules.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules)": [[115, "torchrl.modules.SafeProbabilisticModule"]], "random() (torchrl.modules.safeprobabilisticmodule method)": [[115, "torchrl.modules.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.safeprobabilisticmodule method)": [[115, "torchrl.modules.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules)": [[116, "torchrl.modules.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules)": [[117, "torchrl.modules.SafeSequential"]], "tanhdelta (class in torchrl.modules)": [[118, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[118, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[118, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[119, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[119, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[120, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[120, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[120, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[121, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[122, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[123, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[124, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[125, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[126, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[127, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[127, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[128, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[129, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[130, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[130, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[131, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[131, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[132, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[132, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[133, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[133, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[134, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[134, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[135, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[136, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[136, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[137, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[137, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[138, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[138, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[139, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[139, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[140, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[141, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[142, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[143, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[144, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[145, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[145, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[146, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[146, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[147, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[147, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[148, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[149, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[150, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[151, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[152, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[153, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[154, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[155, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[156, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[157, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[158, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[159, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[160, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[161, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[161, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[161, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[161, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[162, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[163, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[164, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[165, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[179, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[180, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[181, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[182, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[183, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[184, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[185, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[186, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[187, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[188, "torchrl.trainers.helpers.transformed_env_constructor"]]}})