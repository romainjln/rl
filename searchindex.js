Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NdBoundedTensorSpec", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.SafeModule", "reference/generated/torchrl.modules.SafeProbabilisticModule", "reference/generated/torchrl.modules.SafeSequential", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NdBoundedTensorSpec.rst", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.SafeModule.rst", "reference/generated/torchrl.modules.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.SafeSequential.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "NdBoundedTensorSpec", "NdUnboundedContinuousTensorSpec", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPTransform", "VecNorm", "gSDENoise", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "QValueActor", "RSSMPosterior", "RSSMPrior", "SafeModule", "SafeProbabilisticModule", "SafeSequential", "TanhDelta", "TanhNormal", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Demos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Demos", "Task-specific policy in multi-task environments", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 2, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 33, 40, 43, 44, 46, 47, 60, 66, 69, 72, 73, 76, 78, 85, 86, 89, 91, 92, 93, 94, 100, 102, 104, 108, 110, 111, 112, 113, 114, 118, 124, 128, 129, 130, 133, 136, 141, 152, 156, 181, 183, 184, 191, 193, 198, 199, 200, 201], "tensordict": [0, 3, 11, 12, 13, 14, 15, 18, 19, 21, 27, 28, 31, 33, 37, 38, 43, 44, 45, 46, 47, 57, 58, 60, 61, 62, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 97, 100, 102, 108, 109, 112, 113, 114, 118, 120, 121, 122, 123, 127, 128, 129, 130, 131, 133, 134, 135, 136, 141, 142, 143, 144, 152, 156, 160, 161, 166, 169, 171, 174, 176, 179, 187, 191, 193, 194, 195, 196, 197, 198, 200], "class": [0, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 183, 184, 185, 191, 193, 194, 198, 199, 200], "ha": [0, 6, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 73, 76, 113, 133, 193, 194, 196, 198, 199, 200, 201], "been": [0, 6, 11, 12, 14, 43, 44, 46, 47, 75, 194, 196, 200], "move": [0, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 101, 112, 159, 194, 200, 201], "out": [0, 3, 21, 43, 44, 46, 47, 103, 104, 112, 113, 139, 140, 191, 198, 199, 200, 201], "dedic": [0, 86, 87, 88, 193, 196], "librari": [0, 6, 8, 9, 82, 187, 188, 192, 193, 200], "take": [0, 3, 15, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 126, 145, 146, 147, 148, 149, 150, 151, 152, 162, 191, 193, 194, 198, 200], "look": [0, 4, 6, 21, 43, 44, 46, 47, 69, 113, 114, 194, 198, 200, 201], "find": [0, 198], "sourc": [0, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 193, 194, 195, 196, 198, 199, 200, 201], "code": [0, 3, 6, 69, 114, 195, 196, 197, 198, 200, 201], "github": [0, 2, 5, 6, 9, 201], "i": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 63, 65, 66, 69, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 141, 142, 143, 144, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 169, 174, 176, 179, 181, 185, 188, 191, 193, 194, 196, 198, 200, 201], "an": [0, 2, 3, 4, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 62, 65, 66, 69, 70, 74, 75, 76, 79, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 103, 106, 112, 113, 122, 123, 126, 127, 128, 131, 133, 134, 135, 136, 142, 143, 144, 156, 157, 158, 161, 164, 169, 182, 183, 184, 185, 188, 193, 194, 196, 198, 199, 200, 201], "open": [0, 4, 6, 10, 201], "reinforc": [0, 2, 3, 8, 57, 91, 92, 93, 94, 120, 127, 131, 132, 136, 137, 169, 194, 201], "learn": [0, 2, 3, 6, 8, 21, 57, 91, 92, 93, 94, 104, 120, 127, 131, 132, 135, 136, 137, 169, 193, 194, 196, 200, 201], "rl": [0, 2, 7, 9, 11, 12, 13, 14, 45, 85, 104, 108, 118, 127, 134, 152, 188, 191, 193, 198, 199, 200], "pytorch": [0, 2, 74, 161, 191, 193, 199, 200, 201], "It": [0, 3, 6, 21, 27, 43, 44, 45, 46, 47, 52, 76, 91, 93, 98, 110, 111, 113, 127, 128, 131, 133, 134, 135, 136, 141, 157, 176, 188, 193, 198, 199, 200, 201], "provid": [0, 2, 3, 8, 13, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 58, 65, 66, 69, 73, 76, 78, 79, 85, 90, 100, 101, 102, 108, 120, 141, 152, 158, 164, 166, 174, 176, 179, 181, 188, 191, 193, 194, 196, 198, 200, 201], "python": [0, 3, 5, 6, 9, 191, 193, 194, 195, 196, 198, 200, 201], "first": [0, 3, 6, 10, 11, 12, 13, 14, 44, 58, 63, 66, 69, 74, 76, 101, 103, 106, 112, 113, 160, 193, 194, 196, 198, 199, 200, 201], "low": [0, 193, 194, 201], "high": [0, 8, 142, 145, 146, 149, 193, 194, 201], "level": [0, 18, 133, 193, 194, 201], "abstract": [0, 17, 18, 19, 22, 23, 29, 30, 42, 43, 67, 102, 191, 199, 201], "ar": [0, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 21, 24, 31, 32, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 60, 61, 62, 69, 73, 75, 76, 78, 79, 84, 89, 94, 95, 100, 102, 104, 107, 111, 112, 113, 114, 126, 127, 128, 131, 133, 134, 135, 136, 138, 141, 142, 143, 144, 181, 185, 186, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201], "intend": [0, 6, 11, 12, 13, 14, 201], "effici": [0, 2, 104, 193, 194, 196, 199, 201], "modular": [0, 114, 201], "properli": [0, 199, 201], "test": [0, 3, 4, 100, 157, 181, 198, 201], "aim": [0, 3, 6, 69, 78, 101, 163, 188, 193, 194, 201], "support": [0, 3, 18, 40, 75, 82, 97, 112, 114, 120, 131, 191, 198, 199, 201], "research": [0, 6, 8, 201], "most": [0, 3, 6, 21, 193, 201], "written": [0, 27, 37, 43, 44, 46, 47, 112, 113, 127, 128, 133, 134, 141, 191, 193, 196, 201], "highli": [0, 2, 200, 201], "wai": [0, 134, 194, 196, 200, 201], "can": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 21, 27, 29, 31, 43, 44, 46, 47, 57, 60, 65, 66, 69, 73, 75, 76, 78, 79, 89, 102, 104, 112, 113, 114, 116, 117, 123, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 141, 157, 166, 174, 176, 179, 183, 184, 185, 188, 191, 193, 194, 196, 198, 200, 201], "easili": [0, 3, 6, 46, 47, 166, 174, 176, 179, 194, 199, 200, 201], "swap": [0, 3, 201], "compon": [0, 3, 37, 38, 39, 40, 120, 121, 127, 128, 131, 133, 134, 135, 136, 156, 161, 196, 198, 201], "transform": [0, 21, 31, 32, 33, 44, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 91, 98, 120, 121, 124, 126, 166, 169, 171, 174, 176, 179, 185, 187, 194], "them": [0, 6, 31, 32, 33, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 133, 193, 194, 196, 198, 199, 200, 201], "write": [0, 21, 44, 68, 112, 113, 114, 129, 130, 135, 136, 141, 191, 193, 194, 196, 198, 199, 201], "new": [0, 3, 11, 12, 13, 14, 21, 25, 27, 34, 43, 44, 46, 47, 75, 79, 84, 112, 127, 128, 130, 131, 133, 134, 135, 136, 193, 194, 198, 199, 200, 201], "ones": [0, 18, 21, 43, 44, 46, 47, 58, 60, 61, 66, 69, 73, 76, 78, 112, 193, 199, 200, 201], "littl": [0, 3, 200, 201], "effort": [0, 3, 201], "thi": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 21, 24, 27, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 52, 57, 58, 60, 62, 66, 69, 73, 75, 76, 77, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 152, 154, 157, 161, 162, 163, 164, 166, 174, 176, 179, 181, 185, 188, 191, 193, 194, 196, 198, 200, 201], "repo": [0, 5, 188, 201], "attempt": [0, 201], "align": [0, 201], "exist": [0, 21, 43, 44, 46, 47, 58, 76, 164, 185, 198, 200, 201], "ecosystem": [0, 201], "dataset": [0, 25, 26, 27, 32, 79, 158, 199, 200, 201], "pillar": [0, 201], "environ": [0, 3, 7, 10, 11, 12, 13, 14, 21, 24, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 61, 65, 66, 69, 75, 76, 79, 89, 100, 102, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 163, 164, 166, 167, 168, 169, 171, 174, 176, 179, 181, 182, 183, 184, 185, 188, 195, 197], "model": [0, 3, 8, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 69, 78, 80, 86, 87, 88, 90, 101, 102, 112, 113, 127, 134, 135, 136, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 187, 188, 191, 198, 200], "data": [0, 3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 66, 85, 86, 87, 88, 89, 97, 100, 108, 109, 112, 113, 114, 118, 120, 121, 129, 135, 136, 142, 143, 144, 152, 158, 161, 162, 167, 181, 183, 184, 185, 187, 191, 194, 198, 199, 200], "util": [0, 11, 12, 13, 14, 15, 21, 43, 44, 46, 47, 69, 78, 81, 82, 83, 84, 90, 124, 125, 126, 181, 187, 192, 193, 194, 198, 200, 201], "e": [0, 3, 9, 10, 11, 12, 13, 14, 18, 21, 24, 37, 38, 43, 44, 46, 47, 58, 60, 69, 73, 75, 76, 78, 112, 113, 116, 117, 121, 141, 152, 163, 184, 193, 194, 199, 200, 201], "g": [0, 3, 9, 10, 21, 24, 43, 44, 46, 47, 58, 60, 69, 73, 75, 76, 78, 112, 113, 116, 117, 141, 147, 148, 150, 151, 184, 193, 194, 200, 201], "collector": [0, 11, 12, 13, 14, 15, 161, 162, 167, 168, 181, 183, 184, 187, 191, 194, 200, 201], "contain": [0, 3, 6, 11, 12, 13, 14, 18, 21, 25, 26, 27, 28, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 79, 84, 89, 90, 101, 112, 127, 128, 129, 130, 131, 133, 134, 135, 136, 141, 142, 143, 144, 152, 158, 163, 166, 169, 171, 174, 176, 179, 181, 182, 183, 184, 185, 191, 194, 198, 200, 201], "etc": [0, 3, 6, 21, 23, 30, 43, 44, 46, 47, 76, 101, 193, 199, 200, 201], "have": [0, 3, 5, 6, 11, 12, 14, 18, 21, 40, 43, 44, 46, 47, 57, 65, 75, 76, 79, 90, 100, 101, 114, 128, 133, 134, 138, 152, 161, 191, 193, 194, 196, 198, 199, 200, 201], "few": [0, 2, 7, 152, 194, 200, 201], "depend": [0, 3, 6, 118, 134, 200, 201], "possibl": [0, 3, 19, 21, 24, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 157, 161, 193, 198, 199, 200, 201], "standard": [0, 66, 72, 79, 89, 98, 103, 104, 142, 143, 144, 193, 194, 201], "numpi": [0, 13, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 74, 161, 193, 194, 200, 201], "common": [0, 3, 44, 46, 47, 86, 87, 88, 113, 122, 123, 181, 188, 191, 193, 196, 198, 199, 200, 201], "openai": [0, 6, 50, 51, 200, 201], "gym": [0, 3, 10, 11, 12, 13, 44, 50, 51, 66, 73, 79, 166, 169, 171, 174, 176, 179, 181, 188, 193, 194, 201], "onli": [0, 4, 6, 11, 12, 14, 18, 21, 27, 43, 44, 46, 47, 58, 60, 69, 73, 76, 78, 79, 100, 112, 113, 114, 164, 191, 193, 194, 196, 198, 200, 201], "option": [0, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 38, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 84, 85, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 127, 129, 130, 134, 135, 136, 141, 142, 143, 144, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 193, 194, 201], "On": [0, 6, 194, 199], "end": [0, 21, 31, 32, 33, 43, 44, 46, 47, 76, 90, 102, 145, 146, 147, 148, 149, 150, 151, 193, 196, 200, 201], "come": [0, 46, 47, 85, 86, 87, 88, 108, 118, 193, 198, 200, 201], "set": [0, 2, 3, 6, 8, 11, 12, 13, 14, 21, 24, 40, 43, 44, 45, 46, 47, 58, 60, 69, 73, 76, 78, 83, 102, 112, 152, 157, 168, 185, 188, 192, 193, 194, 196, 200, 201], "re": [0, 3, 7, 21, 43, 44, 46, 47, 113, 191, 194, 196, 200, 201], "usabl": [0, 191, 201], "function": [0, 10, 15, 21, 37, 38, 39, 40, 43, 44, 46, 47, 60, 69, 75, 76, 77, 78, 79, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 105, 106, 107, 110, 111, 112, 113, 114, 117, 118, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 166, 169, 171, 174, 176, 179, 181, 187, 193, 194, 196, 198, 199, 200], "cost": [0, 2, 19, 194], "return": [0, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 100, 101, 102, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 141, 142, 143, 144, 147, 148, 150, 151, 158, 161, 163, 166, 167, 169, 171, 174, 176, 179, 181, 182, 183, 184, 185, 187, 191, 193, 194, 196, 198, 199, 200, 201], "process": [0, 3, 11, 12, 14, 46, 47, 79, 191, 193, 194, 200, 201], "good": [0, 8, 200, 201], "runtim": [0, 21, 43, 44, 46, 47], "perform": [0, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 60, 65, 69, 75, 76, 77, 78, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 110, 111, 124, 134, 157, 161, 193, 194, 196, 199, 200], "introduct": [0, 195, 197, 200], "env": [0, 5, 6, 11, 12, 13, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 102, 112, 164, 166, 167, 168, 169, 171, 174, 176, 179, 181, 183, 184, 185, 187, 193, 194, 195, 196, 197], "modul": [0, 3, 10, 21, 43, 44, 45, 46, 47, 60, 69, 73, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 135, 137, 139, 161, 165, 170, 172, 173, 175, 178, 181, 186, 187, 191, 193, 194, 195, 196, 198], "us": [0, 2, 3, 6, 9, 10, 11, 12, 13, 14, 18, 19, 21, 25, 26, 27, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 58, 59, 66, 69, 73, 74, 75, 76, 78, 79, 83, 84, 89, 90, 91, 92, 98, 101, 102, 104, 112, 113, 116, 117, 120, 123, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 149, 157, 158, 161, 162, 164, 167, 168, 169, 177, 181, 185, 186, 188, 191, 192, 195, 196, 197, 199, 200], "object": [0, 3, 11, 12, 13, 14, 18, 21, 37, 38, 39, 40, 43, 44, 46, 47, 69, 75, 76, 79, 85, 86, 108, 112, 113, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 164, 167, 168, 180, 181, 185, 187, 191, 194, 198, 200], "state": [0, 3, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 57, 58, 60, 69, 73, 75, 76, 78, 79, 80, 86, 89, 98, 100, 101, 105, 110, 111, 112, 135, 141, 142, 143, 144, 185, 193, 194, 200], "contribut": 0, "instal": [0, 9, 161, 188, 200], "improv": [0, 2, 127], "structur": [0, 3, 6], "dictionari": [0, 11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 76, 113, 183, 184, 185, 191, 193, 200], "featur": [0, 3, 11, 12, 13, 14, 24, 43, 44, 46, 47, 57, 90, 98, 99, 101, 103, 104, 113, 185, 193, 194, 198, 200], "tensor": [0, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 57, 58, 60, 63, 66, 69, 72, 73, 74, 75, 76, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 124, 125, 129, 130, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 158, 166, 169, 171, 174, 176, 179, 191, 193, 194, 196, 198, 200, 201], "tensordictmodul": [0, 11, 12, 13, 14, 112, 193, 194, 195, 196, 197], "exampl": [0, 3, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 60, 61, 66, 69, 73, 74, 76, 78, 79, 84, 85, 86, 87, 88, 89, 90, 97, 100, 101, 108, 109, 112, 113, 114, 118, 120, 121, 123, 152, 153, 154, 155, 156, 159, 160, 162, 166, 169, 171, 174, 176, 179, 181, 186, 191, 193, 194, 195, 196, 199, 200, 201], "do": [0, 3, 6, 11, 12, 13, 14, 44, 65, 84, 87, 103, 191, 193, 194, 196, 200, 201], "": [0, 5, 6, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 79, 90, 104, 112, 113, 136, 158, 176, 179, 193, 194, 196, 199, 200, 201], "don": [0, 5, 6, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 193, 199, 200, 201], "t": [0, 5, 6, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 43, 44, 46, 47, 69, 78, 79, 84, 112, 123, 129, 161, 162, 185, 188, 193, 194, 196, 200, 201], "showcas": 0, "implement": [0, 2, 3, 8, 10, 21, 40, 43, 44, 46, 47, 79, 115, 116, 117, 127, 134, 136, 166, 174, 176, 179, 191, 193, 194, 201], "deepmind": [0, 6, 8, 48, 49], "control": [0, 3, 46, 47, 48, 49, 91, 92, 93, 94, 102, 111, 112, 113, 128, 133, 134, 137, 142, 145, 146, 149, 169, 191, 193], "devic": [0, 2, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 37, 38, 43, 44, 45, 46, 47, 55, 60, 68, 69, 73, 74, 76, 78, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 104, 108, 109, 112, 113, 114, 118, 120, 121, 129, 162, 166, 169, 171, 174, 176, 177, 179, 193, 194, 196, 198, 201], "run": [0, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 43, 44, 45, 46, 47, 48, 49, 60, 65, 66, 69, 75, 76, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 114, 124, 157, 183, 184, 185, 188, 191, 193, 194, 196, 198, 199, 201], "parallel": [0, 3, 7, 11, 12, 14, 127, 182, 183, 184, 185, 194], "vecnorm": [0, 185, 187], "task": [0, 8, 46, 47, 48, 69, 78, 193, 194, 195, 197, 200, 201], "specif": [0, 4, 27, 28, 33, 44, 161, 187, 191, 195, 197], "polici": [0, 2, 3, 11, 12, 13, 14, 43, 44, 45, 46, 47, 83, 84, 86, 87, 88, 104, 112, 113, 120, 121, 127, 128, 129, 133, 134, 135, 136, 157, 162, 166, 167, 168, 169, 171, 174, 181, 183, 184, 191, 194, 195, 197, 198, 200, 201], "multi": [0, 3, 6, 8, 21, 22, 23, 43, 44, 46, 47, 100, 101, 193, 194, 195, 197, 201], "execut": [0, 3, 6, 13, 31, 32, 33, 43, 44, 45, 46, 47, 114, 164, 185, 191, 194, 197, 198, 200], "divers": [0, 46, 47], "rollout": [0, 3, 11, 12, 13, 14, 43, 44, 45, 46, 47, 89, 127, 164, 193, 194, 201], "ddpg": [0, 91, 92, 93, 94, 129, 132, 137, 169, 170, 187, 195, 197], "normal": [0, 31, 66, 79, 90, 101, 113, 116, 117, 157, 159, 185, 191, 194, 200], "observ": [0, 2, 3, 11, 12, 13, 29, 43, 44, 45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 100, 105, 106, 108, 109, 110, 118, 120, 121, 142, 143, 144, 166, 169, 171, 174, 176, 179, 181, 191, 194, 196, 198, 199, 200, 201], "build": [0, 3, 6, 15, 18, 21, 43, 44, 46, 47, 79, 89, 113, 161, 165, 170, 172, 173, 175, 177, 178, 180, 191, 198, 199, 200, 201], "evalu": [0, 21, 43, 44, 46, 47, 76, 95, 107, 117, 135, 167, 168, 194], "your": [0, 6, 7, 9, 21, 43, 44, 46, 47, 79, 185, 188, 194, 199, 201], "record": [0, 21, 43, 44, 46, 47, 134, 181, 187, 191, 194], "replai": [0, 13, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 40, 41, 46, 47, 129, 130, 135, 136, 158, 161, 177, 181, 187, 191, 194], "buffer": [0, 13, 21, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 112, 113, 114, 129, 130, 135, 136, 158, 161, 177, 181, 187, 191, 194, 198, 200], "hyperparamet": 0, "initi": [0, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 66, 69, 73, 75, 76, 80, 89, 103, 104, 133, 135, 136, 166, 169, 171, 174, 176, 179, 185, 194, 200], "time": [0, 3, 4, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 58, 73, 79, 84, 98, 100, 135, 161, 194, 196, 198, 199, 200, 201], "train": [0, 11, 12, 13, 14, 21, 43, 44, 46, 47, 69, 76, 78, 91, 93, 127, 128, 131, 133, 134, 135, 136, 161, 162, 181, 191, 199, 200], "experi": [0, 3, 25, 34, 188], "result": [0, 3, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 101, 121, 145, 146, 147, 148, 149, 150, 151, 162, 194, 199, 200, 201], "sampl": [0, 2, 8, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 43, 45, 81, 83, 89, 95, 107, 110, 112, 113, 116, 117, 128, 129, 130, 133, 134, 152, 158, 161, 163, 194, 198, 200, 201], "trajectori": [0, 11, 12, 13, 14, 15, 21, 43, 44, 46, 47, 75, 89, 134, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 194, 200, 201], "td": [0, 18, 48, 49, 50, 51, 53, 58, 61, 66, 74, 76, 79, 84, 85, 86, 87, 88, 89, 97, 102, 108, 109, 112, 113, 114, 118, 120, 121, 143, 144, 147, 148, 150, 151, 152, 160, 166, 169, 171, 174, 176, 179, 198, 199, 200, 201], "lambda": [0, 11, 12, 13, 14, 144, 147, 148, 150, 151, 181, 198, 199, 200, 201], "pixel": [0, 3, 6, 18, 64, 69, 70, 74, 78, 91, 105, 106, 166, 171, 174, 176, 179, 193, 195, 197, 200, 201], "base": [0, 3, 8, 11, 12, 13, 14, 36, 42, 45, 86, 161, 166, 174, 176, 179, 191, 193, 195, 197, 200], "dqn": [0, 97, 109, 120, 130, 131, 132, 137, 171, 172, 187, 195, 197], "problem": [0, 6, 13, 200], "deep": [0, 8, 57, 91, 92, 93, 94, 96, 127, 132, 136, 137, 169, 193], "q": [0, 91, 92, 93, 94, 96, 99, 120, 121, 129, 130, 131, 132, 135, 136, 176, 179, 198], "network": [0, 21, 43, 44, 46, 47, 86, 87, 88, 90, 91, 92, 93, 94, 96, 98, 99, 101, 104, 105, 106, 110, 111, 112, 129, 130, 131, 132, 135, 136, 137, 139, 166, 169, 174, 180, 181, 191, 193, 196, 198, 200], "regular": [0, 14, 112, 113, 121, 131, 162, 191, 193, 198, 199, 200], "conclus": 0, "api": [0, 3, 69, 78, 191, 200, 201], "packag": [0, 5, 9, 187, 188, 200], "trainer": [0, 127, 128, 131, 133, 134, 135, 136, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 193], "_util": [0, 10, 187], "knowledg": 0, "work": [0, 6, 7, 21, 43, 44, 46, 47, 58, 69, 79, 90, 101, 161, 188, 194, 196, 198, 199, 200, 201], "habitat": [0, 52, 188], "lab": [0, 3, 48, 49, 188], "about": [0, 188, 193, 194, 200, 201], "mujoco": [0, 5, 188], "issu": [0, 4, 112, 113, 188, 201], "when": [0, 3, 4, 7, 11, 12, 13, 14, 21, 25, 26, 27, 31, 32, 33, 37, 38, 39, 40, 43, 44, 46, 47, 60, 65, 69, 73, 75, 76, 78, 79, 83, 89, 101, 102, 103, 112, 113, 114, 116, 124, 128, 133, 134, 141, 158, 185, 188, 191, 193, 194, 198, 199, 200], "render": [0, 7, 157, 188, 193, 194], "pro": [0, 6, 188], "tip": [0, 6, 188], "resourc": [0, 188], "version": [0, 10, 21, 43, 44, 46, 47, 144, 188, 193, 194, 200], "index": [0, 6, 9, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 84, 158, 193, 196, 199, 201], "search": [0, 194], "page": [0, 6], "central": 2, "part": [2, 21, 43, 44, 46, 47, 113, 118, 152, 185, 193, 194, 198, 200], "off": [2, 116, 117, 136, 157, 167, 191, 194, 200], "algorithm": [2, 8, 11, 12, 45, 127, 134, 135, 152, 166, 167, 174, 191, 193, 194, 199, 201], "wide": [2, 3], "we": [2, 3, 4, 6, 8, 18, 21, 43, 44, 46, 47, 69, 79, 89, 100, 188, 191, 193, 194, 196, 198, 199, 200, 201], "also": [2, 3, 7, 21, 27, 43, 44, 46, 47, 76, 111, 114, 127, 129, 130, 191, 193, 194, 196, 198, 199, 200], "storag": [2, 21, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 43, 44, 46, 47, 158, 187, 191, 193, 194], "choic": 2, "veri": [2, 3, 193, 194, 200, 201], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 58], "distribut": [2, 3, 8, 9, 25, 27, 66, 89, 95, 96, 97, 98, 107, 110, 111, 113, 115, 116, 117, 120, 128, 131, 133, 134, 187, 191, 193, 194, 198, 200, 201], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 187, 193, 194], "advis": [2, 200], "share": [2, 37, 38, 39, 40, 46, 47, 79, 86, 87, 88, 185, 196, 198, 200, 201], "due": [2, 3, 200], "lower": [2, 11, 12, 13, 14, 17, 22, 79, 110, 111, 199], "serialis": 2, "memmaptensor": 2, "well": [2, 3, 11, 12, 14, 21, 40, 43, 44, 46, 47, 110, 111, 193, 194, 198, 199, 200, 201], "abil": 2, "specifi": [2, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 77, 89, 112, 193, 198], "file": [2, 5, 6, 191, 197], "locat": [2, 6, 44, 66, 72, 116, 117, 199], "node": [2, 166, 169, 171, 174, 176, 179], "failur": 2, "recoveri": 2, "follow": [2, 3, 5, 6, 21, 43, 44, 45, 46, 47, 69, 90, 101, 126, 128, 133, 161, 176, 179, 191, 193, 194, 196, 198, 199, 200, 201], "mean": [2, 3, 6, 13, 66, 79, 89, 95, 98, 100, 113, 115, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 193, 194, 200, 201], "over": [2, 3, 11, 12, 13, 14, 21, 43, 44, 46, 47, 66, 114, 131, 163, 191, 193, 198, 199, 200], "liststorag": [2, 25, 26, 27, 32, 158, 187], "were": [2, 6, 46, 47, 193], "found": [2, 5, 6, 9, 18, 21, 27, 43, 44, 46, 47, 79, 129, 134, 193, 194, 198], "from": [2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 21, 24, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 58, 66, 69, 73, 74, 75, 76, 78, 79, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 97, 101, 102, 103, 108, 109, 112, 113, 114, 116, 117, 118, 120, 121, 128, 129, 130, 133, 134, 135, 136, 141, 152, 158, 161, 163, 164, 166, 169, 171, 174, 176, 177, 179, 181, 182, 185, 188, 191, 193, 194, 196, 198, 199, 200, 201], "rough": 2, "benchmark": [2, 8], "http": [2, 5, 6, 9, 25, 34, 57, 69, 91, 92, 93, 94, 98, 99, 104, 105, 106, 110, 111, 120, 127, 131, 132, 134, 135, 136, 137, 142, 145, 146, 149, 166, 169, 174, 176, 179, 201], "com": [2, 5, 6, 9, 201], "tree": 2, "main": [2, 113, 161, 193, 194, 196, 200], "type": [2, 21, 29, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 79, 90, 101, 104, 112, 113, 122, 166, 169, 171, 174, 176, 179, 183, 193, 194, 199, 200], "speed": [2, 7, 19, 193, 194], "up": [2, 3, 7, 8, 19, 188, 193, 194, 198, 200], "1x": 2, "lazytensorstorag": [2, 187], "1": [2, 3, 9, 11, 12, 13, 14, 19, 20, 21, 24, 43, 44, 45, 46, 47, 56, 58, 60, 61, 65, 66, 69, 73, 74, 76, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 94, 99, 101, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 124, 127, 128, 133, 134, 135, 136, 137, 141, 145, 146, 147, 148, 149, 150, 151, 152, 157, 159, 166, 169, 171, 174, 176, 179, 181, 185, 188, 191, 193, 194, 196, 199, 200, 201], "83x": 2, "3": [2, 3, 5, 6, 9, 11, 12, 13, 18, 19, 20, 21, 24, 43, 44, 46, 47, 57, 60, 63, 66, 69, 73, 74, 76, 78, 85, 86, 87, 88, 89, 90, 91, 92, 97, 99, 100, 101, 108, 112, 113, 114, 118, 120, 123, 147, 148, 150, 151, 160, 171, 191, 193, 194, 196, 199, 200, 201], "44x": 2, "parent": [2, 3, 29, 43, 58, 66, 69, 75, 86, 134, 194, 199, 200, 201], "subclass": [2, 3, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 106, 109, 110, 111, 112, 113, 124, 134, 193], "defin": [2, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 182, 194, 198, 199, 200], "basic": [2, 45, 200], "properti": [2, 43, 44, 45, 46, 47, 76, 95, 103, 107, 115, 116, 117, 198, 199], "action": [2, 3, 8, 11, 12, 13, 19, 24, 29, 43, 44, 45, 46, 47, 61, 65, 76, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 108, 109, 111, 113, 115, 116, 118, 120, 121, 130, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 166, 169, 171, 174, 176, 179, 181, 185, 191, 193, 194, 196, 198, 199, 200, 201], "shape": [2, 3, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 44, 46, 47, 58, 74, 95, 96, 101, 103, 107, 108, 112, 113, 114, 115, 138, 152, 161, 181, 193, 194, 196, 198, 199, 200, 201], "dtype": [2, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 43, 44, 45, 46, 47, 55, 60, 61, 66, 69, 73, 74, 76, 78, 86, 87, 88, 89, 97, 103, 104, 108, 109, 112, 113, 114, 118, 120, 121, 166, 169, 171, 174, 176, 179, 193, 194, 196, 198, 199, 200, 201], "domain": [2, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 73, 112, 113, 114, 187, 200, 201], "offer": [3, 6, 200], "handl": [3, 21, 43, 44, 46, 47, 79, 101, 161, 183, 184], "differ": [3, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 101, 120, 121, 134, 138, 143, 157, 161, 162, 183, 184, 191, 193, 194, 196, 199, 200], "backend": [3, 6, 191, 193], "dm": [3, 200], "custom": [3, 21, 43, 44, 46, 47, 185], "goal": [3, 193, 194], "abl": [3, 196, 199, 201], "even": [3, 7, 12, 37, 38, 39, 40, 193, 199, 200], "simul": [3, 6, 55, 89, 193], "some": [3, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 69, 91, 114, 152, 163, 191, 193, 194, 198, 200, 201], "box": [3, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "wrapper": [3, 14, 27, 28, 33, 45, 48, 49, 50, 51, 52, 53, 54, 113, 142, 185, 193, 198, 200], "under": [3, 21, 43, 44, 46, 47, 112, 113, 193, 200], "lib": [3, 5, 6, 8, 9, 11, 12, 13, 48, 49, 50, 51, 52, 53, 54, 66, 73, 79, 166, 169, 171, 174, 176, 179, 181, 193, 194, 196, 200, 201], "which": [3, 6, 10, 11, 12, 13, 14, 18, 19, 21, 24, 33, 43, 44, 46, 47, 57, 58, 65, 69, 75, 76, 86, 87, 88, 112, 113, 114, 116, 117, 127, 128, 131, 133, 134, 135, 136, 138, 152, 156, 166, 169, 171, 174, 176, 179, 191, 193, 194, 196, 198, 199, 200], "hope": 3, "imit": 3, "other": [3, 6, 21, 37, 38, 39, 40, 43, 44, 45, 46, 47, 79, 104, 113, 127, 128, 131, 133, 134, 135, 136, 166, 174, 176, 179, 183, 184, 191, 193, 194, 198, 200, 201], "envbas": [3, 11, 12, 13, 14, 44, 46, 47, 65, 75, 76, 79, 89, 102, 157, 164, 166, 167, 168, 169, 171, 174, 176, 179, 181, 183, 184, 185, 187], "torch": [3, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 34, 37, 38, 43, 44, 45, 46, 47, 58, 60, 61, 66, 69, 72, 73, 74, 76, 78, 79, 84, 85, 86, 87, 88, 89, 90, 95, 97, 98, 100, 101, 103, 104, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 129, 152, 160, 166, 169, 171, 174, 176, 179, 181, 191, 193, 194, 196, 198, 199, 200, 201], "nn": [3, 11, 12, 13, 21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 108, 109, 112, 113, 114, 118, 120, 121, 122, 123, 127, 130, 131, 176, 179, 181, 193, 194, 196, 198, 201], "typic": [3, 21, 43, 44, 46, 47, 191], "method": [3, 11, 12, 13, 14, 21, 27, 31, 37, 38, 39, 40, 43, 44, 46, 47, 57, 60, 66, 69, 70, 73, 76, 78, 86, 87, 88, 89, 100, 112, 113, 122, 127, 182, 191, 192, 193, 198, 199, 200], "organis": 3, "allow": [3, 11, 12, 13, 14, 21, 24, 43, 44, 46, 47, 84, 101, 138, 191, 193, 198, 199, 200], "gener": [3, 6, 13, 32, 36, 45, 66, 85, 95, 107, 108, 113, 118, 135, 142, 145, 146, 149, 161, 193, 194, 195, 196, 198, 199, 200, 201], "arbitrari": [3, 24, 46, 47, 193, 194], "number": [3, 7, 11, 12, 13, 14, 17, 19, 21, 22, 24, 25, 26, 27, 32, 34, 37, 38, 39, 43, 44, 45, 46, 47, 57, 65, 66, 72, 79, 89, 90, 95, 96, 98, 99, 101, 105, 106, 110, 111, 112, 113, 115, 116, 117, 126, 135, 136, 152, 154, 157, 158, 161, 162, 163, 164, 183, 184, 185, 193, 194, 200], "input": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 43, 44, 45, 46, 47, 58, 60, 61, 69, 75, 77, 78, 84, 90, 91, 92, 93, 94, 100, 101, 103, 104, 110, 111, 112, 113, 114, 126, 127, 128, 131, 133, 134, 135, 136, 141, 145, 146, 147, 148, 149, 150, 151, 163, 181, 191, 194, 199, 200, 201], "output": [3, 11, 12, 13, 14, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 69, 75, 78, 86, 90, 91, 92, 96, 98, 100, 101, 112, 113, 114, 120, 121, 127, 128, 131, 133, 134, 135, 136, 152, 158, 193, 196, 199, 200, 201], "nest": [3, 18, 21, 43, 44, 46, 47, 191, 194, 199, 201], "batch": [3, 11, 12, 13, 14, 15, 19, 21, 24, 25, 26, 27, 28, 31, 32, 33, 43, 44, 45, 46, 47, 76, 95, 96, 100, 103, 107, 112, 113, 115, 127, 128, 131, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 158, 160, 161, 162, 183, 184, 185, 191, 193, 194, 196, 198, 200, 201], "each": [3, 6, 11, 12, 13, 14, 15, 20, 21, 25, 27, 43, 44, 46, 47, 73, 79, 114, 120, 121, 147, 148, 150, 151, 157, 183, 184, 193, 194, 198, 200, 201], "attribut": [3, 21, 43, 44, 46, 47, 69, 113, 194, 198], "batch_siz": [3, 11, 12, 13, 18, 25, 26, 28, 31, 32, 33, 43, 45, 55, 73, 86, 87, 88, 89, 97, 108, 109, 112, 113, 114, 118, 120, 121, 152, 158, 166, 169, 171, 174, 176, 179, 193, 194, 196, 198, 199, 200, 201], "size": [3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 43, 44, 45, 46, 47, 55, 58, 69, 73, 74, 76, 77, 78, 86, 87, 88, 89, 90, 95, 97, 100, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 121, 141, 152, 158, 166, 169, 171, 174, 176, 179, 193, 194, 196, 198, 200, 201], "repres": [3, 11, 12, 13, 14, 27, 43, 44, 46, 47, 120, 121, 138, 199], "togeth": [3, 11, 12, 13, 14, 86, 87, 88, 198], "where": [3, 6, 11, 12, 13, 14, 25, 26, 27, 28, 31, 32, 33, 37, 38, 43, 44, 45, 46, 47, 69, 75, 78, 112, 113, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 158, 161, 162, 191, 193, 194, 196, 198, 200], "expect": [3, 6, 18, 21, 29, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 112, 113, 114, 127, 128, 133, 134, 164, 188, 191, 193, 200], "live": [3, 11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 45, 46, 47, 158], "doe": [3, 25, 27, 34, 40, 103, 114, 128, 133, 134, 141, 161, 191, 193, 199, 200], "actual": [3, 6, 11, 12, 14, 43, 44, 46, 47, 163, 193, 194], "step": [3, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 65, 66, 76, 84, 89, 98, 100, 102, 113, 127, 134, 141, 152, 157, 161, 191, 193, 194, 196, 199, 201], "oper": [3, 6, 11, 12, 14, 21, 43, 44, 46, 47, 75, 86, 87, 88, 112, 120, 127, 128, 129, 130, 131, 133, 134, 141, 142, 143, 144, 161, 169, 171, 176, 179, 191, 193, 194, 196, 198, 200], "comput": [3, 11, 13, 19, 21, 25, 27, 43, 44, 46, 47, 60, 66, 69, 75, 76, 77, 78, 86, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 110, 111, 113, 116, 117, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 164, 193, 194, 196, 198], "respons": [3, 113, 161, 198, 200], "just": [3, 152, 191, 194, 198, 199, 200, 201], "retriev": [3, 31, 32, 33, 43, 44, 46, 47, 58, 66, 84, 89, 113, 128, 133, 134, 142, 143, 144, 166, 169, 171, 174, 176, 179, 185, 191, 199, 200], "care": [3, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 193, 194], "map": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 37, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 86, 87, 88, 112, 113, 114, 120, 158, 187, 193, 194, 198, 199], "desir": [3, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 83, 90, 101, 112, 113, 193, 194, 199], "see": [3, 5, 6, 7, 8, 11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 80, 90, 101, 103, 112, 116, 117, 193, 194, 198, 199, 200], "below": [3, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 90, 101, 112, 116, 117, 186, 195], "For": [3, 6, 8, 9, 11, 12, 13, 14, 21, 43, 44, 46, 47, 103, 120, 127, 131, 134, 157, 169, 191, 193, 198, 200], "parametr": [3, 104, 136, 193], "hardwar": 3, "observation_spec": [3, 43, 45, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 73, 74, 75, 76, 77, 78, 89, 164, 181, 193, 196, 200], "compositespec": [3, 43, 45, 73, 85, 89, 108, 113, 114, 187, 193, 200], "all": [3, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 60, 62, 66, 69, 73, 75, 76, 77, 78, 79, 82, 83, 84, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 112, 114, 124, 156, 161, 163, 183, 184, 185, 188, 191, 193, 194, 195, 196, 198, 199, 200, 201], "kei": [3, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 33, 43, 44, 46, 47, 57, 58, 66, 69, 73, 75, 76, 78, 79, 84, 89, 102, 112, 113, 114, 118, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 141, 142, 143, 144, 156, 157, 160, 161, 164, 166, 174, 176, 179, 191, 193, 194, 196, 198, 200, 201], "spec": [3, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 97, 108, 109, 111, 112, 113, 114, 120, 121, 166, 169, 171, 174, 176, 179, 193, 194, 196, 201], "pair": [3, 21, 27, 43, 44, 46, 47, 86, 113, 193, 194, 196, 199, 200], "input_spec": [3, 43, 45, 46, 47, 60, 61, 69, 75, 76, 77, 78, 89, 200], "action_spec": [3, 43, 44, 45, 46, 47, 76, 85, 87, 97, 108, 109, 111, 120, 121, 181, 193, 194, 196, 200, 201], "tensorspec": [3, 16, 17, 18, 19, 20, 22, 23, 24, 30, 43, 45, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 108, 111, 112, 113, 187], "reward_spec": [3, 43, 45, 56, 60, 61, 69, 71, 72, 75, 76, 77, 78, 89, 200], "reward": [3, 11, 12, 13, 21, 29, 43, 44, 45, 46, 47, 56, 60, 61, 69, 71, 72, 75, 76, 77, 78, 79, 84, 89, 129, 130, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 159, 185, 191, 193, 194, 196, 199, 200, 201], "importantli": [3, 113], "should": [3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 40, 43, 44, 45, 46, 47, 60, 66, 69, 75, 76, 77, 78, 79, 84, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 112, 113, 124, 132, 133, 134, 135, 137, 141, 156, 157, 158, 161, 181, 183, 184, 185, 191, 193, 194, 196, 200, 201], "4": [3, 6, 11, 12, 13, 19, 24, 45, 48, 49, 50, 53, 57, 79, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 108, 109, 112, 113, 114, 118, 120, 121, 123, 193, 194, 199, 200, 201], "action_s": 3, "simpli": [3, 5, 193, 194, 200], "With": [3, 191, 199, 200], "reset": [3, 11, 12, 13, 14, 43, 44, 45, 46, 47, 54, 57, 60, 65, 69, 73, 75, 78, 79, 80, 84, 119, 166, 169, 171, 174, 176, 179, 193, 194, 196, 201], "mai": [3, 4, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 79, 101, 191, 193, 200, 201], "necessarili": 3, "requir": [3, 6, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 46, 47, 60, 69, 73, 76, 78, 101, 112, 114, 127, 128, 131, 133, 134, 135, 136, 191, 193, 194, 198, 200], "usual": [3, 5, 43, 44, 46, 47, 104, 166, 174, 176, 179, 188, 191, 200], "done": [3, 6, 11, 12, 13, 18, 21, 43, 44, 45, 46, 47, 66, 72, 73, 79, 84, 89, 129, 130, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 166, 169, 171, 174, 176, 179, 193, 194, 196, 199, 200, 201], "stateless": [3, 46, 47, 75, 200], "instanc": [3, 6, 7, 11, 12, 13, 14, 21, 29, 43, 44, 45, 46, 47, 49, 57, 60, 69, 73, 75, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 110, 111, 113, 114, 124, 157, 164, 166, 167, 168, 169, 171, 174, 176, 179, 181, 183, 184, 191, 194, 198, 199, 200], "set_se": [3, 11, 12, 13, 14, 43, 44, 45, 46, 47, 66, 76, 193, 200, 201], "integ": [3, 11, 12, 13, 14, 20, 21, 24, 25, 26, 27, 40, 43, 44, 46, 47, 90, 101, 158], "seed": [3, 11, 12, 13, 14, 43, 44, 45, 46, 47, 48, 76, 161, 193], "next": [3, 11, 12, 13, 18, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 79, 84, 111, 135, 141, 158, 193, 194, 196, 200, 201], "determinist": [3, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 85, 98, 105, 111, 112, 113, 193, 194, 200], "preced": [3, 100, 198], "one": [3, 6, 10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 31, 32, 33, 40, 41, 42, 43, 44, 46, 47, 60, 65, 69, 75, 76, 77, 78, 79, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 106, 107, 109, 110, 111, 112, 113, 120, 121, 124, 126, 127, 128, 129, 130, 133, 134, 135, 154, 156, 157, 158, 161, 164, 166, 174, 176, 179, 185, 188, 191, 193, 194, 196, 198, 199, 200], "multipl": [3, 11, 12, 13, 14, 19, 46, 47, 58, 75, 79, 100, 103, 104, 112, 135, 176, 185, 191, 194, 199, 201], "without": [3, 6, 8, 21, 43, 44, 46, 47, 87, 135, 141, 181, 188, 193, 194, 200], "risk": 3, "overlap": 3, "consecut": [3, 194, 200], "while": [3, 6, 21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 133, 134, 193, 194, 201], "still": [3, 8, 133, 193, 194, 196, 200], "reproduc": 3, "max_step": [3, 43, 44, 45, 46, 47, 84, 193, 194, 200, 201], "maximum": [3, 11, 12, 13, 14, 17, 21, 22, 25, 26, 27, 37, 38, 39, 43, 44, 46, 47, 71, 108, 115, 116, 117, 136, 158, 193, 194, 200, 201], "safemodul": [3, 45, 55, 86, 87, 88, 89, 102, 108, 113, 114, 122, 123, 127, 128, 129, 133, 134, 135, 136, 141, 142, 143, 144, 157, 167, 168, 181, 187, 201], "ani": [3, 18, 21, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 69, 76, 79, 90, 101, 104, 112, 114, 134, 158, 161, 188, 193, 194, 200], "compat": [3, 4, 6, 10, 21, 40, 43, 44, 46, 47, 52, 79, 122, 138, 194, 201], "better": [3, 194], "cpu": [3, 7, 9, 11, 12, 13, 21, 29, 37, 38, 43, 44, 45, 46, 47, 55, 60, 69, 73, 76, 78, 89, 104, 108, 112, 114, 166, 169, 171, 174, 176, 179, 193, 194, 196, 199, 200, 201], "intens": [3, 7], "gym3": 3, "envpool": 3, "interfac": [3, 101, 103, 198], "simultan": [3, 46, 47], "thei": [3, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 61, 62, 75, 76, 100, 127, 128, 131, 133, 134, 135, 136, 161, 191, 193, 194, 196, 198, 199, 200, 201], "often": [3, 132, 161, 200], "competit": 3, "advantag": [3, 99, 127, 128, 133, 134, 142, 143, 144, 145, 146, 147, 149, 150, 191, 193, 194, 200], "scale": [3, 66, 72, 86, 87, 88, 98, 108, 110, 111, 113, 114, 116, 117, 159, 164, 166, 174, 176, 179, 185, 193, 194, 198, 201], "varieti": 3, "therefor": [3, 6, 134, 199, 200], "its": [3, 6, 11, 12, 13, 14, 21, 27, 43, 44, 45, 46, 47, 57, 75, 76, 79, 90, 97, 113, 127, 128, 131, 133, 134, 135, 136, 161, 181, 191, 193, 194, 198, 200], "own": [3, 11, 12, 14, 21, 43, 44, 46, 47, 194, 198], "parallelenv": [3, 11, 12, 13, 14, 47, 182, 187, 193, 194, 196, 200, 201], "As": [3, 43, 44, 46, 47, 113, 193, 194, 200, 201], "inherit": [3, 102, 191, 198, 199], "enjoi": 3, "exact": 3, "same": [3, 13, 21, 43, 44, 46, 47, 65, 75, 76, 79, 90, 101, 193, 194, 196, 198, 199, 200], "Of": [3, 6, 188, 200], "cours": [3, 188, 200], "correspond": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 34, 43, 44, 45, 46, 47, 73, 76, 79, 113, 194], "count": [3, 157, 163, 200], "def": [3, 10, 21, 43, 44, 45, 46, 47, 89, 118, 120, 123, 191, 193, 194, 196, 198, 199, 200, 201], "make_env": [3, 79, 84, 167, 168, 193, 194, 200], "gymenv": [3, 11, 12, 13, 14, 52, 60, 66, 73, 76, 79, 166, 169, 171, 174, 176, 179, 181, 187, 193, 194, 200, 201], "pendulum": [3, 11, 12, 13, 14, 50, 51, 60, 66, 73, 76, 79, 181, 194, 200, 201], "v1": [3, 11, 12, 13, 66, 73, 138, 147, 148, 150, 151, 194, 200, 201], "from_pixel": [3, 48, 49, 166, 174, 176, 179, 193, 194, 200, 201], "true": [3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 45, 46, 47, 48, 49, 58, 60, 65, 66, 69, 72, 73, 74, 76, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 101, 103, 104, 112, 113, 114, 116, 117, 123, 127, 128, 133, 134, 135, 136, 138, 142, 143, 144, 147, 148, 150, 151, 154, 155, 157, 161, 171, 185, 191, 193, 194, 196, 198, 199, 200, 201], "9": [3, 6, 21, 79, 193, 194, 199], "81": 3, "cuda": [3, 6, 21, 43, 44, 46, 47, 60, 68, 69, 73, 76, 78, 112, 153, 193, 194, 199, 200], "0": [3, 5, 6, 9, 10, 20, 21, 24, 25, 27, 34, 43, 44, 45, 46, 47, 56, 58, 60, 63, 65, 66, 69, 73, 74, 76, 78, 79, 84, 89, 90, 91, 92, 94, 98, 101, 103, 104, 110, 111, 112, 113, 114, 115, 116, 117, 124, 127, 128, 133, 134, 135, 136, 137, 141, 152, 159, 161, 181, 185, 191, 193, 194, 196, 197, 198, 199, 200, 201], "print": [3, 5, 6, 11, 12, 13, 18, 19, 21, 24, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 61, 66, 73, 74, 79, 84, 85, 86, 87, 88, 90, 97, 101, 109, 112, 113, 114, 118, 120, 121, 123, 166, 169, 171, 174, 176, 179, 181, 191, 193, 194, 196, 198, 199, 200, 201], "call": [3, 6, 10, 11, 12, 13, 14, 21, 25, 26, 27, 31, 32, 33, 37, 38, 39, 40, 43, 44, 46, 47, 57, 60, 61, 68, 69, 73, 75, 76, 77, 78, 79, 83, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 103, 105, 106, 110, 111, 112, 113, 114, 124, 141, 157, 158, 191, 193, 194, 198, 199, 200], "b": [3, 15, 18, 103, 104, 198, 199], "c": [3, 5, 6, 18, 166, 169, 171, 174, 176, 179, 199], "d": [3, 25, 34, 113, 199, 201], "get": [3, 5, 6, 40, 46, 47, 58, 61, 66, 74, 79, 85, 113, 145, 146, 149, 193, 194, 198, 200, 201], "forc": [3, 5, 6, 194], "variou": [3, 11, 12, 13, 14, 127, 128, 131, 133, 134, 135, 136, 183, 184, 193, 194, 200], "befor": [3, 6, 9, 11, 12, 13, 14, 21, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 101, 103, 104, 127, 128, 131, 133, 134, 135, 136, 142, 143, 144, 193, 194, 198, 199, 200], "reset_work": 3, "fals": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 51, 58, 60, 65, 66, 69, 72, 73, 74, 76, 78, 79, 86, 87, 88, 89, 90, 91, 97, 101, 108, 109, 112, 113, 114, 118, 120, 121, 122, 123, 129, 130, 131, 135, 136, 138, 142, 143, 144, 147, 148, 150, 151, 154, 155, 157, 158, 159, 161, 166, 169, 171, 174, 176, 179, 185, 191, 193, 194, 196, 198, 199, 200, 201], "field": [3, 11, 12, 13, 14, 18, 21, 43, 44, 45, 46, 47, 73, 76, 86, 87, 88, 89, 97, 108, 109, 112, 113, 114, 118, 120, 121, 164, 166, 169, 171, 174, 176, 179, 188, 194, 196, 198, 199, 200, 201], "bool": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 49, 58, 65, 66, 69, 72, 73, 74, 76, 78, 79, 84, 89, 90, 91, 92, 101, 103, 104, 112, 113, 114, 116, 117, 122, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 142, 143, 144, 147, 148, 150, 151, 154, 155, 157, 158, 159, 161, 166, 169, 171, 174, 176, 179, 185, 194, 196, 200, 201], "500": [3, 161, 193, 194, 200, 201], "uint8": [3, 74, 194, 200, 201], "none": [3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 112, 113, 114, 118, 120, 121, 122, 127, 134, 141, 142, 143, 144, 147, 148, 150, 151, 156, 157, 158, 161, 164, 166, 167, 168, 169, 171, 174, 176, 179, 181, 183, 184, 185, 191, 193, 194, 198, 199, 200, 201], "is_shar": [3, 11, 12, 13, 18, 45, 73, 79, 86, 87, 88, 89, 97, 108, 109, 112, 113, 114, 118, 120, 121, 166, 169, 171, 174, 176, 179, 194, 196, 198, 199, 200, 201], "A": [3, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 52, 69, 73, 75, 76, 79, 80, 84, 89, 90, 101, 104, 113, 114, 120, 124, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 154, 158, 161, 162, 166, 171, 174, 176, 179, 181, 194, 199, 200], "note": [3, 11, 12, 13, 14, 21, 43, 44, 46, 47, 79, 113, 193, 194, 196, 198, 199, 200], "launch": 3, "quit": [3, 193, 194, 200], "mani": [3, 128, 133, 134, 135, 199, 200], "import": [3, 5, 6, 9, 11, 12, 13, 25, 27, 34, 44, 45, 46, 47, 66, 73, 79, 85, 86, 87, 88, 89, 97, 101, 108, 109, 112, 113, 114, 118, 120, 121, 128, 154, 157, 166, 169, 171, 174, 176, 179, 181, 193, 194, 196, 198, 199, 200, 201], "start": [3, 11, 84, 156, 193, 194, 200], "bottleneck": 3, "why": [3, 193, 200], "so": [3, 5, 6, 9, 21, 43, 44, 46, 47, 79, 114, 193, 200], "slow": 3, "onc": [3, 6, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 191, 193, 194, 200], "great": [3, 6, 7, 199, 201], "speedup": [3, 200], "serialenv": [3, 187, 200], "serial": [3, 21, 43, 44, 46, 47, 79], "mostli": [3, 14, 200], "purpos": [3, 6, 181, 199, 200], "want": [3, 5, 6, 193, 199, 200, 201], "assess": [3, 193], "behaviour": [3, 44, 58, 116, 117, 157, 194], "subprocess": 3, "In": [3, 6, 9, 10, 11, 12, 14, 21, 43, 44, 46, 47, 60, 69, 73, 75, 76, 78, 101, 111, 112, 113, 114, 116, 117, 126, 162, 183, 184, 185, 193, 194, 196, 199, 200], "case": [3, 6, 10, 11, 12, 13, 14, 18, 25, 27, 34, 43, 44, 46, 47, 76, 101, 112, 113, 114, 126, 152, 162, 183, 184, 185, 191, 193, 198, 199, 200], "raw": [3, 116, 117], "must": [3, 6, 11, 12, 13, 14, 18, 21, 37, 38, 39, 40, 43, 44, 46, 47, 73, 76, 90, 101, 112, 113, 120, 121, 145, 146, 147, 148, 149, 150, 151, 152, 157, 161, 162, 166, 169, 171, 174, 176, 179, 193, 194, 196, 198, 199, 201], "treat": 3, "being": [3, 14, 21, 43, 44, 46, 47, 76, 83, 162, 183, 184, 185, 193, 194], "pass": [3, 13, 18, 21, 27, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 103, 105, 106, 110, 111, 112, 113, 114, 123, 124, 183, 184, 185, 193, 194, 196, 200], "anoth": [3, 43, 44, 46, 47, 75, 101, 113, 127, 128, 131, 133, 134, 135, 136, 193, 196, 198, 199, 200], "valu": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 45, 46, 47, 56, 58, 65, 69, 71, 73, 74, 75, 76, 78, 79, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 104, 107, 108, 109, 112, 113, 115, 116, 117, 118, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 166, 169, 174, 176, 179, 181, 191, 193, 194, 196, 198, 200, 201], "To": [3, 5, 6, 21, 32, 43, 44, 46, 47, 79, 86, 87, 88, 161, 193, 194, 198, 200, 201], "logic": 3, "torchvis": [3, 200, 201], "transformedenv": [3, 60, 65, 66, 73, 75, 79, 166, 169, 171, 174, 176, 179, 187, 193, 194, 196, 200, 201], "primit": [3, 193, 194], "compos": [3, 21, 32, 35, 36, 41, 43, 44, 46, 47, 75, 76, 79, 166, 169, 171, 174, 176, 179, 187, 194, 196, 200, 201], "built": [3, 6, 177, 181, 182, 185, 200], "base_env": [3, 73, 193, 194, 200, 201], "totensorimag": [3, 171, 187, 194, 200, 201], "in_kei": [3, 11, 12, 13, 45, 56, 57, 58, 59, 61, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 78, 79, 85, 86, 87, 88, 89, 108, 112, 113, 114, 118, 122, 123, 129, 130, 176, 179, 181, 193, 194, 196, 198, 200, 201], "resiz": [3, 187, 194, 200], "64": [3, 91, 92, 99, 193, 194, 196, 200, 201], "By": [3, 24, 44, 46, 47, 113, 157, 185, 199, 200], "default": [3, 9, 11, 12, 13, 14, 18, 19, 21, 24, 27, 32, 37, 38, 43, 44, 46, 47, 48, 57, 58, 63, 65, 66, 69, 72, 73, 74, 76, 78, 79, 84, 85, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 103, 104, 105, 106, 108, 110, 111, 112, 113, 115, 116, 117, 118, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 147, 148, 150, 151, 152, 154, 155, 157, 159, 161, 166, 169, 174, 176, 179, 181, 185, 191, 193, 194, 198, 199, 200, 201], "now": [3, 6, 193, 196, 198, 199, 200], "appar": [3, 154], "bring": [3, 200], "signific": [3, 200], "kind": [3, 29, 84], "consult": 3, "achiev": [3, 21, 43, 44, 46, 47, 191, 198, 199, 200], "interest": [3, 46, 47, 113, 200], "abov": [3, 6, 21, 43, 44, 46, 47, 116, 117, 126, 191, 193, 194, 200], "resize_par": 3, "sinc": [3, 6, 21, 43, 44, 45, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 193, 194, 200, 201], "out_kei": [3, 11, 12, 13, 45, 46, 47, 56, 58, 63, 67, 69, 70, 71, 74, 75, 78, 85, 86, 87, 88, 89, 108, 112, 113, 114, 118, 120, 121, 122, 123, 157, 181, 193, 196, 198, 200, 201], "keyword": [3, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 113, 182, 193, 198, 200], "argument": [3, 11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 60, 69, 73, 75, 76, 78, 90, 101, 103, 112, 113, 118, 154, 163, 166, 169, 171, 174, 176, 179, 181, 182, 185, 193, 194, 198, 200], "easi": [3, 194, 199, 200], "root": [3, 116, 117, 200], "graph": [3, 139, 140], "inv": 3, "appli": [3, 21, 31, 32, 33, 43, 44, 46, 47, 76, 116, 156, 191, 193, 194, 198, 200, 201], "revers": 3, "order": [3, 13, 21, 24, 31, 32, 33, 43, 44, 46, 47, 76, 112, 114, 198], "chain": [3, 32, 60, 90, 114, 200], "taken": [3, 43, 44, 46, 47, 194], "includ": [3, 6, 8, 21, 37, 38, 39, 40, 43, 44, 45, 46, 47, 76, 79, 163, 191, 193, 194, 199, 200], "invers": [3, 125], "through": [3, 13, 46, 47, 101, 113, 114, 124, 193, 194, 196, 198, 200], "in_keys_inv": [3, 61, 75, 193, 196, 200], "append_transform": [3, 31, 32, 33, 69, 73, 193, 200, 201], "doubletofloat": [3, 166, 169, 174, 176, 179, 187, 193, 196], "float32": [3, 11, 12, 13, 18, 25, 29, 34, 45, 61, 66, 73, 74, 86, 87, 88, 89, 97, 108, 109, 112, 113, 114, 118, 120, 121, 166, 169, 171, 174, 176, 179, 194, 196, 198, 199, 200, 201], "float64": [3, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 196, 200], "torchrl": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 195, 196, 197, 198, 199], "against": [4, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 112, 113], "latest": [4, 9, 201], "guarante": [4, 21, 37, 38, 39, 40, 43, 44, 46, 47, 79, 201], "wa": [4, 6, 43, 44, 46, 47, 76, 132, 137, 193, 194, 196, 201], "avail": [4, 5, 113, 120, 121, 183, 184, 193, 194, 200], "releas": [4, 6, 9, 21, 43, 44, 46, 47, 76, 201], "howev": [4, 6, 21, 43, 44, 46, 47, 76, 193, 194, 199, 200], "project": [4, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 112, 113, 194, 200, 201], "willing": 4, "keep": [4, 6, 12, 69, 78, 79, 154, 161, 194, 199, 200, 201], "backward": [4, 21, 43, 44, 46, 47, 79, 193, 194, 199], "older": [4, 6], "If": [4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 43, 44, 45, 46, 47, 58, 59, 65, 69, 75, 76, 78, 79, 90, 100, 101, 112, 113, 114, 123, 124, 126, 141, 150, 151, 156, 158, 161, 162, 164, 166, 174, 176, 179, 181, 185, 188, 193, 194, 196, 198, 199, 200, 201], "you": [4, 5, 6, 7, 9, 21, 43, 44, 46, 47, 79, 188, 193, 194, 196, 199, 200, 201], "feel": [4, 188, 201], "free": [4, 6, 127, 134, 191, 201], "gladli": 4, "instruct": [5, 9], "prepar": 5, "conda": [5, 6, 188], "assum": [5, 18, 24, 33, 44, 46, 47, 69, 73, 78, 100, 147, 148, 150, 151, 193, 194, 196], "let": [5, 6, 21, 43, 44, 46, 47, 157, 193, 194, 196, 198, 199, 200, 201], "creat": [5, 6, 9, 11, 12, 14, 21, 32, 43, 44, 46, 47, 69, 75, 76, 79, 84, 90, 91, 92, 93, 94, 99, 101, 102, 113, 130, 131, 135, 164, 167, 168, 181, 183, 184, 193, 194, 198, 199, 200, 201], "n": [5, 6, 16, 19, 21, 24, 43, 44, 46, 47, 57, 113, 127, 141, 191, 193, 194, 199, 200], "7": [5, 9, 19, 24, 89, 90, 100, 101, 193, 194, 201], "cmake": 5, "14": [5, 10, 66, 194], "activ": [5, 6, 8, 90, 98, 101, 134, 201], "sim": 5, "bullet": 5, "physic": [5, 6, 191, 193], "headless": [5, 6], "mode": [5, 13, 21, 43, 44, 46, 47, 76, 79, 81, 83, 95, 107, 113, 115, 116, 117, 157, 193, 194, 200, 201], "necessari": [5, 11, 12, 13, 14, 135, 142, 143, 144, 193], "cluster": [5, 6, 188], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 100, 123], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 19], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 21, 43, 44, 46, 47, 193, 200], "command": [5, 6, 9, 200], "more": [5, 7, 11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 80, 101, 103, 112, 120, 127, 131, 134, 142, 145, 146, 149, 156, 158, 169, 188, 191, 193, 194, 196, 198, 199, 200], "detail": [5, 6, 21, 43, 44, 46, 47, 76, 120, 127, 131, 134, 169, 188, 196, 198, 199], "readm": [5, 6], "md": [5, 6], "list": [5, 6, 8, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 39, 40, 43, 44, 45, 46, 47, 57, 69, 76, 78, 101, 114, 118, 140, 142, 143, 144, 157, 158, 183, 184, 193, 194, 196, 198, 199, 200, 201], "habitatenv": [5, 187], "_has_habitat": 5, "assert": [5, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 44, 79, 84, 152, 160, 193, 194, 196, 198, 199, 200], "check": [5, 6, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 58, 62, 112, 113, 122, 193, 194, 196, 200], "_env": [5, 200], "available_env": [5, 48, 49, 50, 51, 53, 54, 200], "startswith": 5, "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 21, 43, 44, 46, 47, 76], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "solut": [5, 6, 8, 188, 191, 201], "debug": [5, 200], "link": [5, 6], "right": [5, 6, 100, 193, 194, 200], "replac": [5, 6, 21, 194], "path": [5, 6, 21, 37, 43, 44, 46, 47, 69, 78, 161, 191], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 21, 43, 44, 46, 47, 48, 76, 127, 128, 131, 133, 134, 135, 136, 155, 156, 166, 169, 171, 174, 176, 179, 191, 193, 194, 198, 200], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "config": [5, 6, 164, 166, 167, 168, 169, 171, 174, 176, 177, 179, 182], "var": [5, 6, 21, 43, 44, 46, 47, 76], "ld_preload": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 86, 87, 88, 196, 200], "joint": [6, 194], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 27, 68, 69, 78, 86, 87, 88, 193], "develop": [6, 201], "robot": [6, 69, 78], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 21], "area": 6, "demand": [6, 200], "fast": [6, 8, 135, 193, 194], "accur": [6, 193], "articul": 6, "interact": [6, 13, 113, 200], "recent": [6, 200], "acquir": [6, 193], "access": [6, 21, 43, 44, 46, 47, 69, 185, 188, 199], "whomev": 6, "licenc": 6, "incorpor": [6, 193], "make": [6, 21, 40, 43, 44, 46, 47, 51, 54, 66, 69, 84, 103, 113, 134, 168, 185, 193, 194, 196, 198, 199, 200, 201], "relianc": 6, "obsolet": 6, "seri": [6, 24, 41, 42, 47, 65, 75, 200], "legaci": 6, "document": [6, 21, 43, 44, 46, 47, 76, 201], "capabl": [6, 191, 193, 196, 200], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 193], "gpu": [6, 7, 21, 43, 44, 46, 47, 200], "our": [6, 193, 194, 196, 198, 199, 201], "advic": [6, 200], "sudo": [6, 188], "enabl": [6, 157], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 46, 75, 78, 129, 191, 193, 200], "awar": [6, 37, 38, 39, 40], "fact": [6, 194, 200], "indent": 6, "workflow": [6, 86, 87, 88], "thing": [6, 194, 200], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 21, 43, 44, 46, 47, 76, 86, 87, 88, 90, 101, 157, 193, 198, 200], "tell": 6, "appropri": [6, 11, 12, 13, 14, 41, 42, 182, 185], "variabl": [6, 19, 24, 86, 87, 88, 135, 191, 198], "mujoco_gl": 6, "pyopengl_platform": 6, "deactiv": 6, "pre": [6, 21, 38, 43, 44, 46, 47, 69, 78, 200], "binari": [6, 16, 24, 56, 120, 121], "need": [6, 9, 21, 40, 43, 44, 46, 47, 60, 69, 75, 76, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 103, 105, 106, 110, 111, 112, 124, 126, 135, 141, 161, 185, 193, 198, 199, 200, 201], "These": [6, 200], "instead": [6, 19, 21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 185, 193, 194, 198, 200], "becaus": [6, 75, 94, 100, 112, 113, 193, 194, 196, 199, 200], "refer": [6, 21, 43, 44, 46, 47, 76, 79, 89, 98, 105, 106, 110, 111, 120, 127, 131, 134, 142, 145, 146, 149, 169], "setup": 6, "like": [6, 21, 43, 44, 46, 47, 52, 74, 135, 193, 199, 200], "mkdir": 6, "cd": 6, "here": [6, 8, 9, 193, 194, 196, 198, 199, 200, 201], "tag": [6, 185], "earlier": [6, 11, 12, 13, 14, 193], "roboti": 6, "u": [6, 9, 193, 198, 200, 201], "download": [6, 9, 69, 78, 193, 194, 195, 196, 198, 199, 200, 201], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 44, 89, 193, 194], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": 6, "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "too": [6, 116, 117, 127, 128, 131, 133, 134, 135, 136, 193, 194, 200], "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 199], "hard": [6, 132, 194, 200], "chang": [6, 21, 37, 38, 39, 40, 43, 44, 46, 47, 76, 79, 193, 199, 200], "later": [6, 94, 113, 193, 194], "known": [6, 7, 193], "try": [6, 123, 194, 199, 200, 201], "nativ": [6, 8, 43, 44, 46, 47, 57, 198], "usag": [6, 136], "local": [6, 9, 13, 21, 31, 43, 44, 46, 47, 76], "modifi": [6, 21, 43, 44, 46, 47, 60, 69, 73, 75, 76, 78, 112, 163, 166, 174, 176, 179, 193, 198], "nvidia": 6, "driver": 6, "those": [6, 46, 47, 66, 113, 114, 162, 183, 184, 193, 194, 200], "hack": 6, "line": [6, 21, 43, 44, 46, 47], "adatp": 6, "script": [6, 166, 169, 171, 174, 176, 179, 181, 185, 191, 193, 194, 196, 198, 199, 200, 201], "go": [6, 198, 200], "unnot": 6, "until": 6, "complet": [6, 8, 44, 188, 194, 196], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "caus": 6, "give": [6, 45, 188, 193, 194, 201], "troubleshoot": 6, "gl": 6, "h": [6, 59, 70, 74], "eglshim": 6, "10": [6, 18, 45, 74, 89, 100, 135, 136, 152, 191, 193, 194, 198, 199, 200, 201], "fatal": 6, "error": [6, 9, 10, 21, 43, 44, 46, 47, 123, 193, 194, 199, 200], "No": 6, "directori": [6, 37, 191], "sure": [6, 40, 84, 185, 193, 198, 199, 200, 201], "glu": 6, "38": [6, 194], "disappear": [6, 196], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "saniti": 6, "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 21, 43, 44, 46, 47, 76, 193, 199, 200], "stack": [6, 27, 46, 47, 79, 84, 114, 152, 194, 196, 198, 199, 201], "job": [6, 199], "schedul": [6, 157], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "__init__": [6, 45, 89, 118, 120, 123, 191, 198, 200], "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": 6, "opengl": 6, "global": [6, 113, 191, 193, 198], "cuda_visible_devic": 6, "id": [6, 15, 135, 176], "around": [6, 14, 27, 28, 33, 45, 113, 142, 198, 200], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 48, 59, 69, 74, 78, 101, 194, 199, 200], "black": 6, "read": [6, 11, 12, 13, 14, 37, 38, 39, 40, 44, 46, 47, 75, 86, 87, 88, 107, 112, 113, 114, 127, 128, 131, 133, 134, 135, 136, 161, 166, 174, 176, 179, 193, 194, 196, 198, 200], "miss": [6, 10, 18, 21, 43, 44, 46, 47, 76, 114, 188], "onscreen": 6, "101": 6, "displai": [6, 161, 191, 194], "correctli": [6, 21, 43, 44, 46, 47], "ask": [7, 200], "core": [7, 166, 169, 171, 174, 176, 179, 191, 201], "than": [7, 11, 12, 13, 14, 94, 101, 112, 162, 188, 193, 194, 198, 199, 200, 201], "twice": [7, 136], "much": [7, 25, 27, 34, 133, 134, 199, 200], "spin": [8, 200], "hug": 8, "face": [8, 194, 200], "syllabu": 8, "lectur": 8, "best": [8, 194, 201], "awesom": [8, 199], "curat": 8, "discuss": 8, "reddit": 8, "maintain": 8, "reagent": 8, "product": [8, 183, 184], "orient": [8, 200], "stabl": [8, 9, 193], "baselines3": 8, "tf": 8, "agent": [8, 31, 104], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 45, 200, 201], "dopamin": 8, "prototyp": [8, 187], "salina": 8, "flexibl": [8, 191, 198, 200], "simpl": [8, 21, 24, 43, 44, 46, 47, 91, 113, 193, 194, 199, 200], "sequenti": [8, 21, 43, 44, 46, 47, 114, 198, 199, 200], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 201], "grade": 8, "factori": 8, "throughput": 8, "asynchron": [8, 12, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 127, 183], "cherri": 8, "jaxrl": 8, "continu": [8, 17, 22, 23, 30, 91, 92, 93, 94, 113, 114, 137, 142, 145, 146, 149, 169, 193, 200, 201], "space": [8, 24, 29, 106, 112, 113, 114, 120, 121, 193, 200, 201], "mbrl": [8, 45], "rlmeta": 8, "light": 8, "weight": [8, 11, 12, 13, 14, 21, 25, 27, 43, 44, 46, 47, 60, 69, 73, 76, 78, 104, 112, 127, 128, 162, 180, 191, 193, 194, 196, 201], "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 194], "relat": [9, 193], "689": 9, "13": [9, 10, 194, 198], "lead": [9, 10, 18, 116, 117, 201], "python3": 9, "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 193, 194, 195, 196, 198, 199, 200, 201], "24": [9, 194], "11": [9, 19, 24, 74, 89, 194], "2022": [9, 201], "12": [9, 194, 199], "pip": [9, 200, 201], "solv": [9, 188, 193, 194], "pip3": 9, "extra": [9, 21, 43, 44, 46, 47, 79], "url": 9, "org": [9, 25, 34, 57, 69, 91, 92, 93, 94, 98, 99, 104, 105, 106, 110, 111, 120, 127, 131, 132, 134, 136, 137, 142, 145, 146, 149, 166, 169, 174, 179], "whl": 9, "There": [9, 191, 194, 200], "two": [9, 21, 43, 44, 46, 47, 94, 113, 133, 136, 138, 157, 161, 166, 174, 176, 179, 193, 194, 196, 198, 199, 200, 201], "upgrad": 9, "previou": [9, 21, 111, 193, 198, 200], "relas": 9, "functorch": [9, 112, 113, 114, 122, 194, 201], "2": [9, 11, 12, 13, 20, 21, 43, 44, 46, 47, 58, 60, 66, 69, 73, 76, 78, 79, 90, 91, 92, 93, 97, 99, 100, 101, 112, 118, 120, 128, 129, 133, 135, 136, 141, 147, 148, 150, 151, 152, 193, 194, 196, 199, 200, 201], "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 33, 37, 43, 44, 46, 47, 48, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 83, 85, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 108, 112, 113, 118, 120, 121, 122, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 141, 143, 144, 155, 156, 157, 160, 164, 166, 169, 174, 176, 177, 179, 185, 193], "from_vers": 10, "to_vers": 10, "decor": 10, "fit": [10, 66, 191], "explicit": [10, 100, 193, 194], "intersect": 10, "rang": [10, 19, 79, 84, 133, 191, 193, 194, 198, 199, 201], "paramet": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 174, 176, 179, 181, 182, 183, 184, 185, 193, 194, 198, 201], "longer": [10, 194], "fun": [10, 198, 199], "self": [10, 21, 27, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 89, 112, 118, 120, 123, 191, 198, 199, 201], "x": [10, 15, 18, 21, 74, 90, 96, 99, 100, 101, 120, 123, 124, 126, 145, 146, 147, 148, 149, 150, 151, 161, 194, 198, 201], "indic": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 58, 73, 90, 101, 124, 158, 164, 185, 188, 191, 193, 198, 199, 200], "doesn": 10, "create_env_fn": [11, 12, 13, 14, 46, 47, 193, 201], "sequenc": [11, 12, 13, 14, 18, 20, 25, 26, 28, 32, 41, 42, 56, 57, 58, 59, 61, 63, 64, 66, 67, 70, 71, 72, 74, 75, 79, 85, 90, 95, 101, 107, 108, 113, 114, 118, 156, 158, 160, 161, 166, 174, 176, 179, 194, 196, 198, 200], "callabl": [11, 12, 13, 14, 21, 25, 26, 27, 28, 32, 43, 44, 45, 46, 47, 126, 127, 134, 158, 167, 168, 183, 184, 185], "union": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 33, 34, 43, 44, 46, 47, 55, 60, 66, 69, 72, 76, 78, 79, 90, 91, 92, 93, 94, 95, 99, 100, 101, 103, 104, 107, 108, 112, 113, 115, 116, 117, 122, 123, 125, 130, 131, 132, 135, 136, 137, 142, 143, 144, 166, 167, 168, 169, 174, 176, 177, 179, 181, 182, 183, 184, 185], "tensordictbas": [11, 12, 13, 14, 15, 18, 21, 27, 31, 33, 43, 44, 46, 47, 57, 60, 65, 73, 75, 77, 79, 80, 84, 89, 102, 112, 127, 128, 129, 130, 131, 133, 134, 135, 136, 141, 142, 143, 144, 161], "total_fram": [11, 12, 13, 14, 161, 163, 181, 191, 193, 194, 201], "int": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 57, 58, 59, 60, 63, 65, 66, 69, 70, 76, 77, 78, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 115, 116, 120, 121, 127, 128, 129, 133, 134, 135, 136, 152, 153, 154, 157, 158, 161, 162, 166, 169, 174, 176, 177, 179, 183, 184, 185], "create_env_kwarg": [11, 12, 13, 14, 46, 47, 193], "dict": [11, 12, 13, 14, 18, 19, 21, 32, 43, 44, 46, 47, 76, 79, 90, 91, 92, 93, 94, 99, 100, 101, 113, 157, 167, 168, 169, 176, 179, 183, 184, 185, 200], "max_frames_per_traj": [11, 12, 13, 14, 163, 193, 201], "frames_per_batch": [11, 12, 13, 14, 163, 193, 194, 201], "200": [11, 12, 13, 14, 21, 43, 44, 46, 47, 91, 92, 98, 110, 111, 193], "init_random_fram": [11, 12, 13, 14, 163, 193, 194], "reset_at_each_it": [11, 12, 13, 14, 193], "postproc": [11, 12, 13, 14, 193, 194], "split_traj": [11, 12, 13, 14, 193], "pin_memori": [11, 13, 14, 25, 26, 27, 28, 32, 46, 47, 68, 158, 193, 201], "passing_devic": [11, 12, 13, 14, 193, 194, 201], "update_at_each_batch": [11, 12, 14, 193], "init_with_lag": [11, 12, 13, 14], "exploration_mod": [11, 13, 113, 157, 187, 193, 194, 198], "random": [11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30, 35, 43, 44, 45, 46, 47, 65, 66, 73, 112, 113, 135, 157, 164, 193, 194, 200, 201], "reset_when_don": [11, 13], "given": [11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 60, 66, 69, 73, 76, 78, 84, 89, 98, 112, 114, 120, 121, 126, 129, 130, 141, 142, 143, 144, 153, 157, 181, 191, 193, 194, 198, 200], "datacollector": [11, 12, 13, 14, 113], "separ": [11, 12, 14, 15, 129, 135, 136, 193, 200], "synchron": [11, 183, 184], "collect": [11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 69, 78, 129, 135, 136, 152, 158, 161, 162, 163, 164, 181, 191, 193, 194, 199, 200, 201], "item": [11, 27, 62, 129, 130, 152, 191, 193, 194, 199], "queri": [11, 12, 13, 14, 21, 43, 44, 46, 47, 69, 75, 79, 114, 198, 201], "between": [11, 12, 13, 14, 21, 43, 44, 46, 47, 65, 71, 74, 76, 90, 101, 113, 133, 138, 157, 161, 193, 194, 198, 199, 200], "recept": 11, "safe": [11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 112, 113, 122, 193, 201], "onlin": [11, 14, 127, 134, 152, 185], "env_mak": [11, 12, 13, 181, 200], "linear": [11, 12, 13, 21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 85, 86, 87, 88, 89, 90, 101, 103, 104, 108, 109, 110, 111, 112, 114, 118, 120, 121, 123, 181, 196, 198, 201], "2000": [11, 12, 13, 193], "50": [11, 12, 13, 194], "enumer": [11, 12, 13, 21, 43, 44, 46, 47, 193, 194, 201], "break": [11, 12, 13, 21, 43, 44, 46, 47, 79, 193, 194, 198, 201], "mask": [11, 12, 13, 193, 194, 199, 200, 201], "step_count": [11, 12, 13, 193, 194, 201], "traj_id": [11, 12, 13, 15, 193, 194, 201], "shutdown": [11, 12, 13, 14, 193, 201], "del": [11, 12, 13, 193, 201], "accept": [11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 112, 113, 191, 198, 200], "bound": [11, 12, 13, 14, 17, 18, 21, 22, 43, 44, 46, 47, 79, 110, 111, 112, 113, 200], "total": [11, 12, 13, 14, 44, 128, 133, 134, 152, 154, 157, 161, 163, 164, 193, 194, 196, 197, 198, 199, 200, 201], "frame": [11, 12, 13, 14, 21, 44, 57, 154, 157, 161, 163, 164, 193, 194, 200, 201], "greater": [11, 12, 14, 193, 194, 201], "close": [11, 12, 13, 14, 44, 128, 133, 134, 193, 201], "signal": [11, 12, 14, 193], "sent": [11, 12, 14, 37, 38, 46, 47, 79, 194, 199], "worker": [11, 12, 13, 14, 46, 47, 79, 183, 184, 185, 200, 201], "server": [11, 12, 14], "per": [11, 12, 13, 14, 46, 98, 161, 183, 184, 193, 194, 201], "span": [11, 12, 13, 14], "unless": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 198], "traje": [11, 12], "tori": [11, 12], "reach": [11, 12, 13, 14, 43, 44, 45, 46, 47, 200, 201], "n_steps_max": [11, 12, 13, 14, 21, 193], "wrap": [11, 12, 13, 14, 21, 43, 44, 46, 47, 86, 87, 88, 193, 194, 198, 200], "track": [11, 12, 13, 14, 79, 154, 193, 194, 199], "independ": [11, 12, 13, 14, 75, 136, 191, 193, 201], "neg": [11, 12, 13, 14, 25, 27, 34, 193], "ignor": [11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 198, 199, 200], "length": [11, 12, 13, 14, 16, 46, 47, 89, 90, 91, 93, 96, 101, 112, 152, 193, 194, 199, 200], "equival": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 200, 201], "configur": [11, 12, 13, 14, 134, 166, 174, 176, 179], "mainli": [11, 12, 13, 14], "offlin": [11, 12, 13, 14, 191, 201], "whether": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 43, 44, 45, 46, 47, 76, 90, 101, 118, 129, 130, 131, 135, 136, 144, 158, 194, 200], "postprocessor": [11, 12, 14], "format": [11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 200], "boolean": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 145, 146, 147, 148, 149, 150, 151, 191], "split": [11, 12, 13, 14, 127, 128, 131, 133, 134, 135, 136, 191, 201], "accord": [11, 12, 13, 14, 25, 27, 66, 72, 103, 110, 116, 117, 198, 199], "split_trajectori": [11, 12, 13, 14, 187], "inform": [11, 12, 13, 14, 21, 43, 44, 46, 47, 90, 101, 191, 194], "place": [11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 112, 162, 163, 194, 198], "update_policy_weights_": [11, 12, 13, 14, 193, 194, 201], "dure": [11, 12, 13, 14, 43, 44, 46, 47, 76, 157, 161, 193, 200], "loop": [11, 12, 13, 14, 44, 84, 161, 191, 193, 196, 199], "accommod": [11, 12, 13, 14], "lag": [11, 12, 13, 14], "kept": [11, 12, 13, 14, 46, 47, 75, 84, 116, 117], "origin": [11, 12, 13, 14, 69, 76, 78, 112, 113, 132, 134, 176, 179, 196, 199, 200], "store": [11, 12, 13, 14, 18, 21, 27, 33, 37, 38, 39, 43, 44, 46, 47, 79, 89, 100, 166, 169, 171, 174, 176, 179, 191, 193, 194, 199, 200], "long": [11, 12, 13, 14, 19, 24, 194, 199], "updat": [11, 12, 13, 14, 21, 25, 27, 34, 43, 44, 45, 46, 47, 76, 79, 89, 112, 113, 127, 132, 134, 137, 142, 143, 144, 157, 161, 162, 167, 168, 180, 181, 191, 193, 194, 198, 200, 201], "everi": [11, 12, 14, 18, 21, 24, 40, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 161, 191, 193, 194, 199], "truncat": [11, 12, 13, 14, 117, 200], "help": [11, 12, 13, 14, 21, 43, 44, 46, 47, 188, 193], "desynchron": [11, 12, 13, 14], "match": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 95, 101, 112, 113, 115, 133, 135, 136, 162, 194, 196, 198, 199, 200, 201], "load_state_dict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 79, 191], "state_dict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 79, 191, 200], "ordereddict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 79], "load": [11, 12, 13, 14, 25, 26, 27, 32, 49, 158, 191, 194], "form": [11, 12, 14, 21, 25, 26, 27, 32, 43, 44, 46, 47, 79, 126, 128, 133, 134, 158, 161], "worker0": [11, 12, 14], "state_dict0": [11, 12, 14], "worker1": [11, 12, 14], "state_dict1": [11, 12, 14], "reset_idx": [11, 12, 14], "static_se": [11, 12, 13, 14, 43, 44, 46, 47, 76], "increment": [11, 12, 13, 14, 43, 44, 46, 47, 133], "last": [11, 12, 13, 14, 21, 43, 45, 63, 90, 100, 101, 105, 194, 200, 201], "env_fn": [11, 12, 13, 14, 183, 184], "v0": [11, 12, 14, 44, 50, 51, 53, 54, 60, 76, 79, 181], "env_fn_parallel": [11, 12, 13, 14], "6": [11, 12, 13, 14, 66, 90, 95, 100, 101, 115, 118, 166, 169, 171, 174, 176, 179, 193, 194, 198, 199, 200, 201], "syncdatacollector": [11, 12, 14, 181, 184, 187], "out_se": [11, 12, 13, 14, 200], "shut": [11, 12, 13, 14], "down": [11, 12, 13, 14], "irrevers": [11, 12, 14], "arg": [12, 18, 21, 31, 37, 38, 43, 44, 45, 46, 47, 52, 69, 76, 77, 78, 85, 86, 90, 97, 101, 109, 154, 161, 185], "kwarg": [12, 13, 14, 18, 21, 31, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 73, 76, 77, 78, 85, 86, 90, 91, 92, 93, 94, 97, 99, 101, 102, 107, 108, 109, 113, 115, 117, 128, 133, 141, 154, 161, 166, 167, 168, 169, 174, 176, 179, 182, 183, 184], "occur": [12, 58, 112, 113, 200], "iter": [12, 13, 20, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 66, 79, 90, 101, 112, 113, 114, 122, 140, 157, 158, 160, 161, 166, 174, 176, 179, 191, 193], "envcreat": [13, 181, 182, 185, 193, 194, 200, 201], "return_in_plac": 13, "return_same_td": 13, "constructor": [13, 75, 166, 169, 171, 174, 176, 179, 182, 185, 198], "stop": [13, 43, 44, 46, 47, 200, 201], "equat": [13, 126, 128, 137], "exce": 13, "batcher": 13, "yield": [13, 21, 43, 44, 46, 47], "cautious": [13, 134], "ad": [13, 21, 25, 26, 27, 28, 31, 32, 33, 34, 43, 44, 46, 47, 76, 103, 104, 128, 133, 134, 158, 193, 200], "whole": [13, 21, 43, 44, 46, 47, 76, 152, 194], "content": [13, 90, 101, 194, 199, 201], "ident": [13, 46, 47, 183, 184, 193, 198, 199], "chunk": 13, "policy_state_dict": 13, "env_state_dict": 13, "singl": [14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 57, 58, 74, 90, 100, 101, 114, 131, 135, 147, 148, 150, 151, 158, 176, 185, 193, 194, 196, 198], "paradigm": 14, "prefer": 14, "mere": 14, "multiasyncdatacollector": [14, 183, 187, 193, 194, 201], "rollout_tensordict": 15, "zero": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 58, 66, 89, 100, 124, 198, 199, 201], "pad": [15, 90, 91, 92, 100, 193, 194], "max": [15, 24, 115, 116, 117, 128, 135, 136, 193], "durat": [15, 194], "int64": [16, 19, 20, 24, 97, 109, 120, 121, 171, 194, 200], "discret": [16, 19, 20, 24, 107, 120, 121, 131], "vector": [16, 24, 46, 47, 91, 93, 101, 144, 150, 151, 187, 193, 194, 196, 198, 200], "assert_is_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "belong": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "rais": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 62, 76, 123, 193], "except": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 62, 107, 123, 193, 194, 199, 200], "otherwis": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 66, 73, 76, 79, 116, 117, 136, 157, 191, 193, 200], "encod": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 97, 106, 107, 109, 110, 120, 121, 126, 198], "val": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 201], "ndarrai": [16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30, 44], "np": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 44, 193], "slice": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 199], "tensor_to_index": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "is_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 200], "back": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 112, 113, 193], "heurist": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 193, 200], "rand": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 45, 89, 200, 201], "uniform": [16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 34], "unbound": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 199], "to_numpi": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "transformed_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 75, 76, 115, 185], "type_check": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "whose": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 193], "point": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 41, 42, 43, 44, 46, 47, 57, 60, 69, 73, 74, 76, 78, 102, 112, 126, 131, 143, 144, 161, 188, 196, 200], "fill": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 73, 199], "minimum": [17, 22, 71, 98, 108, 115, 116, 117, 124, 126, 136, 152, 193, 200, 201], "float": [17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 43, 44, 46, 47, 60, 61, 66, 69, 71, 72, 73, 74, 76, 78, 79, 95, 98, 103, 104, 110, 111, 112, 115, 117, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 159, 193, 194, 200], "unidimension": [17, 24, 30, 199], "upper": [17, 22], "composit": [18, 200], "unnam": 18, "tupl": [18, 21, 25, 32, 43, 44, 46, 47, 55, 66, 91, 100, 101, 129, 170, 172, 175, 178, 199], "effect": [18, 21, 43, 44, 46, 47, 76, 161, 194, 200], "cannot": [18, 199], "pixels_spec": 18, "ndboundedtensorspec": [18, 86, 87, 88, 108, 187, 200, 201], "32": [18, 90, 91, 92, 99, 101, 105, 106, 193, 194, 200, 201], "observation_vector_spec": 18, "33": [18, 21, 43, 44, 46, 47, 90, 101, 194], "composite_spec": 18, "observation_vector": [18, 58, 166, 169, 174, 176, 179, 193], "within": [18, 21, 33, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 201], "randn": [18, 66, 85, 86, 87, 88, 97, 100, 108, 109, 112, 113, 114, 118, 120, 121, 160, 198, 199, 200, 201], "td_project": 18, "modif": [18, 21, 43, 44, 46, 47, 193, 199], "after": [18, 21, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 103, 193, 194, 198, 199, 200], "ob": [18, 61, 66, 74, 118, 193, 196, 200, 201], "yield_nesting_kei": 18, "keysview": 18, "selected_kei": [18, 46, 47, 193], "altern": [19, 126, 194, 199], "onehottensorspec": 19, "categor": [19, 24, 107, 120, 121], "memori": [19, 21, 37, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 112, 185, 191, 193, 201], "larg": 19, "action_valu": [19, 24, 97, 109, 120, 121, 171, 194], "arang": [19, 24, 97, 120, 152], "view": [19, 21, 24, 43, 44, 46, 47, 101, 120, 193, 199, 200, 201], "argmax": [19, 97, 109, 120, 121], "dim": [19, 58, 100, 185, 193, 199], "chosen_action_valu": [19, 24, 109, 171, 194], "outcom": [19, 24, 95, 115], "nvec": 20, "use_regist": [20, 24], "concaten": [20, 57, 58, 75, 101, 114, 193, 194, 199, 200], "hot": [20, 24, 97, 107, 109, 120, 121], "cardin": [20, 120, 121], "element": [20, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 90, 112, 152, 158, 193, 200], "gamma": [21, 127, 128, 129, 130, 131, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 181, 193, 194, 201], "present": [21, 25, 34, 43, 44, 46, 47, 91, 92, 93, 94, 99, 104, 112, 114, 127, 128, 131, 133, 134, 135, 136, 185, 191, 193, 196, 201], "sutton": 21, "r": [21, 66, 113, 126, 141, 200], "1988": 21, "predict": [21, 98, 102, 131, 136, 141], "tempor": [21, 143], "44": [21, 194], "discount": [21, 127, 128, 129, 130, 131, 133, 134, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 193, 194], "factor": [21, 104, 116, 117, 127, 128, 129, 130, 131, 133, 134, 135, 193, 194, 200], "ahead": [21, 200], "add_modul": [21, 43, 44, 46, 47], "add": [21, 25, 26, 27, 28, 31, 32, 33, 41, 42, 43, 44, 46, 47, 103, 127, 156, 158, 193, 194, 199, 201], "child": [21, 43, 44, 46, 47, 199], "current": [21, 43, 44, 46, 47, 52, 76, 81, 98, 100, 111, 120, 121, 166, 174, 191, 193, 200, 201], "fn": [21, 43, 44, 46, 47, 183, 184], "recurs": [21, 43, 44, 46, 47], "submodul": [21, 43, 44, 46, 47], "children": [21, 43, 44, 46, 47], "init": [21, 43, 44, 46, 47, 193, 194], "no_grad": [21, 43, 44, 46, 47, 193, 194], "init_weight": [21, 43, 44, 46, 47], "m": [21, 43, 44, 46, 47, 113, 193, 194], "fill_": [21, 43, 44, 46, 47, 194, 199, 200], "net": [21, 43, 44, 46, 47, 100, 113, 135, 176, 181, 194, 198, 201], "in_featur": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 86, 90, 91, 92, 93, 94, 100, 101, 103, 104, 112, 198, 201], "out_featur": [21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 86, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 104, 112, 193, 194, 198, 201], "bia": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 90, 98, 101, 103, 104, 112, 124, 125, 126, 194, 201], "requires_grad": [21, 43, 44, 46, 47, 193], "bfloat16": [21, 43, 44, 46, 47], "cast": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 112, 166, 169, 171, 174, 176, 179, 199, 200], "datatyp": [21, 43, 44, 46, 47], "direct": [21, 43, 44, 46, 47, 194], "member": [21, 43, 44, 46, 47], "xdoctest": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "skip": [21, 43, 44, 46, 47, 76, 113, 154, 157], "buf": [21, 43, 44, 46, 47], "20l": [21, 43, 44, 46, 47], "1l": [21, 43, 44, 46, 47], "5l": [21, 43, 44, 46, 47], "immedi": [21, 43, 44, 46, 47, 141], "associ": [21, 43, 44, 46, 47, 110, 185, 198], "construct": [21, 43, 44, 46, 47, 111, 113, 161, 166, 174, 198, 200], "optim": [21, 43, 44, 46, 47, 89, 103, 104, 134, 136, 156, 161, 166, 174, 181, 191, 193, 194, 199], "copi": [21, 43, 44, 46, 47, 76, 193, 194, 199], "doubl": [21, 23, 30, 43, 44, 46, 47, 60, 61, 69, 73, 74, 76, 78, 112, 130, 131, 132, 135, 137, 193, 200], "eval": [21, 43, 44, 46, 47, 76, 79, 193, 194], "certain": [21, 43, 44, 46, 47, 76, 133, 193, 194, 199, 200], "particular": [21, 43, 44, 46, 47, 76, 191, 194, 196], "behavior": [21, 43, 44, 46, 47, 76], "affect": [21, 43, 44, 46, 47, 75, 76], "dropout": [21, 43, 44, 46, 47, 76], "batchnorm": [21, 43, 44, 46, 47, 76], "disabl": [21, 43, 44, 46, 47, 76, 116, 117, 193], "gradient": [21, 43, 44, 46, 47, 76, 104, 116, 117, 127, 141, 142, 143, 144, 161, 193, 194], "comparison": [21, 43, 44, 46, 47, 76], "sever": [21, 43, 44, 46, 47, 58, 76, 134, 200], "similar": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 84, 112, 113, 193, 198, 200], "mechan": [21, 43, 44, 46, 47, 76], "confus": [21, 43, 44, 46, 47, 76], "extra_repr": [21, 43, 44, 46, 47], "represent": [21, 43, 44, 46, 47, 69, 78, 193, 194, 200], "string": [21, 43, 44, 46, 47, 113, 126, 160, 166, 174, 176, 179], "forward": [21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 118, 120, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 142, 143, 144, 193, 194, 198, 201], "tennsordict": 21, "dimens": [21, 57, 58, 63, 66, 74, 77, 90, 101, 103, 104, 115, 116, 127, 128, 131, 133, 134, 135, 136, 185, 193, 199], "shift": [21, 124], "nontermin": [21, 193], "non": [21, 25, 27, 43, 44, 46, 47, 56, 60, 69, 73, 76, 78, 112, 193, 200], "termin": [21, 193, 194, 201], "original_reward": [21, 193], "newli": 21, "get_buff": [21, 43, 44, 46, 47], "target": [21, 43, 44, 46, 47, 75, 112, 113, 129, 130, 131, 132, 133, 135, 136, 137, 141, 163, 180, 181, 191, 193, 194], "throw": [21, 43, 44, 46, 47, 200], "docstr": [21, 43, 44, 46, 47], "get_submodul": [21, 43, 44, 46, 47], "explan": [21, 43, 44, 46, 47], "how": [21, 25, 27, 34, 43, 44, 46, 47, 128, 132, 133, 134, 161, 188, 193, 194, 196, 200, 201], "fulli": [21, 43, 44, 46, 47, 194], "qualifi": [21, 43, 44, 46, 47], "referenc": [21, 43, 44, 46, 47], "attributeerror": [21, 43, 44, 46, 47], "invalid": [21, 43, 44, 46, 47], "resolv": [21, 43, 44, 46, 47], "someth": [21, 43, 44, 46, 47, 188, 200], "get_extra_st": [21, 43, 44, 46, 47, 79], "set_extra_st": [21, 43, 44, 46, 47, 79], "pickleabl": [21, 43, 44, 46, 47, 79], "ensur": [21, 25, 27, 34, 43, 44, 46, 47, 69, 79, 122, 193], "pickl": [21, 43, 44, 46, 47, 79], "get_paramet": [21, 43, 44, 46, 47], "sai": [21, 43, 44, 46, 47, 200], "net_b": [21, 43, 44, 46, 47], "net_c": [21, 43, 44, 46, 47], "conv": [21, 43, 44, 46, 47, 90], "conv2d": [21, 43, 44, 46, 47, 90, 201], "16": [21, 43, 44, 46, 47, 194], "kernel_s": [21, 43, 44, 46, 47, 90, 91, 92, 194, 201], "stride": [21, 43, 44, 46, 47, 90, 91, 92, 99, 194, 201], "100": [21, 43, 44, 46, 47, 66, 153, 161, 181, 193, 194, 196, 200, 201], "diagram": [21, 43, 44, 46, 47], "show": [21, 43, 44, 46, 47, 194, 198, 201], "itself": [21, 43, 44, 46, 47], "would": [21, 43, 44, 46, 47, 101, 191, 194, 198, 199, 200], "degre": [21, 43, 44, 46, 47], "named_modul": [21, 43, 44, 46, 47], "o": [21, 43, 44, 46, 47], "transit": [21, 43, 44, 46, 47, 193, 194], "alwai": [21, 43, 44, 46, 47, 65, 194], "half": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 193], "ipu": [21, 43, 44, 46, 47], "strict": [21, 43, 44, 46, 47, 76], "descend": [21, 43, 44, 46, 47, 76], "exactli": [21, 43, 44, 46, 47, 52, 76], "persist": [21, 43, 44, 46, 47, 76], "strictli": [21, 43, 44, 46, 47, 76], "enforc": [21, 43, 44, 46, 47, 76], "missing_kei": [21, 43, 44, 46, 47, 76], "unexpected_kei": [21, 43, 44, 46, 47, 76], "unexpect": [21, 43, 44, 46, 47, 76, 200], "namedtupl": [21, 43, 44, 46, 47, 76], "regist": [21, 24, 43, 44, 46, 47, 60, 69, 75, 76, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 191, 198], "duplic": [21, 43, 44, 46, 47, 130, 131, 199], "l": [21, 43, 44, 46, 47, 141], "idx": [21, 43, 44, 46, 47, 199], "named_buff": [21, 43, 44, 46, 47, 194], "prefix": [21, 43, 44, 46, 47, 76, 200], "prepend": [21, 43, 44, 46, 47], "running_var": [21, 43, 44, 46, 47], "named_children": [21, 43, 44, 46, 47], "conv4": [21, 43, 44, 46, 47], "conv5": [21, 43, 44, 46, 47], "memo": [21, 43, 44, 46, 47], "remove_dupl": [21, 43, 44, 46, 47], "alreadi": [21, 43, 44, 46, 47, 113, 193, 194], "named_paramet": [21, 43, 44, 46, 47, 194], "param": [21, 43, 44, 45, 46, 47, 95, 108, 109, 112, 113, 114, 115, 118, 120, 121, 137, 140, 142, 143, 144, 169, 193, 194, 198, 201], "register_backward_hook": [21, 43, 44, 46, 47], "hook": [21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 106, 109, 110, 111, 120, 121, 124, 154, 155, 157, 159, 161, 162, 187], "removablehandl": [21, 43, 44, 46, 47], "deprec": [21, 43, 44, 46, 47, 76, 200], "favor": [21, 43, 44, 46, 47], "register_full_backward_hook": [21, 43, 44, 46, 47], "futur": [21, 43, 44, 46, 47, 69, 76, 78, 101, 188, 201], "register_buff": [21, 43, 44, 46, 47], "consid": [21, 43, 44, 46, 47, 95, 115, 193, 199], "running_mean": [21, 43, 44, 46, 47], "save": [21, 43, 44, 46, 47, 161, 191, 194], "alongsid": [21, 43, 44, 46, 47], "latter": [21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 183, 184], "num_featur": [21, 43, 44, 46, 47], "register_forward_hook": [21, 43, 44, 46, 47, 120, 121], "signatur": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 123], "posit": [21, 31, 32, 33, 43, 44, 46, 47, 76, 77, 198], "won": [21, 43, 44, 46, 47, 69, 78, 161, 185, 193], "inplac": [21, 43, 44, 46, 47, 193], "register_forward_pre_hook": [21, 43, 44, 46, 47], "invok": [21, 31, 43, 44, 46, 47], "user": [21, 43, 44, 46, 47, 76, 100, 182, 191, 194, 198, 200, 201], "either": [21, 43, 44, 46, 47, 169, 191, 199, 200, 201], "respect": [21, 43, 44, 46, 47, 56, 60, 69, 73, 76, 78, 111, 112, 118, 156], "grad_input": [21, 43, 44, 46, 47], "grad_output": [21, 43, 44, 46, 47], "subsequ": [21, 43, 44, 46, 47], "entri": [21, 43, 44, 46, 47, 198], "technic": [21, 43, 44, 46, 47], "reason": [21, 43, 44, 46, 47, 69, 193, 194], "receiv": [21, 43, 44, 46, 47, 75, 101, 194, 196], "similarli": [21, 43, 44, 46, 47, 114, 193, 198, 200], "caller": [21, 43, 44, 46, 47], "register_load_state_dict_post_hook": [21, 43, 44, 46, 47], "post": [21, 43, 44, 46, 47, 194], "incompatible_kei": [21, 43, 44, 46, 47], "consist": [21, 43, 44, 46, 47, 90, 101, 113, 193, 194, 198, 200], "addit": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 126, 194], "thrown": [21, 43, 44, 46, 47], "clearn": [21, 43, 44, 46, 47], "avoid": [21, 43, 44, 46, 47, 76, 79, 112, 163, 198], "register_modul": [21, 43, 44, 46, 47, 191], "alia": [21, 43, 44, 46, 47], "register_paramet": [21, 43, 44, 46, 47], "requires_grad_": [21, 43, 44, 46, 47, 193], "autograd": [21, 43, 44, 46, 47, 76], "freez": [21, 43, 44, 46, 47], "finetun": [21, 43, 44, 46, 47], "individu": [21, 43, 44, 46, 47], "gan": [21, 43, 44, 46, 47], "share_memori": [21, 43, 44, 46, 47, 193], "share_memory_": [21, 43, 44, 46, 47, 199, 201], "destin": [21, 43, 44, 46, 47, 76, 84], "keep_var": [21, 43, 44, 46, 47, 76], "averag": [21, 43, 44, 46, 47, 76, 79, 159, 193, 198], "shallow": [21, 43, 44, 46, 47, 76], "pleas": [21, 43, 44, 46, 47, 76, 188], "design": [21, 24, 43, 44, 46, 47, 76, 127, 128, 131, 133, 134, 135, 136, 193, 194, 196, 199, 200], "detach": [21, 43, 44, 46, 47, 76, 193, 194], "non_block": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 194], "memory_format": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "channels_last": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "Its": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "complex": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 198], "integr": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 94, 112], "unchang": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "tri": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "convert": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 112, 126, 199], "host": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "pin": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "4d": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "ignore_w": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "1913": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "3420": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "5113": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "2325": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "torch_doctest_cuda1": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "gpu1": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "1914": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "5112": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "2324": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "float16": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "cdoubl": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "3741": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "j": [21, 25, 34, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 191, 194], "2382": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "5593": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "4443": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112, 194], "complex128": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "6122": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "1150": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 112], "to_empti": [21, 43, 44, 46, 47], "dst_type": [21, 43, 44, 46, 47], "xpu": [21, 43, 44, 46, 47], "zero_grad": [21, 43, 44, 46, 47, 191, 193, 194, 199], "set_to_non": [21, 43, 44, 46, 47], "context": [21, 43, 44, 46, 47, 103, 139, 140, 142, 145, 146, 149, 157, 193, 194, 198], "grad": [21, 43, 44, 46, 47, 194], "dimension": [22, 23, 142, 145, 146, 149], "keepdim": 24, "sum": [24, 44, 141, 193, 194, 200], "user_regist": 24, "experiment": [24, 113], "onto": [24, 112, 113], "appear": 24, "priori": 24, "definit": [24, 40], "uniqu": 24, "discretebox": 24, "alpha": [25, 27, 34, 90, 135, 136, 193, 194, 201], "beta": [25, 27, 34, 133, 193, 194, 201], "ep": [25, 27, 34, 79, 128, 137, 159], "1e": [25, 27, 34, 79, 95, 98, 115], "08": [25, 27, 34, 193, 194], "collate_fn": [25, 26, 27, 28, 32, 158, 199, 201], "prefetch": [25, 26, 27, 28, 32, 158, 193, 194], "priorit": [25, 27, 34, 129, 130, 135, 136, 193, 194], "schaul": [25, 34], "quan": [25, 34], "antonogl": [25, 34], "silver": [25, 34], "2015": [25, 34], "arxiv": [25, 34, 57, 69, 91, 92, 93, 94, 98, 99, 104, 105, 106, 110, 111, 120, 127, 131, 132, 134, 136, 137, 142, 145, 146, 149, 166, 169, 174, 179], "ab": [25, 34, 69, 79, 98, 99, 104, 105, 106, 110, 111, 127, 132, 134, 166, 174], "1511": [25, 34, 99], "05952": [25, 34], "expon": [25, 27, 34], "\u03b1": [25, 27, 34], "determin": [25, 27, 34, 69, 78, 194], "delta": [25, 27, 34, 113, 115, 187], "prioriti": [25, 27, 33, 34, 37, 38, 39, 40, 129, 130, 135, 136, 191, 193, 194], "null": [25, 27, 34, 56, 193], "merg": [25, 26, 27, 32, 158], "mini": [25, 26, 27, 32, 158], "style": [25, 26, 27, 32, 158], "rb": [25, 26, 27, 32, 158, 194, 201], "multithread": [25, 26, 27, 32, 158], "instanti": [25, 26, 27, 46, 47, 75, 158, 193, 194, 199, 200], "extend": [25, 26, 27, 28, 31, 32, 33, 41, 42, 158, 191, 193, 194, 201], "gather": [25, 27, 141, 164, 188, 198, 200], "multinomi": [25, 27], "update_prior": [25, 27, 34, 191, 193, 201], "circular": [26, 158, 193], "randomli": [26, 28, 65, 66, 73, 113, 158], "select": [26, 27, 28, 31, 32, 33, 46, 47, 65, 89, 158, 160, 193, 194], "priority_kei": [27, 33, 130, 131, 136, 201], "td_error": [27, 33, 129, 130, 131, 135, 136, 193, 201], "prioritizedreplaybuff": [27, 187, 201], "flaot": 27, "return_weight": 27, "_weight": 27, "replaybuff": [28, 31, 33, 42, 177, 181, 187, 201], "meta": [29, 191], "describ": [29, 58, 75, 115, 116, 166, 174, 200], "what": [29, 43, 44, 46, 47, 73, 188, 194, 198, 200, 201], "replay_buff": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 181, 193, 194], "rb_prototyp": [31, 32, 33], "remot": [31, 46, 47, 200], "invoc": 31, "friendli": [31, 193], "public": 31, "rpc": 31, "append": [31, 32, 33, 84, 193, 194, 199, 201], "insert_transform": [31, 32, 33], "insert": [31, 32, 33, 41, 42, 77, 194], "include_info": [31, 33], "sampler": [31, 32, 33, 34, 35, 37, 38, 39, 40, 187], "writer": [32, 41, 187], "max_siz": [32, 37, 39, 40, 194], "1_000": 32, "randomsampl": [32, 187], "roundrobinwrit": [32, 187], "kw": [33, 41], "max_capac": 34, "uniformli": [35, 200], "scratch_dir": [37, 193], "memmap": [37, 46, 47, 79], "attach": [37, 38, 39, 40, 194], "entiti": [37, 38, 39, 40], "made": [37, 38, 39, 40, 193], "eg": [37, 38, 39, 40], "alloc": 38, "__len__": 40, "roundrobin": 41, "piec": [41, 42], "_inplace_upd": [43, 46, 47, 76], "_batch_lock": [43, 46, 47, 76], "is_don": [43, 45, 201], "run_type_check": [43, 45], "compar": [43, 157, 194, 200], "rand_step": [43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 79, 200, 201], "batch_lock": [43, 44, 46, 47, 76], "environn": [43, 44, 45, 46, 47, 76], "immut": [43, 44, 46, 47, 76, 166, 174], "fake_tensordict": [43, 44, 46, 47], "fake": [43, 44, 46, 47], "overridden": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124], "although": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 191, 193, 194], "recip": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124], "afterward": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124, 200], "former": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124], "silent": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 124], "info": [43, 44, 46, 47, 80, 198], "_step": [43, 44, 46, 47], "privat": [43, 44, 46, 47, 200], "_reset": [43, 44, 45, 46, 47, 89], "overwritten": [43, 44, 46, 47, 84, 193], "callback": [43, 44, 46, 47], "auto_reset": [43, 44, 46, 47, 194], "auto_cast_to_devic": [43, 44, 46, 47], "break_when_any_don": [43, 44, 46, 47], "return_contigu": [43, 44, 46, 47, 196], "soon": [43, 44, 46, 47], "smaller": [43, 44, 46, 47], "automat": [43, 44, 46, 47, 66, 85, 108, 194, 201], "lazystackedtensordict": [43, 44, 45, 46, 47, 194, 196, 199, 200, 201], "concomitt": [43, 44, 46, 47], "eras": [43, 44, 46, 47], "workspac": [43, 44, 46, 47], "carri": [43, 44, 46, 47], "discard": [44, 84, 200], "info_dict_read": 44, "set_info_dict_read": 44, "put": [44, 79, 185, 199], "f": [44, 113, 126, 193, 194, 198, 199, 200], "read_act": 44, "read_don": 44, "reader": [44, 193, 194], "frame_skip": [44, 48, 49, 50, 53, 154, 157, 163, 191, 193, 201], "broken": 44, "read_ob": 44, "dictat": [44, 113], "inner": [44, 113, 191, 193, 200], "read_reward": 44, "total_reward": 44, "step_reward": 44, "far": [44, 116, 117, 200], "baseinfodictread": 44, "info_dict": 44, "hoc": 44, "manner": [44, 69, 193, 196], "dict_read": 44, "gymwrapp": [44, 187, 201], "default_info_dict_read": 44, "my_info_kei": 44, "some_env": 44, "meant": 45, "world": [45, 200], "limit": [45, 46, 47, 199], "safeti": 45, "constraint": 45, "behav": [45, 52, 107], "classic": [45, 198, 199], "directli": [45, 185, 194], "ndunboundedcontinuoustensorspec": [45, 73, 85, 86, 87, 88, 89, 112, 113, 114, 118, 187], "mymbenv": [45, 89], "world_model": [45, 55, 89], "super": [45, 89, 118, 120, 123, 198, 201], "hidden_observ": [45, 89], "mlp": [45, 86, 89, 90, 91, 92, 93, 94, 97, 100, 166, 174, 176, 179, 187, 193, 194, 196, 198, 201], "worldmodelwrapp": [45, 89], "activation_class": [45, 89, 90, 91, 92, 93, 94, 98, 99, 101, 193, 194, 201], "relu": [45, 89, 126], "activate_last_lay": [45, 89, 94, 101], "depth": [45, 89, 90, 91, 92, 93, 94, 97, 98, 99, 101, 105, 106, 194, 196], "equal": [46, 47, 65, 90, 96, 101, 138, 152, 183, 184, 199], "my_env_fun": [46, 47], "custom_attribute_list": [46, 47], "custom_attribut": [46, 47], "custom_method_list": [46, 47], "custom_method": [46, 47], "num_work": [46, 47, 193, 194], "deploi": [46, 47], "creation": [46, 47, 193, 200], "slight": [46, 47, 194], "overhead": [46, 47, 198], "env_input_kei": [46, 47], "permit": [46, 47], "drastic": [46, 47], "decreas": [46, 47], "io": [46, 47], "burden": [46, 47], "_batchedenv": [46, 47], "might": [46, 47, 188, 193, 200], "next_pixel": [46, 47], "next_vector": [46, 47], "amount": [46, 47], "occupi": [46, 47], "excluded_kei": [46, 47], "exclud": [46, 47, 193], "share_individual_td": [46, 47], "lazi": [46, 47, 69, 103, 114, 193, 196, 199, 200], "shared_memori": [46, 47], "policy_proof": [46, 47], "ll": [46, 47, 193, 194, 200], "hidden": [46, 47, 86, 87, 88, 98, 100, 105, 106, 110, 111, 112, 113, 114, 166, 174, 196, 198, 201], "infer": [46, 47, 79, 103, 136, 193, 198, 199], "allow_step_when_don": [46, 47], "encount": [46, 47, 188], "update_kwarg": [46, 47], "dm_control": [48, 49, 193, 196, 200], "env_nam": [48, 50, 53, 193, 200], "task_nam": 48, "cheetah": [48, 49, 193, 200], "suit": [49, 200], "disable_env_check": 50, "categorical_action_encod": 51, "serv": [52, 200], "placehold": [52, 76], "secur": 52, "jumanji": [53, 54], "snake": [53, 54], "6x6": [53, 54], "jumanju": 54, "td0": [54, 194], "td1": 54, "model_bas": [55, 89], "dreamer": [55, 98], "prior_shap": 55, "belief_shap": 55, "obs_decod": 55, "transform_reward_spec": [56, 60, 61, 69, 71, 72, 75, 77, 78], "cat_dim": 57, "success": [57, 75, 201], "account": 57, "movement": 57, "veloc": [57, 200], "propos": [57, 102, 132, 137, 176, 179], "plai": [57, 200], "atari": [57, 200], "pdf": [57, 91, 92, 93, 94, 120, 131, 135, 136, 137, 142, 145, 146, 149, 169, 176, 179], "1312": 57, "5602": 57, "along": [57, 58, 74, 101, 104, 112, 113, 194, 199], "tranform": [57, 60, 69, 73, 75, 78, 80], "transform_observation_spec": [57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 73, 74, 75, 77, 78], "del_kei": [58, 194, 196], "unsqueeze_if_oor": 58, "observation_posit": 58, "observation_veloc": 58, "delet": [58, 199], "unsqueez": [58, 74, 77, 100, 199], "key1": [58, 152, 160], "key2": [58, 152, 160], "_": [58, 61, 66, 74, 79, 112, 126, 193, 194, 198, 201], "w": [59, 70, 74], "crop": 59, "center": 59, "width": [59, 70, 194], "height": [59, 70, 194], "squar": [59, 116, 117], "rewardsc": [60, 76, 187, 193], "rewardclip": [60, 187], "transformed_env": [60, 75, 76], "dest": [60, 69, 78, 112], "transform_input_spec": [60, 61, 69, 75, 77, 78], "finit": [62, 193], "first_dim": 63, "last_dim": 63, "flatten": [63, 193, 194], "adjac": 63, "turn": [64, 157, 194], "noop": [65, 201], "30": [65, 110, 111, 194, 197, 201], "op": [65, 162], "noop_max": 65, "loc": [66, 72, 86, 87, 88, 108, 113, 114, 116, 117, 164, 166, 174, 176, 179, 185, 193, 194, 198, 201], "standard_norm": [66, 72, 193, 194], "affin": [66, 72], "layer": [66, 79, 90, 91, 92, 98, 101, 103, 104, 105, 106, 119, 193, 194, 198], "set_default_tensor_typ": 66, "doubletensor": 66, "std": [66, 79, 193, 194, 200], "isclos": 66, "next_ob": [66, 193, 201], "normalis": 66, "stat": [66, 164, 185, 193], "rubric": [66, 114], "manual_se": [66, 193, 200, 201], "init_stat": 66, "3752e": 66, "01": [66, 124, 127, 128, 133, 134, 193, 194, 197], "5087e": 66, "03": [66, 193, 194, 197], "9294e": 66, "9636": 66, "5608": 66, "6408": 66, "num_it": 66, "reduce_dim": 66, "constant": [66, 191, 193, 194, 200], "ideal": [66, 193], "statist": [66, 79, 185, 193, 200], "approach": [66, 200], "gaussian": [66, 89, 103, 104], "empir": [66, 89, 113], "deviat": [66, 79, 89, 98, 103, 104, 134, 193, 194], "summari": [66, 79], "r3m": 69, "resnet": [69, 78], "visual": [69, 78], "embed": [69, 78, 86, 87, 88, 112, 198], "ego4d": [69, 78], "paper": [69, 78, 132, 176, 179, 193], "univers": [69, 78], "manipul": [69, 200], "suraj": 69, "nair": 69, "aravind": 69, "rajeswaran": 69, "vikash": [69, 78], "kumar": [69, 78], "chelsea": 69, "finn": 69, "abhinav": 69, "gupta": 69, "2203": 69, "12601": 69, "_init": 69, "snippet": [69, 193], "resenet50": 69, "model_nam": [69, 78], "resnet50": [69, 78], "resnet34": 69, "resnet18": 69, "left": [69, 78, 194], "empti": [69, 76, 78, 193], "r3m_vec": 69, "feed": [69, 78], "244": [69, 78], "hub": [69, 78], "cach": [69, 76, 78, 153], "download_path": [69, 78], "tensor_pixels_kei": [69, 78], "interpol": [70, 194], "bilinear": 70, "clamp_min": 71, "clamp_max": 71, "clip": [71, 128, 161], "clip_min": 71, "scalar": [71, 92, 94, 103, 104, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "clip_max": 71, "default_valu": 73, "primer": 73, "popul": 73, "drawn": [73, 113], "rel": [73, 95, 115], "fix": [73, 136, 200], "chosen": [73, 166, 174, 176, 179], "mykei": 73, "dtype_or_devic": 73, "255": [74, 200], "precis": [74, 193], "ri": 74, "randint": [74, 193], "out_keys_inv": 75, "principl": 75, "combin": [75, 199], "cattransform": 75, "notabl": 75, "cache_spec": 76, "valid": [76, 90, 101, 133, 191, 200], "anymor": [76, 112, 193], "unsqueeze_dim": 77, "vip": 78, "toward": 78, "implicit": 78, "jason": 78, "ma": 78, "shagun": 78, "sodhani": 78, "dinesh": 78, "jayaraman": 78, "osbert": 78, "bastani": 78, "ami": 78, "zhang": 78, "vip_vec": 78, "shared_td": 79, "lock": 79, "decai": [79, 135, 159, 193, 194, 200], "9999": [79, 200], "0001": [79, 98, 159], "fly": [79, 133, 200], "substitut": 79, "to_observation_norm": 79, "rate": [79, 141, 193, 194], "99": [79, 127, 128, 133, 134, 135, 136, 141, 181, 193, 194, 201], "numer": [79, 112, 113, 116, 117, 199, 200], "underflow": 79, "1000": [79, 113, 132, 181, 193, 194], "static": 79, "build_td_for_shared_vecnorm": 79, "across": [79, 162, 199], "memmori": 79, "memmap_": [79, 199], "multiprocess": [79, 200], "mp": 79, "queue": 79, "td_share": 79, "v": [79, 100, 136, 194, 198, 201], "observationnorm": [79, 185, 187, 193, 194, 201], "state_dim": [80, 110, 111], "action_dim": [80, 91, 93, 196], "gsde": [80, 135, 185], "nois": [80, 104, 119, 135, 157, 185, 193], "func": [80, 198], "explor": [80, 104, 112, 113, 127, 157, 167, 168, 181, 187, 193, 194], "gsdemodul": 80, "probabilistictdmodul": [83, 101, 113, 136, 141, 157], "next_tensordict": [84, 193], "keep_oth": 84, "exclude_reward": 84, "exclude_don": 84, "exclude_act": 84, "_run_check": 84, "reflect": [84, 163], "renam": [84, 193], "next_": 84, "funtion": 84, "td_out": [84, 152, 160], "make_polici": 84, "next_td": 84, "next_observ": [84, 100, 196], "translat": [85, 108], "td_modul": [85, 86, 87, 88, 108, 112, 113, 114, 118, 198, 201], "actor": [86, 87, 88, 89, 91, 93, 97, 98, 108, 109, 120, 121, 127, 128, 129, 133, 134, 135, 136, 166, 169, 171, 174, 176, 179, 187, 193, 194, 201], "critic": [86, 127, 128, 133, 134, 136, 198], "get_policy_oper": [86, 87, 88, 166, 174, 198], "alon": [86, 87, 88], "tdmodul": [86, 87, 88, 113, 181], "get_critic_oper": [86, 198], "common_oper": [86, 88], "produc": [86, 88, 90, 101, 107, 113, 200], "policy_oper": [86, 87, 88], "value_oper": [86, 87, 88], "probabilisticactor": [86, 87, 88, 136, 187, 193], "valueoper": [86, 87, 88, 127, 128, 133, 134, 181, 187, 193, 198], "tanhnorm": [86, 87, 88, 108, 113, 114, 187, 198, 201], "normalparamwrapp": [86, 87, 88, 108, 113, 114, 198, 201], "spec_hidden": [86, 88], "module_hidden": [86, 88, 198], "td_module_hidden": [86, 88, 198], "spec_act": [86, 88], "8": [86, 87, 88, 90, 91, 92, 99, 101, 108, 112, 113, 114, 194, 198, 200, 201], "module_act": [86, 88, 198], "td_module_act": [86, 87, 88, 198], "dist_in_kei": [86, 87, 88, 108, 113, 114, 193, 198, 201], "sample_out_kei": [86, 88, 108, 113, 114, 198, 201], "distribution_class": [86, 87, 88, 108, 113, 114, 193, 198, 201], "return_log_prob": [86, 87, 88, 113, 114, 198, 201], "module_valu": [86, 87, 88, 198], "num_cel": [86, 90, 91, 92, 93, 94, 98, 99, 101, 193, 194, 198, 201], "td_module_valu": [86, 87, 88, 198], "state_action_valu": [86, 118, 141, 169, 176, 179, 181, 193, 198, 201], "td_clone": [86, 87, 88, 198], "clone": [86, 87, 88, 112, 166, 174, 176, 179, 193, 194, 198, 199, 201], "sample_log_prob": [86, 87, 88, 113, 114, 166, 174, 176, 198, 201], "tensordictmodulewrapp": [86, 167, 168, 181], "estim": [86, 87, 88, 127, 128, 133, 134, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 193, 194], "get_value_oper": [86, 87, 88, 166, 174], "action_modul": 87, "state_valu": [87, 88, 118, 143, 144, 145, 146, 147, 149, 150, 166, 174, 179, 193], "safesequenti": [87, 88, 187], "planning_horizon": 89, "optim_step": [89, 199], "num_candid": 89, "num_top_k_candid": 89, "reward_kei": 89, "action_kei": [89, 102], "cross": 89, "entropi": [89, 127, 128, 133, 134, 135, 136], "botev": 89, "et": [89, 198], "al": [89, 171, 198, 200], "2013": 89, "cem": 89, "plan": [89, 102], "unit": [89, 98, 105, 106, 110, 111], "varianc": [89, 116, 117], "cumul": 89, "rank": 89, "top": 89, "k": [89, 194, 198, 199], "episod": [89, 145, 146, 147, 148, 149, 150, 151, 194], "repeat": 89, "maximis": [89, 91, 93, 193], "horizon": 89, "modelbasedenv": 89, "mpc": [89, 102], "planner": [89, 187], "candid": 89, "modelbasedenvbas": [89, 102, 187], "next_hidden_observ": 89, "5": [89, 90, 97, 98, 100, 101, 109, 116, 117, 120, 121, 133, 193, 194, 199, 200, 201], "elu": [90, 91, 92, 93, 94, 98, 99, 194, 201], "activation_kwarg": [90, 101], "norm_class": [90, 91, 92, 101], "norm_kwarg": [90, 101], "bias_last_lay": [90, 91, 92, 93, 94, 99, 101], "aggregator_class": [90, 91, 92, 194, 201], "squashdim": [90, 91, 201], "aggregator_kwarg": [90, 91, 92, 194], "squeeze_output": [90, 91, 92, 194], "convolut": [90, 91, 92], "neural": [90, 112, 194, 198, 200], "len": [90, 101, 193, 194, 199, 201], "cell": [90, 101, 193], "kernel": [90, 99, 100], "tanh": [90, 101, 115, 116, 117, 193, 201], "aggreg": [90, 91, 92, 114, 199], "squeez": [90, 193, 194, 199], "singleton": [90, 101], "device_typ": [90, 91, 92, 93, 94, 99, 101, 103, 104], "cnet": 90, "34": [90, 101, 194], "35": [90, 101], "possibli": [90, 112, 113, 161, 193, 200], "rectangular": 90, "conv_net_kwarg": [91, 92], "mlp_net_kwarg": [91, 92, 93], "use_avg_pool": [91, 92], "WITH": [91, 92, 93, 94, 137, 169], "1509": [91, 92, 93, 94, 132, 137, 169], "02971": [91, 92, 93, 94, 137, 169], "convnet": [91, 187, 201], "ndims_in": 91, "avgpool": [91, 92], "128": [92, 193, 194], "adaptiveavgpool2d": [92, 194], "400": [93, 94, 194], "300": [93, 94, 166, 174], "mlp_net_kwargs_net1": 94, "mlp_net_kwargs_net2": 94, "atol": [95, 115], "06": [95, 115, 193, 194], "rtol": [95, 115], "batch_shap": [95, 115], "event_shap": [95, 115], "absolut": [95, 115], "toler": [95, 115], "log_prob": [95, 107, 117], "log": [95, 107, 113, 117, 127, 128, 131, 133, 134, 135, 136, 154, 155, 157, 161, 181, 191, 194, 198, 201], "probabl": [95, 107, 113, 117, 194, 198, 201], "densiti": [95, 107, 117], "mass": [95, 107, 117], "rsampl": [95, 107, 113], "sample_shap": [95, 107], "reparameter": [95, 107], "dqnet": 96, "atom": 96, "action_spac": [97, 109, 120, 121], "one_hot": [97, 109, 120, 121], "onehotdiscretetensorspec": [97, 109, 120, 121, 187], "nbin": [97, 120], "qvalue_actor": [97, 109, 120, 121], "std_bia": 98, "std_min_val": 98, "stochast": [98, 104, 105, 111, 135, 136], "belief": [98, 105, 110, 111], "1912": 98, "016034": 98, "softplu": [98, 124, 125, 126], "out_features_valu": 99, "cnn_kwarg": [99, 194], "mlp_kwarg": [99, 100, 194], "duel": [99, 194], "cnn": [99, 194, 201], "06581": 99, "512": 99, "lstm_kwarg": 100, "embedd": 100, "lstm": 100, "time_step": 100, "2d": 100, "hidden_s": 100, "input_s": 100, "hidden0_in": 100, "hidden1_in": 100, "hidden0_out": 100, "hidden1_out": 100, "single_bias_last_lay": 101, "layer_class": 101, "layer_kwarg": 101, "perceptron": 101, "seamless": 101, "though": 101, "reshap": [101, 199], "lazylinear": [101, 201], "42": [101, 161, 194], "noisylinear": [101, 103, 187, 194], "noisylazylinear": [101, 187], "At": [102, 196], "mpcplanner": 102, "tensordict_out": [102, 198, 200], "std_init": [103, 104], "noisi": [103, 104, 119], "term": [103, 104, 126, 127, 162, 194], "matrix": [103, 104], "ax": [103, 104], "initialize_paramet": 103, "isol": 103, "1706": 104, "10295v3": 104, "induc": 104, "aid": 104, "descent": 104, "remain": 104, "emploi": 104, "decod": [105, 198], "1803": [105, 106], "10122": [105, 106], "rnn_hidden": 105, "latent": 106, "logit": 107, "prob": 107, "One": [107, 112, 138, 193, 198, 199, 200], "excacli": 107, "probabilist": [108, 198, 201], "functional_modul": [108, 109, 112, 113, 114, 118, 120, 121], "make_funct": [108, 109, 112, 113, 114, 118, 120, 121, 122, 194, 198, 201], "tensordict_modul": [108, 109, 113, 114, 120, 121, 122, 123, 197, 198], "hidden_dim": [110, 111], "scale_lb": [110, 111], "posterior": 110, "rssm": [110, 111], "1811": [110, 111], "04551": [110, 111], "obs_embed": 110, "rnn_hidden_dim": 111, "prior": 111, "dream": 111, "recurr": 111, "functionalmodul": [112, 113, 122], "functionalmodulewithbuff": [112, 113, 122], "obj": [112, 113], "character": 112, "overflow": [112, 113], "grucel": [112, 113, 198], "td_fmodul": 112, "td_function": 112, "td_state": 112, "vmap": [112, 113, 114, 194, 198, 201], "expand": [112, 113, 114, 198, 201], "isn": 112, "ensembl": [112, 135], "params_repeat": 112, "td_vmap": [112, 113, 114], "irrespect": 112, "random_sampl": 112, "tensor_spec": 113, "default_interaction_mod": [113, 198], "distribution_kwarg": [113, 193], "cache_dist": 113, "n_empirical_estim": 113, "probabilistictensordictmodul": [113, 201], "get_dist": [113, 198], "__call__": [113, 191, 198], "real": 113, "median": 113, "fist": 113, "set_exploration_mod": [113, 157, 187, 193, 194, 201], "_log_prob": 113, "diverg": [113, 133], "ppo": [113, 128, 133, 134, 166, 173, 174, 187], "again": [113, 200], "expend": 113, "partial_toler": [114, 196], "tensordictsequenci": 114, "who": 114, "AND": 114, "scan": 114, "sub": [114, 152, 161, 196, 200, 201], "tensordictsequ": 114, "safeprobabilisticmodul": [114, 127, 128, 133, 134, 167, 168, 187], "spec1": 114, "net1": 114, "module1": 114, "td_module1": 114, "spec2": 114, "module2": 114, "td_module2": 114, "min": [115, 116, 117, 128, 135, 136, 193, 194], "event_dim": [115, 116], "upscal": [116, 117], "tanh_loc": [116, 117], "prevent": [116, 117, 133, 134, 193], "tanhtransform": 116, "ultim": [116, 117], "unstabl": [116, 117], "poor": [116, 117], "explos": [116, 117], "practic": [116, 117, 126, 188, 194, 200], "switch": [116, 117], "sigma": [116, 117], "formula": [116, 117, 128, 133, 134], "custommodul": [118, 123], "cat": [118, 193, 199, 201], "var_num": [120, 121], "regard": [120, 127, 131, 134, 199], "perspect": [120, 131], "1707": [120, 131, 134, 166, 174], "06887": [120, 131], "mult_one_hot": [120, 121], "customdistributionalqv": 120, "log_softmax": 120, "greedi": [121, 194], "_src": 122, "wrapper_typ": 122, "mislead": 123, "other_kei": 123, "typeerror": 123, "min_val": [124, 126], "bias": [124, 193], "_bia": 124, "invert": 125, "surject": 126, "exp": 126, "expln": 126, "biased_softplu": [126, 187], "beggin": 126, "biased_softplus_": 126, "syntax": [126, 193], "condit": 126, "met": 126, "advantage_kei": [127, 128, 133, 134], "advantage_diff_kei": [127, 134], "value_error": [127, 134, 142, 143, 144], "entropy_bonu": [127, 128, 133, 134], "samples_mc_entropi": [127, 128, 133, 134], "entropy_coef": [127, 128, 133, 134], "critic_coef": [127, 128, 133, 134], "loss_critic_typ": [127, 128, 133, 134], "smooth_l1": [127, 128, 129, 130, 133, 134, 135, 136, 138], "advantage_modul": [127, 134], "a2c": [127, 165, 187], "loss": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 156, 161, 165, 170, 172, 173, 175, 176, 178, 181, 191, 193, 194, 199, 201], "reli": [127, 193, 200], "1602": 127, "01783v2": 127, "advantage_diff": 127, "loss_function_typ": 127, "discrep": [127, 128, 129, 130, 133, 134], "l1": [127, 128, 129, 130, 133, 134, 135, 138, 194], "l2": [127, 128, 129, 130, 133, 134, 135, 138], "tha": 127, "throughout": [127, 128, 131, 133, 134, 135, 136, 200], "essenti": [127, 128, 131, 133, 134, 135, 136, 193, 199], "backpropag": [127, 128, 131, 133, 134, 135, 136], "clip_epsilon": 128, "threshold": 128, "bonu": [128, 133, 134], "favour": [128, 133, 134], "exploratori": [128, 133, 134], "mont": [128, 133, 134], "carlo": [128, 133, 134], "multipli": [128, 133, 134, 135, 136, 193], "loss_funct": [128, 129, 130, 134, 135, 136, 138], "actor_network": [129, 135, 136], "value_network": [129, 130, 131, 136, 142, 143, 144], "delay_actor": [129, 136], "delay_valu": [129, 130, 131, 136], "input_tensordict": [129, 130, 131], "assign": [129, 130, 193, 198], "qvalueactor": [130, 187, 194], "distributionalqvalueactor": [131, 187], "unlik": [131, 134, 198, 199, 201], "disctount": 131, "loss_modul": [132, 137, 161, 180, 181, 191, 199], "dqnloss": [132, 137, 172, 187], "ddpgloss": [132, 137, 170, 181, 187, 201], "sacloss": [132, 137, 178, 187], "value_network_update_interv": 132, "contrast": 132, "soft": [132, 136, 137], "06461": 132, "dtarg": 133, "decrement": 133, "samples_mc_kl": 133, "kl": 133, "penalti": 133, "old_polici": 133, "new_polici": 133, "adapt": 133, "old": [133, 200], "thu": 133, "distanc": [133, 138, 141], "apart": 133, "proxim": [134, 166, 174], "optimis": [134, 157], "flavour": [134, 193, 201], "constrain": 134, "clipppoloss": [134, 187], "klpenppoloss": [134, 187], "regularis": 134, "06347": [134, 166, 174], "qvalue_network": [135, 136], "num_qvalue_net": [135, 136], "sub_sample_len": 135, "priotity_kei": [135, 136], "alpha_init": [135, 136], "min_alpha": [135, 136], "max_alpha": [135, 136], "fixed_alpha": [135, 136], "target_entropi": [135, 136], "auto": [135, 136], "delay_qvalu": [135, 136], "redq": [135, 175, 176, 187], "openreview": [135, 176], "ay8zfzm0tdd": [135, 176], "idea": [135, 191, 194, 199], "sac": [135, 136, 178, 179, 187], "subsampl": [135, 152, 191], "know": [135, 157, 193, 194], "1801": [136, 179], "01290": [136, 179], "qvalue_network_bi": 136, "prod": 136, "n_action": 136, "redqloss": [137, 187], "999": [137, 159, 194], "epsilon": [137, 194], "prev_param": 137, "new_param": 137, "v2": [138, 147, 148, 150, 151, 166, 169, 174, 176, 179], "strict_shap": 138, "view_a": 138, "manag": [139, 140, 157, 193, 198], "hold": [139, 140], "next_val_kei": 141, "pred_next_v": 141, "usus": 141, "mse": [141, 194], "q_valu": 141, "target_valu": [141, 201], "n_steps_to_next": 141, "value_next_st": 141, "lmbda": [142, 144, 145, 147, 148, 149, 150, 151, 193, 194], "average_reward": [142, 143, 144], "gradient_mod": [142, 143, 144], "1506": [142, 145, 146, 149], "02438": [142, 145, 146, 149], "exponenti": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159], "propag": [142, 143, 144], "throught": [142, 143, 144], "unused_arg": [142, 143, 144], "target_param": [142, 143, 144], "value_kei": [143, 144], "gae": [143, 144, 187], "next_state_valu": [145, 146, 147, 148, 149, 150, 151, 187], "old_stat": [145, 146, 147, 149, 150], "timestep": [145, 146, 147, 148, 149, 150, 151, 194], "new_stat": [145, 146, 147, 148, 149, 150, 151], "flag": [145, 146, 147, 148, 149, 150, 151], "rolling_gamma": [147, 148, 150, 151], "ti": [147, 148, 150, 151], "event": [147, 148, 150, 151], "g1": [147, 148, 150, 151], "g2": [147, 148, 150, 151], "g3": [147, 148, 150, 151], "g4": [147, 148, 150, 151], "v3": [147, 148, 150, 151], "v4": [147, 148, 150, 151, 193], "upcom": [147, 148, 150, 151, 193], "sub_traj_len": 152, "min_sub_traj_len": 152, "full": [152, 193, 194, 196, 198, 199, 200, 201], "20": [152, 193, 194, 200, 201], "register_op": [152, 153, 154, 155, 156, 159, 160, 162, 191], "process_optim_batch": [152, 159, 191], "_process_optim_batch_hook": [152, 191], "interv": [153, 162, 194], "clear": 153, "clear_cuda": 153, "pre_optim_step": [153, 191], "counter": [154, 191], "log_pbar": [154, 155, 157, 159, 191], "progress": [154, 155, 157, 161, 191, 200], "bar": [154, 155, 157, 161, 191], "count_fram": 154, "pre_steps_log": [154, 155, 191], "lognam": 155, "r_train": 155, "logger": [155, 157, 161, 181, 185, 191], "log_reward": 155, "loss_compon": 156, "appl": 156, "omit": [156, 194], "loss_": 156, "optimizer_hook": 156, "loss_actor": [156, 201], "record_interv": [157, 193], "record_fram": [157, 163, 193], "policy_explor": [157, 181, 193], "log_kei": 157, "suffix": 157, "underestim": 157, "final": [157, 193, 194, 200], "suppos": [157, 191, 198, 199, 200], "reward_evalu": 157, "video": [157, 185, 194], "reward_norm": 159, "batch_process": [159, 160, 191], "update_reward_stat": 159, "normalize_reward": 159, "make_train": [160, 187], "second": [160, 193, 194, 196, 198, 199, 200, 201], "_process_batch_hook": [160, 191], "versatil": 161, "lossmodul": [161, 180, 181], "optim_steps_per_batch": [161, 191, 193], "epoch": 161, "clip_grad_norm": 161, "norm": [161, 194], "partial": 161, "deriv": 161, "clamp": 161, "clip_norm": 161, "progress_bar": 161, "tqdm": [161, 193, 194], "save_trainer_interv": 161, "disk": [161, 191, 194], "10000": [161, 194], "save_trainer_fil": [161, 191], "_datacollector": [162, 167, 168, 181], "update_weights_interv": 162, "whenev": 162, "sit": [162, 194], "sync": [162, 181, 191, 193, 201], "update_weight": 162, "post_step": [162, 191], "helper": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 193, 201], "cfg": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185], "dictconfig": [163, 164, 166, 167, 168, 169, 171, 174, 176, 177, 179, 180, 181, 182, 185], "correct": [163, 194], "divid": 163, "unknowingli": 163, "1m": 163, "annealing_fram": [163, 193], "init_env_step": [163, 164, 193], "proof_environ": [164, 166, 169, 171, 174, 176, 179, 193], "sta": 164, "ot": 164, "a2closs": [165, 187], "in_keys_actor": [166, 174], "observation_kei": [166, 174, 176, 179], "actorvalueoper": [166, 174, 187, 198], "dummi": [166, 169, 171, 174, 176, 179, 200], "join": [166, 174], "actorcriticoper": [166, 174, 187], "parser_env_arg": [166, 174, 176], "make_ppo_model": [166, 187], "parser_model_args_continu": [166, 174, 176, 179], "cattensor": [166, 169, 174, 176, 179, 187, 193, 194, 196, 200], "hydra": [166, 169, 171, 174, 176, 179], "config_stor": [166, 169, 171, 174, 176, 179], "configstor": [166, 169, 171, 174, 176, 179], "dataclass": [166, 169, 171, 174, 176, 179], "halfcheetah": [166, 169, 174, 176, 179, 193], "config_field": [166, 169, 171, 174, 176, 179], "config_cl": [166, 169, 171, 174, 176, 179], "ppomodelconfig": [166, 174], "envconfig": [166, 169, 171, 174, 176, 179], "make_dataclass": [166, 169, 171, 174, 176, 179], "cls_name": [166, 169, 171, 174, 176, 179], "config_path": [166, 169, 171, 174, 176, 179], "config_nam": [166, 169, 171, 174, 176, 179], "actor_valu": [166, 174], "17": [166, 169, 174, 176, 179, 193, 194], "actor_model_explor": [167, 168, 193], "make_env_kwarg": [167, 168], "creator": [167, 168, 183, 184, 185], "actor_net_kwarg": [169, 176, 179], "value_net_kwarg": [169, 179], "modulelist": [169, 176, 179, 201], "ddpgcnnactor": [169, 187], "ddpgmlpactor": [169, 187], "ddpgcnnqnet": [169, 187], "ddpgmlpqnet": [169, 187], "ddpgmodelconfig": 169, "targetnetupdat": [170, 172, 175, 178, 180, 181], "discretemodelconfig": 171, "pong": [171, 200], "v5": [171, 200], "pixels_onli": [171, 193, 194, 200, 201], "210": [171, 200], "160": [171, 194, 200], "ppoloss": [173, 187], "redqloss_deprec": 175, "qvalue_net_kwarg": [176, 179], "qvalu": [176, 179, 193, 194], "redqmodelconfig": 176, "replayargsconfig": 177, "sacmodelconfig": 179, "target_net_updat": 181, "constitu": 181, "learnt": [181, 194], "tempfil": 181, "tensorboardlogg": 181, "tensordictreplaybuff": [181, 187, 193, 194], "egreedywrapp": [181, 194], "env_proof": 181, "obs_spec": 181, "net_valu": 181, "dir": [181, 191], "gettempdir": 181, "exp_nam": [181, 193], "argpars": [182, 185], "namespac": [182, 185], "parser": [182, 185], "transformed_env_constructor": [182, 187], "env_kwarg": [183, 184, 193], "num_env_per_collector": [183, 184], "num_collector": [183, 184], "less": [183, 184, 193, 194, 201], "multisyncdatacollector": [184, 187, 201], "video_tag": 185, "norm_obs_onli": 185, "use_env_cr": 185, "custom_env_mak": 185, "custom_env": 185, "return_transformed_env": 185, "action_dim_gsd": 185, "state_dim_gsd": 185, "batch_dim": [185, 199], "wheter": 185, "maker": [185, 193], "overrid": 185, "exclus": 185, "my": [186, 195], "asyncdatacollector": 187, "tensordictprioritizedreplaybuff": [187, 193, 201], "remotetensordictreplaybuff": 187, "prioritizedsampl": 187, "boundedtensorspec": 187, "unboundedcontinuoustensorspec": [187, 200], "binarydiscretetensorspec": 187, "multonehotdiscretetensorspec": 187, "discretetensorspec": 187, "multistep": [187, 193, 194], "gymlikeenv": 187, "centercrop": 187, "grayscal": [187, 194, 200], "flattenobserv": 187, "unsqueezetransform": 187, "observationtransform": 187, "catfram": [187, 194], "finitetensordictcheck": 187, "noopresetenv": [187, 200, 201], "binarizereward": 187, "pinmemorytransform": 187, "gsdenois": 187, "tensordictprim": 187, "r3mtransform": 187, "viptransform": 187, "step_mdp": [187, 193, 194, 200, 201], "get_available_librari": 187, "dreamerenv": 187, "dmcontrolenv": [187, 193, 196, 200], "dmcontrolwrapp": 187, "jumanjienv": 187, "jumanjiwrapp": 187, "actorcriticwrapp": [187, 198], "is_tensordict_compat": 187, "ensure_tensordict_compat": 187, "qvaluehook": 187, "distributionalqvaluehook": 187, "duelingcnndqnet": [187, 194], "distributionaldqnnet": 187, "lstmnet": 187, "dreameractor": 187, "obsencod": 187, "obsdecod": 187, "rssmprior": 187, "rssmposterior": 187, "reset_nois": 187, "cemplann": 187, "mpcplannerbas": 187, "truncatednorm": 187, "tanhdelta": [187, 193], "onehotcategor": 187, "inv_softplu": 187, "distributionaldqnloss": [187, 194], "tdlambdaestim": 187, "tdestim": 187, "generalized_advantage_estim": 187, "vec_generalized_advantage_estim": 187, "vec_td_lambda_return_estim": 187, "vec_td_lambda_advantage_estim": [187, 193, 194], "td_lambda_return_estim": 187, "td_lambda_advantage_estim": 187, "td_advantage_estim": 187, "distance_loss": 187, "hold_out_net": [187, 193], "hold_out_param": 187, "softupd": [187, 193], "hardupd": [187, 193], "checkpoint": 187, "batchsubsampl": [187, 191], "countframeslog": 187, "logreward": [187, 191], "optimizerhook": 187, "rewardnorm": 187, "selectkei": [187, 191], "updateweight": [187, 191], "clearcudacach": 187, "builder": [187, 194, 200], "sync_sync_collector": 187, "sync_async_collector": 187, "make_collector_offpolici": 187, "make_collector_onpolici": 187, "parallel_env_constructor": [187, 193], "make_sac_loss": 187, "make_a2c_loss": 187, "make_dqn_loss": 187, "make_ddpg_loss": 187, "make_target_updat": 187, "make_ppo_loss": 187, "make_redq_loss": 187, "make_dqn_actor": 187, "make_ddpg_actor": [187, 193], "make_a2c_model": 187, "make_sac_model": 187, "make_redq_model": 187, "make_replay_buff": [187, 193], "correct_for_frame_skip": 187, "get_stats_random_rollout": [187, 193], "implement_for": 187, "journei": 188, "guid": [188, 193, 194], "textbook": 188, "highlight": 188, "readi": [188, 196], "ever": 188, "cover": [188, 201], "bump": 188, "think": [188, 200], "commun": [188, 200], "benefit": 188, "submit": [188, 201], "pr": 188, "outer": [191, 193, 200], "believ": 191, "scheme": [191, 200], "substenti": 191, "sketch": 191, "_pre_steps_log_hook": 191, "_pre_optim_hook": 191, "sub_batch": 191, "_post_loss_hook": 191, "post_loss": 191, "_post_optim_hook": 191, "post_optim": 191, "_post_optim_log": 191, "post_optim_log": 191, "_post_steps_hook": 191, "_post_steps_log_hook": 191, "post_steps_log": 191, "comment": [191, 201], "categori": 191, "strategi": [191, 193], "extens": 191, "replaybuffertrain": 191, "reserv": 191, "trainerhookbas": 191, "three": [191, 194], "logginghook": 191, "logging_hook": 191, "save_dict": 191, "some_valu": 191, "els": [191, 193, 194], "torchsnapshot": 191, "ckpt_backend": 191, "py": [191, 193, 194, 196, 197, 198, 199, 200, 201], "wherea": [191, 193, 198], "pt": [191, 194], "filepath": 191, "select_kei": 191, "save_train": 191, "load_from_fil": 191, "perfectli": 191, "intern": 192, "click": [193, 194, 196, 198, 199, 200, 201], "tutori": [193, 194, 196, 197, 198, 200], "scratch": [193, 194], "familiar": [193, 194, 200], "suffici": [193, 194], "transpar": [193, 194], "understood": [193, 194], "understand": [193, 194], "sota": [193, 194, 201], "rather": [193, 194], "illustr": [193, 194], "deepcopi": 193, "matplotlib": [193, 194, 200], "pyplot": [193, 194, 200], "plt": [193, 194, 200], "ornsteinuhlenbeckprocesswrapp": 193, "wish": 193, "env_librari": 193, "env_task": 193, "env_arg": 193, "elif": [193, 194], "notimplementederror": 193, "rescal": 193, "leav": 193, "make_transformed_env": 193, "reward_sc": 193, "double_to_float_list": 193, "double_to_float_inv_list": 193, "dmcontrol": 193, "downstream": 193, "_stat": 193, "choos": 193, "leverag": [193, 200], "adopt": [193, 200], "env_per_collector": 193, "env_creat": 193, "parallel_env": [193, 200, 201], "td_stat": 193, "_td_stat": 193, "numel": 193, "_td_stats_select": 193, "to_tensordict": [193, 194, 199], "got": [193, 199], "isfinit": 193, "sd": 193, "get_env_stat": 193, "proof_env": 193, "env_spec": 193, "actor_net": 193, "num_lay": 193, "actor_modul": [193, 201], "q_net": 193, "qnet": 193, "frequenc": 193, "make_record": 193, "recorder_obj": 193, "higher": [193, 194, 200], "likelihood": 193, "special": [193, 198, 200], "arrai": 193, "prb": 193, "buffer_s": [193, 194], "buffer_scratch_dir": 193, "adjust": 193, "device_count": [193, 194, 200], "1000000": 193, "ou": 193, "becom": [193, 200], "lr": [193, 194], "5e": 193, "weight_decai": 193, "5000": 193, "warm": 193, "tau": [193, 194], "005": [193, 194], "tmp": [193, 194], "n_steps_forward": 193, "semin": 193, "ornstein": 193, "uhlenbeck": 193, "qnet_target": 193, "annealing_num_step": [193, 194], "9152e": 193, "3728e": 193, "00": [193, 194, 197], "6790e": 193, "02": [193, 194, 197], "8100e": 193, "0432e": 193, "4661e": 193, "7335e": 193, "6330e": 193, "3439e": 193, "04": [193, 194], "3564e": 193, "1885e": 193, "4405e": 193, "1127e": 193, "9993e": 193, "7058e": 193, "7317e": 193, "3022e": 193, "2335": 193, "3836": 193, "3375": 193, "3587": 193, "3461": 193, "4445": 193, "3917": 193, "3489": 193, "5510": 193, "5761": 193, "1731": 193, "4106": 193, "3918": 193, "0521": 193, "4038": 193, "4419": 193, "9479": 193, "crucial": [193, 194, 200], "coupl": 193, "async": [193, 201], "transmiss": 193, "3018685293": 193, "adam": [193, 194], "optimizer_actor": 193, "optimizer_qnet": 193, "total_collection_step": 193, "scheduler1": 193, "lr_schedul": 193, "cosineannealinglr": 193, "t_max": 193, "scheduler2": 193, "temporarili": 193, "differenti": 193, "henc": 193, "word": [193, 200], "Then": [193, 196], "fed": 193, "hood": 193, "metadata": [193, 200], "ommit": 193, "earli": [193, 201], "rewards_ev": 193, "norm_factor_train": 193, "collected_fram": 193, "pbar": [193, 194], "r0": 193, "filter": 193, "current_fram": [193, 194], "sampled_tensordict": 193, "backprop": 193, "next_valu": [193, 194], "value_est": 193, "value_loss": 193, "pow": [193, 194], "sampled_tensordict_actor": 193, "actor_loss": 193, "p_in": 193, "p_dest": 193, "zip": [193, 195], "copy_": 193, "b_in": 193, "b_dest": 193, "td_record": 193, "r_evalu": 193, "set_descript": [193, 194], "4f": [193, 194], "2500": 193, "07": [193, 194], "253": 193, "61it": 193, "memmapstorag": [193, 194], "bq2ip7xt": 193, "057220458984375": 193, "mb": [193, 194, 197], "0ne_zopv": 193, "002384185791015625": 193, "dbi9q4yc": 193, "0095367431640625": 193, "41mz1su6": 193, "kcbomf25": 193, "hp69m8uz": 193, "v1dz_ngl": 193, "1621246337890625": 193, "1ltwpomr": 193, "9vzp9tv0": 193, "485nh_nx": 193, "7mpibqjg": 193, "steps_to_next_ob": [193, 194], "794koutx": 193, "019073486328125": 193, "fxiv1y6_": 193, "tmpuzhsh5um": 193, "2201": 193, "3075": 193, "7577": 193, "40": 193, "09": [193, 194], "153": 193, "64it": 193, "1951": 193, "60": [193, 201], "1500": 193, "250": 193, "59it": [193, 194], "4099": 193, "80": 193, "294": 193, "03it": [193, 194], "2649": 193, "360": [193, 194], "11it": [193, 194], "2197": 193, "plot": [193, 194], "mention": [193, 194, 200], "figur": [193, 194, 198, 200], "label": [193, 194, 199], "legend": [193, 194], "xlabel": [193, 194], "ylabel": [193, 194], "tight_layout": [193, 194], "devid": 193, "100000": [193, 194], "batch_size_traj": 193, "simplic": [193, 198], "22": [193, 194], "td_lambda": 193, "95": [193, 194], "roughli": [193, 201], "slightli": [193, 198, 200], "four": 193, "big": [193, 194, 200], "inde": [193, 199], "revert": 193, "compli": [193, 199], "incompat": [193, 199], "bit": 193, "rand_idx": 193, "avn2zfli": 193, "1444091796875": 193, "gh92rqse": 193, "0476837158203125": 193, "qq5u33ct": 193, "000762939453125": 193, "adygeufq": 193, "uskr0ir_": 193, "24249267578125": 193, "8xren490": 193, "4t4fkey7": 193, "19073486328125": 193, "mdmp072m": 193, "fctgv4_n": 193, "tmp9x4ry_ho": 193, "consider": 193, "titl": [193, 194], "labmda": 193, "text": 193, "minut": [193, 194, 196, 198, 199, 200, 201], "510": [193, 197], "coding_ddpg": [193, 197], "jupyt": [193, 194, 195, 196, 198, 199, 200, 201], "ipynb": [193, 194, 196, 198, 199, 200, 201], "galleri": [193, 194, 195, 196, 198, 199, 200, 201], "sphinx": [193, 194, 195, 196, 198, 199, 200, 201], "cartpol": [194, 200], "tabl": 194, "pick": 194, "highest": 194, "discretiz": 194, "amort": 194, "seen": 194, "past": 194, "esitm": 194, "ipython": 194, "get_funct": [194, 198], "is_notebook": 194, "shell": 194, "get_ipython": 194, "__class__": 194, "__name__": 194, "zmqinteractiveshel": 194, "qtconsol": 194, "terminalinteractiveshel": 194, "nameerror": 194, "interpret": 194, "hyperparam": 194, "hopefulli": 194, "sentit": 194, "variat": 194, "2e": 194, "harder": [194, 201], "restrict": [194, 200], "n_optim": 194, "n_worker": 194, "smooth": 194, "loos": 194, "notic": 194, "eps_greedy_v": 194, "eps_greedy_val_env": 194, "05": 194, "predefin": 194, "init_bia": 194, "500000": 194, "techin": 194, "dummy_env": 194, "9927785992622375": 194, "0761081725358963": 194, "pole": 194, "un": 194, "actuat": 194, "cart": 194, "frictionless": 194, "upright": [194, 200], "balanc": [194, 200], "pixels_sav": 194, "eval_rollout": 194, "imageio": 194, "mimwrit": 194, "cartpole_random": 194, "mp4": 194, "fp": 194, "480": 194, "trick": 194, "num_ob": 194, "num_act": 194, "make_model": 194, "output_s": 194, "could": [194, 199, 200], "unflatten_kei": 194, "fairli": 194, "params_target": 194, "actor_explor": 194, "eps_init": 194, "eps_end": 194, "pai": 194, "attent": [194, 198], "params_flat": 194, "flatten_kei": 194, "params_target_flat": 194, "600": 194, "bootstrap": 194, "value_next_step": 194, "not_termin": 194, "significantli": 194, "deliv": [194, 201], "data_collector": 194, "traj_lengths_ev": 194, "grad_val": 194, "traj_length": 194, "mavg": 194, "traj_count": 194, "prev_traj_count": 194, "enough": 194, "send": [194, 199, 201], "sampled_data": 194, "sampled_data_out": 194, "tdstep": 194, "exp_valu": 194, "mse_loss": 194, "gv": 194, "p": [194, 198], "sqrt": 194, "clip_grad_value_": 194, "p1": 194, "p2": 194, "set_": 194, "clear_output": 194, "wait": 194, "gcf": 194, "clf": 194, "figsiz": 194, "15": 194, "subplot": [194, 200], "traj": 194, "savefig": 194, "dqn_td0": 194, "png": 194, "45": 194, "35it": 194, "tmpavr75j9c": 194, "00762939453125": 194, "tmpqh8wfuec": 194, "003814697265625": 194, "tmph6v8x3ok": 194, "0019073486328125": 194, "tmpxx5brbuj": 194, "000476837158203125": 194, "tmpfgyniva4": 194, "tmp7b99ft7m": 194, "31": 194, "25": 194, "tmpn0qs01ai": 194, "tmpk9y5vuf5": 194, "tmpccn7bvxp": 194, "tmppcfecx5i": 194, "19": 194, "55it": 194, "96": 194, "95it": 194, "8604": 194, "3238": 194, "26": 194, "20it": 194, "9621": 194, "18": [194, 197, 200], "2869": 194, "87it": 194, "2873": 194, "7003": 194, "192": 194, "31it": 194, "7596": 194, "4498": 194, "224": 194, "27": 194, "56it": 194, "4088": 194, "51": 194, "256": 194, "29": 194, "7938": 194, "2696": 194, "58": 194, "288": 194, "04it": 194, "7467": 194, "2432": 194, "320": [194, 200], "22it": 194, "36": 194, "4410": 194, "7472": 194, "70": 194, "352": 194, "65it": 194, "5773": 194, "4184": 194, "77": 194, "384": 194, "28": [194, 197, 200], "07it": 194, "23": [194, 197], "4684": 194, "1846": 194, "83": 194, "416": 194, "15it": 194, "8179": 194, "9784": 194, "90": 194, "448": 194, "17it": 194, "6143": 194, "2181": 194, "74it": 194, "0578": 194, "0040": 194, "512it": 194, "01it": 194, "2632": 194, "2827": 194, "imshow": [194, 200], "imread": 194, "axi": 194, "1499": 194, "traj_lengths_train": 194, "saved_results_td0": 194, "entir": 194, "capac": 194, "smooth_l1_loss": 194, "clip_grad_norm_": 194, "dqn_tdlambda": 194, "24it": 194, "48it": 194, "tmpxrb17szf": 194, "244140625": 194, "tmplj96locf": 194, "1220703125": 194, "tmpkl4sd9sl": 194, "06103515625": 194, "tmpkjwtri8b": 194, "0152587890625": 194, "tmpcfbvvkeb": 194, "tmplnkfrg9": 194, "tmplwnrjydi": 194, "tmp5xwb8rog": 194, "tmp10dyqh4m": 194, "tmpn2ny_zni": 194, "94it": 194, "3991": 194, "2204": 194, "78it": 194, "6308": 194, "7083": 194, "08it": 194, "2328": 194, "3563": 194, "21": [194, 196], "38it": 194, "6536": 194, "5757": 194, "1130": 194, "2459": 194, "0284": 194, "3367": 194, "16it": 194, "8044": 194, "3631": 194, "3693": 194, "8293": 194, "99it": 194, "7661": 194, "5688": 194, "39it": 194, "7656": 194, "2607": 194, "43it": 194, "8308": 194, "1192": 194, "18it": 194, "8361": 194, "5917": 194, "52it": 194, "6761": 194, "4462": 194, "3987": 194, "7012": 194, "saved_results_tdlambda": 194, "fewer": 194, "load_td0": 194, "load_tdlambda": 194, "frames_td0": 194, "frames_tdlambda": 194, "evals_td0": 194, "evals_tdlambda": 194, "mavgs_td0": 194, "mavgs_tdlambda": 194, "losses_td0": 194, "losses_tdlambda": 194, "values_td0": 194, "values_tdlambda": 194, "grad_vals_td0": 194, "grad_vals_tdlambda": 194, "traj_lengths_td0": 194, "traj_lengths_tdlambda": 194, "traj_count_td0": 194, "traj_count_tdlambda": 194, "goe": [194, 200], "greatli": 194, "nth": 194, "noticebli": 194, "myopic": 194, "collectorclass": 194, "till": 194, "worst": 194, "accuraci": 194, "fanci": 194, "techniqu": 194, "730": [194, 197], "coding_dqn": [194, 197], "tutorials_python": 195, "tutorials_jupyt": 195, "distinct": 196, "tensordictsequenti": [196, 201], "humanoid": [196, 200], "walk": [196, 200], "env1": 196, "env1_obs_kei": 196, "observation_stand": 196, "env2": 196, "env2_obs_kei": 196, "observation_walk": 196, "tdreset1": 196, "tdreset2": 196, "recov": 196, "tdreset": 196, "67": 196, "backbon": [196, 201], "policy_common": 196, "policy_stand": 196, "policy_walk": 196, "seq": 196, "But": 196, "env1_mak": 196, "env2_mak": 196, "_single_task": 196, "td_rollout": 196, "shown": 196, "677": [196, 197], "multi_task": [196, 197], "347": 197, "torchrl_demo": [197, 201], "179": [197, 201], "torch_env": [197, 200], "108": [197, 200], "120": [197, 198], "tensordict_tutori": [197, 199], "023": [197, 199], "recommand": 198, "conveni": [198, 199], "a_out": 198, "mergelinear": 198, "in_1": 198, "in_2": 198, "linear_1": 198, "linear_2": 198, "x_1": 198, "x_2": 198, "multiheadlinear": 198, "out_1": 198, "out_2": 198, "splitlinear": 198, "output_1": 198, "output_2": 198, "split_and_merge_linear": 198, "make_functional_with_buff": 198, "replica": 198, "params_expand": [198, 201], "buffers_expand": 198, "num_model": 198, "group": 198, "zeros_lik": 198, "result_td": 198, "ok": 198, "rule": 198, "conflict": 198, "tensordictsequentialand": 198, "block": 198, "demonstr": [198, 200], "architectur": 198, "vaswani": 198, "2017": 198, "asid": 198, "src": 198, "ffn": 198, "skiplayernorm": 198, "splithead": 198, "tokenstoqkv": 198, "attentionblocktensordict": 198, "wire": 198, "connect": 198, "moreov": 198, "complic": [198, 199, 200], "to_nam": 198, "from_nam": 198, "to_dim": 198, "to_len": 198, "from_dim": 198, "latent_dim": 198, "num_head": 198, "x_out": 198, "attn": 198, "thank": 198, "transformerblockencodertensordict": 198, "transformerblockdecodertensordict": 198, "token": 198, "extract": 198, "x_from": 198, "x_to": 198, "transformerencodertensordict": 198, "num_block": 198, "transformerdecodertensordict": 198, "transformertensordict": 198, "from_len": 198, "x_encod": 198, "x_decod": 198, "ve": 198, "operar": 198, "td_token": 198, "tdtransform": 198, "t1": 198, "t2": 198, "013169050216674805": 198, "t3": 198, "t4": 198, "009035348892211914": 198, "minim": 198, "introduc": [198, 199], "margin": 198, "deal": 199, "furthermor": 199, "awai": 199, "organ": 199, "power": 199, "segment": 199, "get_data_a": 199, "get_data_b": 199, "reusabl": 199, "lot": 199, "rewriten": 199, "modal": 199, "get_data": 199, "reus": 199, "argu": 199, "dictdataset": 199, "__getitem__": 199, "collat": 199, "collate_dict_fn": 199, "dict_list": 199, "final_dict": 199, "single_dict": 199, "simpler": 199, "dataload": 199, "collate_tensordict_fn": 199, "furtherdown": 199, "_permutedtensordict": 199, "_unsqueezedtensordict": 199, "_viewedtensordict": 199, "datastructur": 199, "explicitli": 199, "caramba": 199, "int32": [199, 201], "algebra": 199, "foo": [199, 200], "multidimension": 199, "insid": [199, 200], "violat": 199, "err": 199, "mismatch": 199, "resp": 199, "among": 199, "tensordict_clon": 199, "tensodict": 199, "tuple_index": 199, "new_tensordict": 199, "get_sub_tensordict": 199, "subtensordict": 199, "pointer": 199, "subtd": 199, "td2": 199, "booltensor": 199, "fashion": 199, "clonned_tensordict": 199, "staked_tensordict": 199, "contigu": [199, 201], "isinst": 199, "unbind": 199, "list_tensordict": 199, "comeback": 199, "permut": [199, 200, 201], "unsqueezed_tensordict": 199, "role": 200, "somewhat": 200, "supervis": 200, "unsupervis": 200, "rom": 200, "licens": 200, "pygam": 200, "unifi": 200, "_build_env": 200, "sphinx_gallery_start_ignor": 200, "warn": 200, "filterwarn": 200, "sphinx_gallery_end_ignor": 200, "adventur": 200, "ram": 200, "airraid": 200, "alien": 200, "amidar": 200, "assault": 200, "happen": 200, "continuousbox": [200, 201], "inf": 200, "tool": 200, "4372": 200, "pack": 200, "brief": 200, "exectut": 200, "brax": 200, "reproduct": 200, "did": 200, "shortcut": 200, "tensordict_tprim": 200, "tensordict_rollout": [200, 201], "quickli": 200, "axesimag": 200, "0x7f44d19b2f40": 200, "inconsist": 200, "supplementari": 200, "acrobot": 200, "swingup": 200, "swingup_spars": 200, "ball_in_cup": 200, "catch": 200, "balance_spars": 200, "three_pol": 200, "two_pol": 200, "finger": 200, "turn_easi": 200, "turn_hard": 200, "fish": 200, "swim": 200, "hopper": 200, "hop": 200, "run_pure_st": 200, "bring_bal": 200, "bring_peg": 200, "insert_bal": 200, "insert_peg": 200, "point_mass": 200, "reacher": 200, "swimmer": 200, "swimmer6": 200, "swimmer15": 200, "walker": 200, "dog": 200, "fetch": 200, "trot": 200, "humanoid_cmu": 200, "lqr": 200, "lqr_2_1": 200, "lqr_6_2": 200, "quadrup": 200, "escap": 200, "stacker": 200, "stack_2": 200, "stack_4": 200, "240": [200, 201], "env_transform": 200, "wrapper1": 200, "wrapper2": 200, "obviou": 200, "truth": 200, "extern": 200, "env0": 200, "env_transformed_bi": 200, "stanc": 200, "transformeddistribut": 200, "base_dist": 200, "ndunboundeddiscretetensorspec": 200, "concat": 200, "mofidi": 200, "_inv_apply_transform": 200, "_apply_transform": 200, "transformedenviron": 200, "moderet": 200, "computation": 200, "legitim": 200, "impli": 200, "side": 200, "incom": 200, "amongst": 200, "has_cuda": 200, "simplest": 200, "wor": 200, "convention": 200, "program": 200, "scope": 200, "difficulti": 200, "markovian": 200, "reconstruct": 200, "3288080526": 200, "sometim": 200, "constain": 200, "sleep": 200, "uuid": 200, "uuid1": 200, "bar_": 200, "get_someth": 200, "bar_daff78ca": 200, "7654": 200, "11ed": 200, "b677": 200, "0242ac120002": 200, "aargh": 200, "ourselv": 200, "foo_list": 200, "vec_env": 200, "_dispatch_caller_parallel": 200, "0x7f44c408fb50": 200, "bar_de5f0b52": 200, "a28b": 200, "bar_de78b3e0": 200, "9975": 200, "bar_de8dd2c0": 200, "9bd0": 200, "121": 200, "122": 200, "parallen": 200, "carefulli": 200, "commonli": 200, "approxim": 200, "particularili": 200, "evolv": 200, "caution": 200, "previous": 200, "steadi": 200, "approx": 200, "3714": 200, "1065": 200, "1494": 200, "1238": 200, "2594": 200, "4940": 200, "_extra_st": 200, "observation_count": 200, "observation_ssq": 200, "observation_sum": 200, "2367": 200, "1299": 200, "1433": 200, "9357": 200, "9627": 200, "8806": 200, "dispach": 200, "small": 200, "absor": 200, "demo": 201, "icml": 201, "dai": 201, "overview": 201, "vmoen": 201, "fb": 201, "question": 201, "team": 201, "decid": 201, "invest": 201, "platform": 201, "media": 201, "truli": 201, "rest": 201, "predominantli": 201, "wandb": 201, "tensorboard": 201, "tensordict1": 201, "tensordict2": 201, "tensordict_sampl": 201, "_sum_tre": 201, "06984968483448029": 201, "28791671991348267": 201, "gym_env": 201, "0000": 201, "squash": 201, "lazyconv2d": 201, "6400": 201, "backbone_modul": 201, "value_modul": 201, "tensordict_exp": 201, "base_modul": 201, "0137": 201, "1524": 201, "0641": 201, "grad_fn": 201, "addbackward0": 201, "indexputbackward0": 201, "8728": 201, "1335": 201, "9833": 201, "3497": 201, "6889": 201, "6433": 201, "clampbackward1": 201, "1131": 201, "1761": 201, "3425": 201, "2665": 201, "2915": 201, "6207": 201, "1441": 201, "2375": 201, "1242": 201, "1372": 201, "3810": 201, "meanbackward1": 201, "tensordicts_prealloc": 201, "tensordicts_stack": 201, "disclaim": 201, "concatmodul": 201, "loss_fn": 201, "loss_td": 201, "loss_valu": 201, "pred_valu": 201, "pred_value_max": 201, "target_value_max": 201, "bug": 201, "bc": 201, "year": 201, "roadmap": 201, "compris": 201, "hierarch": 201, "contributor": 201, "curiou": 201, "feedback": 201, "nascent": 201, "pypi": 201}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "SyncDataCollector"], [14, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[13, 1, 1, "", "iterator"], [13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "rollout"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[15, 2, 1, "", "split_trajectories"]], "torchrl.data": [[16, 0, 1, "", "BinaryDiscreteTensorSpec"], [17, 0, 1, "", "BoundedTensorSpec"], [18, 0, 1, "", "CompositeSpec"], [19, 0, 1, "", "DiscreteTensorSpec"], [20, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [21, 0, 1, "", "MultiStep"], [22, 0, 1, "", "NdBoundedTensorSpec"], [23, 0, 1, "", "NdUnboundedContinuousTensorSpec"], [24, 0, 1, "", "OneHotDiscreteTensorSpec"], [25, 0, 1, "", "PrioritizedReplayBuffer"], [26, 0, 1, "", "ReplayBuffer"], [27, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [28, 0, 1, "", "TensorDictReplayBuffer"], [29, 0, 1, "", "TensorSpec"], [30, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "keys"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[21, 1, 1, "", "add_module"], [21, 1, 1, "", "apply"], [21, 1, 1, "", "bfloat16"], [21, 1, 1, "", "buffers"], [21, 1, 1, "", "children"], [21, 1, 1, "", "cpu"], [21, 1, 1, "", "cuda"], [21, 1, 1, "", "double"], [21, 1, 1, "", "eval"], [21, 1, 1, "", "extra_repr"], [21, 1, 1, "", "float"], [21, 1, 1, "", "forward"], [21, 1, 1, "", "get_buffer"], [21, 1, 1, "", "get_extra_state"], [21, 1, 1, "", "get_parameter"], [21, 1, 1, "", "get_submodule"], [21, 1, 1, "", "half"], [21, 1, 1, "", "ipu"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "modules"], [21, 1, 1, "", "named_buffers"], [21, 1, 1, "", "named_children"], [21, 1, 1, "", "named_modules"], [21, 1, 1, "", "named_parameters"], [21, 1, 1, "", "parameters"], [21, 1, 1, "", "register_backward_hook"], [21, 1, 1, "", "register_buffer"], [21, 1, 1, "", "register_forward_hook"], [21, 1, 1, "", "register_forward_pre_hook"], [21, 1, 1, "", "register_full_backward_hook"], [21, 1, 1, "", "register_load_state_dict_post_hook"], [21, 1, 1, "", "register_module"], [21, 1, 1, "", "register_parameter"], [21, 1, 1, "", "requires_grad_"], [21, 1, 1, "", "set_extra_state"], [21, 1, 1, "", "share_memory"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "to"], [21, 1, 1, "", "to_empty"], [21, 1, 1, "", "train"], [21, 1, 1, "", "type"], [21, 1, 1, "", "xpu"], [21, 1, 1, "", "zero_grad"]], "torchrl.data.NdBoundedTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.NdUnboundedContinuousTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "sample"], [27, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[31, 0, 1, "", "RemoteTensorDictReplayBuffer"], [32, 0, 1, "", "ReplayBuffer"], [33, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "append_transform"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "insert_transform"], [31, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "append_transform"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "insert_transform"], [32, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[33, 1, 1, "", "add"], [33, 1, 1, "", "append_transform"], [33, 1, 1, "", "extend"], [33, 1, 1, "", "insert_transform"], [33, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[34, 0, 1, "", "PrioritizedSampler"], [35, 0, 1, "", "RandomSampler"], [36, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[34, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[37, 0, 1, "", "LazyMemmapStorage"], [38, 0, 1, "", "LazyTensorStorage"], [39, 0, 1, "", "ListStorage"], [40, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[40, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[41, 0, 1, "", "RoundRobinWriter"], [42, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[41, 1, 1, "", "add"], [41, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "extend"]], "torchrl.envs": [[43, 0, 1, "", "EnvBase"], [44, 0, 1, "", "GymLikeEnv"], [45, 2, 1, "", "ModelBasedEnvBase"], [46, 0, 1, "", "ParallelEnv"], [47, 0, 1, "", "SerialEnv"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 3, 1, "", "batch_locked"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "fake_tensordict"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "id0", "rand_step"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "id1", "reset"], [43, 1, 1, "id2", "rollout"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "id3", "set_seed"], [43, 1, 1, "", "share_memory"], [43, 3, 1, "", "specs"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "id4", "step"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "close"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "read_action"], [44, 1, 1, "", "read_done"], [44, 1, 1, "", "read_obs"], [44, 1, 1, "", "read_reward"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_info_dict_reader"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "update_kwargs"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "update_kwargs"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[48, 2, 1, "", "DMControlEnv"], [49, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[50, 2, 1, "", "GymEnv"], [51, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[52, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[53, 2, 1, "", "JumanjiEnv"], [54, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.model_based.dreamer": [[55, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[56, 0, 1, "", "BinarizeReward"], [57, 0, 1, "", "CatFrames"], [58, 0, 1, "", "CatTensors"], [59, 0, 1, "", "CenterCrop"], [60, 0, 1, "", "Compose"], [61, 0, 1, "", "DoubleToFloat"], [62, 0, 1, "", "FiniteTensorDictCheck"], [63, 0, 1, "", "FlattenObservation"], [64, 0, 1, "", "GrayScale"], [65, 0, 1, "", "NoopResetEnv"], [66, 0, 1, "", "ObservationNorm"], [67, 0, 1, "", "ObservationTransform"], [68, 0, 1, "", "PinMemoryTransform"], [69, 0, 1, "", "R3MTransform"], [70, 0, 1, "", "Resize"], [71, 0, 1, "", "RewardClipping"], [72, 0, 1, "", "RewardScaling"], [73, 0, 1, "", "TensorDictPrimer"], [74, 0, 1, "", "ToTensorImage"], [75, 0, 1, "", "Transform"], [76, 0, 1, "", "TransformedEnv"], [77, 0, 1, "", "UnsqueezeTransform"], [78, 0, 1, "", "VIPTransform"], [79, 0, 1, "", "VecNorm"], [80, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[56, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[57, 1, 1, "", "reset"], [57, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[58, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[59, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[60, 1, 1, "", "forward"], [60, 1, 1, "", "reset"], [60, 1, 1, "", "to"], [60, 1, 1, "", "transform_input_spec"], [60, 1, 1, "", "transform_observation_spec"], [60, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[61, 1, 1, "", "transform_input_spec"], [61, 1, 1, "", "transform_observation_spec"], [61, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[65, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[66, 1, 1, "", "init_stats"], [66, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[69, 1, 1, "", "forward"], [69, 1, 1, "", "reset"], [69, 1, 1, "", "to"], [69, 1, 1, "", "transform_input_spec"], [69, 1, 1, "", "transform_observation_spec"], [69, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[70, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[71, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[72, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[73, 1, 1, "", "reset"], [73, 1, 1, "", "to"], [73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[75, 1, 1, "", "forward"], [75, 1, 1, "", "reset"], [75, 1, 1, "", "transform_input_spec"], [75, 1, 1, "", "transform_observation_spec"], [75, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[76, 3, 1, "", "action_spec"], [76, 3, 1, "", "batch_locked"], [76, 1, 1, "", "eval"], [76, 3, 1, "", "input_spec"], [76, 1, 1, "", "load_state_dict"], [76, 3, 1, "", "observation_spec"], [76, 3, 1, "", "reward_spec"], [76, 1, 1, "", "set_seed"], [76, 1, 1, "", "state_dict"], [76, 1, 1, "", "to"], [76, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[77, 1, 1, "", "forward"], [77, 1, 1, "", "transform_input_spec"], [77, 1, 1, "", "transform_observation_spec"], [77, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPTransform": [[78, 1, 1, "", "forward"], [78, 1, 1, "", "reset"], [78, 1, 1, "", "to"], [78, 1, 1, "", "transform_input_spec"], [78, 1, 1, "", "transform_observation_spec"], [78, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[79, 1, 1, "", "build_td_for_shared_vecnorm"], [79, 1, 1, "", "get_extra_state"], [79, 1, 1, "", "set_extra_state"], [79, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[80, 1, 1, "", "reset"]], "torchrl.envs.utils": [[81, 2, 1, "", "exploration_mode"], [82, 2, 1, "", "get_available_libraries"], [83, 2, 1, "", "set_exploration_mode"], [84, 2, 1, "", "step_mdp"]], "torchrl.modules": [[85, 0, 1, "", "Actor"], [86, 0, 1, "", "ActorCriticOperator"], [87, 0, 1, "", "ActorCriticWrapper"], [88, 0, 1, "", "ActorValueOperator"], [89, 0, 1, "", "CEMPlanner"], [90, 0, 1, "", "ConvNet"], [91, 0, 1, "", "DdpgCnnActor"], [92, 0, 1, "", "DdpgCnnQNet"], [93, 0, 1, "", "DdpgMlpActor"], [94, 0, 1, "", "DdpgMlpQNet"], [95, 0, 1, "", "Delta"], [96, 0, 1, "", "DistributionalDQNnet"], [97, 0, 1, "", "DistributionalQValueActor"], [98, 0, 1, "", "DreamerActor"], [99, 0, 1, "", "DuelingCnnDQNet"], [100, 0, 1, "", "LSTMNet"], [101, 0, 1, "", "MLP"], [102, 0, 1, "", "MPCPlannerBase"], [103, 0, 1, "", "NoisyLazyLinear"], [104, 0, 1, "", "NoisyLinear"], [105, 0, 1, "", "ObsDecoder"], [106, 0, 1, "", "ObsEncoder"], [107, 0, 1, "", "OneHotCategorical"], [108, 0, 1, "", "ProbabilisticActor"], [109, 0, 1, "", "QValueActor"], [110, 0, 1, "", "RSSMPosterior"], [111, 0, 1, "", "RSSMPrior"], [112, 0, 1, "", "SafeModule"], [113, 0, 1, "", "SafeProbabilisticModule"], [114, 0, 1, "", "SafeSequential"], [115, 0, 1, "", "TanhDelta"], [116, 0, 1, "", "TanhNormal"], [117, 0, 1, "", "TruncatedNormal"], [118, 0, 1, "", "ValueOperator"], [119, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[86, 1, 1, "", "get_critic_operator"], [86, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[87, 1, 1, "", "get_policy_operator"], [87, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[88, 1, 1, "", "get_policy_operator"], [88, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[89, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[90, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[91, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[92, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[93, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[94, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[95, 1, 1, "", "log_prob"], [95, 3, 1, "", "mean"], [95, 3, 1, "", "mode"], [95, 1, 1, "", "rsample"], [95, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[96, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[98, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[99, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[100, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[101, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[103, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[105, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[106, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[107, 1, 1, "", "log_prob"], [107, 3, 1, "", "mode"], [107, 1, 1, "", "rsample"], [107, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[110, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[111, 1, 1, "", "forward"]], "torchrl.modules.SafeModule": [[112, 1, 1, "", "random"], [112, 1, 1, "", "random_sample"], [112, 1, 1, "", "to"]], "torchrl.modules.TanhDelta": [[115, 3, 1, "", "mean"], [115, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[116, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[117, 1, 1, "", "log_prob"], [117, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[120, 0, 1, "", "DistributionalQValueHook"], [121, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[122, 0, 1, "", "ensure_tensordict_compatible"], [123, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[124, 0, 1, "", "biased_softplus"], [125, 0, 1, "", "inv_softplus"], [126, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[124, 1, 1, "", "forward"]], "torchrl.objectives": [[127, 0, 1, "", "A2CLoss"], [128, 0, 1, "", "ClipPPOLoss"], [129, 0, 1, "", "DDPGLoss"], [130, 0, 1, "", "DQNLoss"], [131, 0, 1, "", "DistributionalDQNLoss"], [132, 0, 1, "", "HardUpdate"], [133, 0, 1, "", "KLPENPPOLoss"], [134, 0, 1, "", "PPOLoss"], [135, 0, 1, "", "REDQLoss"], [136, 0, 1, "", "SACLoss"], [137, 0, 1, "", "SoftUpdate"], [138, 0, 1, "", "distance_loss"], [139, 0, 1, "", "hold_out_net"], [140, 0, 1, "", "hold_out_params"], [141, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[127, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[128, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[129, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[130, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[131, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[133, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[134, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[135, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[136, 1, 1, "", "forward"]], "torchrl.objectives.value": [[142, 0, 1, "", "GAE"], [143, 0, 1, "", "TDEstimate"], [144, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[142, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[143, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[144, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[145, 0, 1, "", "generalized_advantage_estimate"], [146, 0, 1, "", "td_advantage_estimate"], [147, 0, 1, "", "td_lambda_advantage_estimate"], [148, 0, 1, "", "td_lambda_return_estimate"], [149, 0, 1, "", "vec_generalized_advantage_estimate"], [150, 0, 1, "", "vec_td_lambda_advantage_estimate"], [151, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[152, 0, 1, "", "BatchSubSampler"], [153, 0, 1, "", "ClearCudaCache"], [154, 0, 1, "", "CountFramesLog"], [155, 0, 1, "", "LogReward"], [156, 0, 1, "", "OptimizerHook"], [157, 0, 1, "", "Recorder"], [158, 0, 1, "", "ReplayBuffer"], [159, 0, 1, "", "RewardNormalizer"], [160, 0, 1, "", "SelectKeys"], [161, 0, 1, "", "Trainer"], [162, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[158, 1, 1, "", "add"], [158, 1, 1, "", "extend"], [158, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[163, 2, 1, "", "correct_for_frame_skip"], [164, 2, 1, "", "get_stats_random_rollout"], [165, 2, 1, "", "make_a2c_loss"], [166, 2, 1, "", "make_a2c_model"], [167, 2, 1, "", "make_collector_offpolicy"], [168, 2, 1, "", "make_collector_onpolicy"], [169, 2, 1, "", "make_ddpg_actor"], [170, 2, 1, "", "make_ddpg_loss"], [171, 2, 1, "", "make_dqn_actor"], [172, 2, 1, "", "make_dqn_loss"], [173, 2, 1, "", "make_ppo_loss"], [174, 2, 1, "", "make_ppo_model"], [175, 2, 1, "", "make_redq_loss"], [176, 2, 1, "", "make_redq_model"], [177, 2, 1, "", "make_replay_buffer"], [178, 2, 1, "", "make_sac_loss"], [179, 2, 1, "", "make_sac_model"], [180, 2, 1, "", "make_target_updater"], [181, 2, 1, "", "make_trainer"], [182, 2, 1, "", "parallel_env_constructor"], [183, 2, 1, "", "sync_async_collector"], [184, 2, 1, "", "sync_sync_collector"], [185, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 189, 190, 191, 192, 193, 194, 200, 201], "document": [0, 8], "tutori": 0, "refer": [0, 187], "indic": 0, "tabl": 0, "collector": [1, 193], "packag": [1, 2, 3, 189, 190, 191, 192], "data": [1, 2, 193, 201], "helper": [1, 3], "function": [1, 201], "replai": [2, 193, 201], "buffer": [2, 193, 201], "compos": [2, 60], "prototyp": 2, "tensorspec": [2, 29], "util": [2, 189, 190, 191], "env": [3, 200, 201], "vector": [3, 201], "transform": [3, 75, 193, 198, 200, 201], "domain": 3, "specif": [3, 196], "librari": [3, 201], "work": [4, 5], "gym": [4, 200], "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 199], "up": 5, "your": [5, 193], "environ": [5, 6, 193, 194, 196, 200, 201], "instal": [5, 6, 201], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 193, 194, 198, 201], "common": [5, 6], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 200], "all": 6, "new": 6, "bindindg": 6, "2": [6, 198], "1": [6, 198], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "train": [7, 193, 194], "cluster": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 198], "rl": [8, 201], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "syncdatacollector": 13, "asyncdatacollector": 14, "split_trajectori": 15, "binarydiscretetensorspec": 16, "boundedtensorspec": 17, "compositespec": 18, "discretetensorspec": 19, "multonehotdiscretetensorspec": 20, "multistep": 21, "ndboundedtensorspec": 22, "ndunboundedcontinuoustensorspec": 23, "onehotdiscretetensorspec": 24, "prioritizedreplaybuff": 25, "replaybuff": [26, 32, 158], "tensordictprioritizedreplaybuff": 27, "tensordictreplaybuff": [28, 33], "unboundedcontinuoustensorspec": 30, "remotetensordictreplaybuff": 31, "prioritizedsampl": 34, "randomsampl": 35, "sampler": 36, "lazymemmapstorag": 37, "lazytensorstorag": 38, "liststorag": 39, "storag": 40, "roundrobinwrit": 41, "writer": 42, "envbas": 43, "gymlikeenv": 44, "modelbasedenvbas": 45, "parallelenv": 46, "serialenv": 47, "dmcontrolenv": 48, "dmcontrolwrapp": 49, "gymenv": 50, "gymwrapp": 51, "habitatenv": 52, "jumanjienv": 53, "jumanjiwrapp": 54, "dreamerenv": 55, "binarizereward": 56, "catfram": 57, "cattensor": 58, "centercrop": 59, "doubletofloat": 61, "finitetensordictcheck": 62, "flattenobserv": 63, "grayscal": 64, "noopresetenv": 65, "observationnorm": 66, "observationtransform": 67, "pinmemorytransform": 68, "r3mtransform": 69, "resiz": 70, "rewardclip": 71, "rewardsc": 72, "tensordictprim": 73, "totensorimag": 74, "transformedenv": 76, "unsqueezetransform": 77, "viptransform": 78, "vecnorm": [79, 200], "gsdenois": 80, "exploration_mod": 81, "get_available_librari": 82, "set_exploration_mod": 83, "step_mdp": 84, "actor": [85, 198], "actorcriticoper": [86, 198], "actorcriticwrapp": 87, "actorvalueoper": 88, "cemplann": 89, "convnet": 90, "ddpgcnnactor": 91, "ddpgcnnqnet": 92, "ddpgmlpactor": 93, "ddpgmlpqnet": 94, "delta": 95, "distributionaldqnnet": 96, "distributionalqvalueactor": 97, "dreameractor": 98, "duelingcnndqnet": 99, "lstmnet": 100, "mlp": 101, "mpcplannerbas": 102, "noisylazylinear": 103, "noisylinear": 104, "obsdecod": 105, "obsencod": 106, "onehotcategor": 107, "probabilisticactor": [108, 198], "qvalueactor": 109, "rssmposterior": 110, "rssmprior": 111, "safemodul": 112, "safeprobabilisticmodul": 113, "safesequenti": 114, "tanhdelta": 115, "tanhnorm": 116, "truncatednorm": 117, "valueoper": 118, "reset_nois": 119, "distributionalqvaluehook": 120, "qvaluehook": 121, "ensure_tensordict_compat": 122, "is_tensordict_compat": 123, "biased_softplu": 124, "inv_softplu": 125, "map": 126, "a2closs": 127, "clipppoloss": 128, "ddpgloss": 129, "dqnloss": 130, "distributionaldqnloss": 131, "hardupd": 132, "klpenppoloss": 133, "ppoloss": 134, "redqloss": 135, "sacloss": 136, "softupd": 137, "distance_loss": 138, "hold_out_net": 139, "hold_out_param": 140, "next_state_valu": 141, "gae": 142, "tdestim": 143, "tdlambdaestim": 144, "generalized_advantage_estim": 145, "td_advantage_estim": 146, "td_lambda_advantage_estim": 147, "td_lambda_return_estim": 148, "vec_generalized_advantage_estim": 149, "vec_td_lambda_advantage_estim": 150, "vec_td_lambda_return_estim": 151, "batchsubsampl": 152, "clearcudacach": 153, "countframeslog": 154, "logreward": 155, "optimizerhook": 156, "record": [157, 193], "rewardnorm": 159, "selectkei": 160, "trainer": [161, 191], "updateweight": 162, "correct_for_frame_skip": 163, "get_stats_random_rollout": 164, "make_a2c_loss": 165, "make_a2c_model": 166, "make_collector_offpolici": 167, "make_collector_onpolici": 168, "make_ddpg_actor": 169, "make_ddpg_loss": 170, "make_dqn_actor": 171, "make_dqn_loss": 172, "make_ppo_loss": 173, "make_ppo_model": 174, "make_redq_loss": 175, "make_redq_model": 176, "make_replay_buff": 177, "make_sac_loss": 178, "make_sac_model": 179, "make_target_updat": 180, "make_train": 181, "parallel_env_constructor": 182, "sync_async_collector": 183, "sync_sync_collector": 184, "transformed_env_constructor": 185, "readm": [186, 195], "demo": [186, 195], "api": 187, "knowledg": 188, "base": [188, 194], "contribut": [188, 201], "content": 188, "modul": [189, 201], "tensordict": [189, 199, 201], "hook": [189, 191], "model": [189, 193, 194, 201], "explor": 189, "planner": 189, "distribut": 189, "object": [190, 193, 201], "dqn": [190, 194], "ddpg": [190, 193], "sac": 190, "redq": 190, "ppo": 190, "a2c": 190, "return": 190, "checkpoint": 191, "builder": 191, "_util": 192, "code": [193, 194, 199], "parallel": [193, 196, 200], "execut": [193, 196], "normal": 193, "observ": 193, "build": [193, 194], "evalu": 193, "hyperparamet": [193, 194], "initi": 193, "time": [193, 197], "polici": [193, 196], "experi": 193, "result": 193, "sampl": 193, "trajectori": 193, "td": [193, 194], "lambda": [193, 194], "pixel": 194, "The": 194, "problem": 194, "deep": 194, "q": 194, "network": 194, "regular": 194, "loop": 194, "conclus": 194, "possibl": 194, "improv": [194, 199], "task": 196, "multi": 196, "divers": 196, "rollout": [196, 200], "comput": 197, "tensordictmodul": [198, 201], "exampl": 198, "simpl": 198, "usag": [198, 199], "multipl": 198, "input": 198, "3": 198, "output": 198, "4": 198, "combin": 198, "tensordictsequenti": 198, "5": 198, "compat": 198, "do": [198, 199], "": 198, "don": 198, "t": [198, 199], "probabilistictensordictmodul": 198, "showcas": 198, "implement": 198, "benchmark": 198, "modular": 199, "can": 199, "i": 199, "thi": 199, "python": 199, "dict": 199, "structur": 199, "dictionari": 199, "featur": 199, "get": 199, "kei": 199, "valu": 199, "updat": 199, "tensordict_or_dict": 199, "del": 199, "tensor": 199, "batch": 199, "size": 199, "devic": [199, 200], "memori": 199, "share": 199, "via": 199, "physic": 199, "oper": 199, "spec": 200, "seed": 200, "reset": 200, "step": 200, "frame_skip": 200, "deepmind": 200, "control": 200, "run": 200, "close": 200, "access": 200, "attribut": 200, "kwarg": 200, "introduct": 201, "chang": 201, "config": 201, "sequenc": 201, "program": 201, "ensembl": 201, "meta": 201, "special": 201, "class": 201, "state": 201}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials:": [[0, null]], "References:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[2, "composable-replay-buffers-prototype"]], "TensorSpec": [[2, "tensorspec"], [29, "tensorspec"]], "Utils": [[2, "utils"], [189, "utils"], [190, "utils"], [191, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [193, "transforms"], [201, "transforms"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[7, "pro-tips"]], "Training on a cluster": [[7, "training-on-a-cluster"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "SyncDataCollector": [[13, "syncdatacollector"]], "aSyncDataCollector": [[14, "asyncdatacollector"]], "split_trajectories": [[15, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[16, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[17, "boundedtensorspec"]], "CompositeSpec": [[18, "compositespec"]], "DiscreteTensorSpec": [[19, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[20, "multonehotdiscretetensorspec"]], "MultiStep": [[21, "multistep"]], "NdBoundedTensorSpec": [[22, "ndboundedtensorspec"]], "NdUnboundedContinuousTensorSpec": [[23, "ndunboundedcontinuoustensorspec"]], "OneHotDiscreteTensorSpec": [[24, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[25, "prioritizedreplaybuffer"]], "ReplayBuffer": [[26, "replaybuffer"], [32, "replaybuffer"], [158, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[27, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[28, "tensordictreplaybuffer"], [33, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[30, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[31, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[34, "prioritizedsampler"]], "RandomSampler": [[35, "randomsampler"]], "Sampler": [[36, "sampler"]], "LazyMemmapStorage": [[37, "lazymemmapstorage"]], "LazyTensorStorage": [[38, "lazytensorstorage"]], "ListStorage": [[39, "liststorage"]], "Storage": [[40, "storage"]], "RoundRobinWriter": [[41, "roundrobinwriter"]], "Writer": [[42, "writer"]], "EnvBase": [[43, "envbase"]], "GymLikeEnv": [[44, "gymlikeenv"]], "ModelBasedEnvBase": [[45, "modelbasedenvbase"]], "ParallelEnv": [[46, "parallelenv"]], "SerialEnv": [[47, "serialenv"]], "DMControlEnv": [[48, "dmcontrolenv"]], "DMControlWrapper": [[49, "dmcontrolwrapper"]], "GymEnv": [[50, "gymenv"]], "GymWrapper": [[51, "gymwrapper"]], "HabitatEnv": [[52, "habitatenv"]], "JumanjiEnv": [[53, "jumanjienv"]], "JumanjiWrapper": [[54, "jumanjiwrapper"]], "DreamerEnv": [[55, "dreamerenv"]], "BinarizeReward": [[56, "binarizereward"]], "CatFrames": [[57, "catframes"]], "CatTensors": [[58, "cattensors"]], "CenterCrop": [[59, "centercrop"]], "Compose": [[60, "compose"]], "DoubleToFloat": [[61, "doubletofloat"]], "FiniteTensorDictCheck": [[62, "finitetensordictcheck"]], "FlattenObservation": [[63, "flattenobservation"]], "GrayScale": [[64, "grayscale"]], "NoopResetEnv": [[65, "noopresetenv"]], "ObservationNorm": [[66, "observationnorm"]], "ObservationTransform": [[67, "observationtransform"]], "PinMemoryTransform": [[68, "pinmemorytransform"]], "R3MTransform": [[69, "r3mtransform"]], "Resize": [[70, "resize"]], "RewardClipping": [[71, "rewardclipping"]], "RewardScaling": [[72, "rewardscaling"]], "TensorDictPrimer": [[73, "tensordictprimer"]], "ToTensorImage": [[74, "totensorimage"]], "Transform": [[75, "transform"]], "TransformedEnv": [[76, "transformedenv"]], "UnsqueezeTransform": [[77, "unsqueezetransform"]], "VIPTransform": [[78, "viptransform"]], "VecNorm": [[79, "vecnorm"], [200, "vecnorm"]], "gSDENoise": [[80, "gsdenoise"]], "exploration_mode": [[81, "exploration-mode"]], "get_available_libraries": [[82, "get-available-libraries"]], "set_exploration_mode": [[83, "set-exploration-mode"]], "step_mdp": [[84, "step-mdp"]], "Actor": [[85, "actor"], [198, "actor"]], "ActorCriticOperator": [[86, "actorcriticoperator"], [198, "actorcriticoperator"]], "ActorCriticWrapper": [[87, "actorcriticwrapper"]], "ActorValueOperator": [[88, "actorvalueoperator"]], "CEMPlanner": [[89, "cemplanner"]], "ConvNet": [[90, "convnet"]], "DdpgCnnActor": [[91, "ddpgcnnactor"]], "DdpgCnnQNet": [[92, "ddpgcnnqnet"]], "DdpgMlpActor": [[93, "ddpgmlpactor"]], "DdpgMlpQNet": [[94, "ddpgmlpqnet"]], "Delta": [[95, "delta"]], "DistributionalDQNnet": [[96, "distributionaldqnnet"]], "DistributionalQValueActor": [[97, "distributionalqvalueactor"]], "DreamerActor": [[98, "dreameractor"]], "DuelingCnnDQNet": [[99, "duelingcnndqnet"]], "LSTMNet": [[100, "lstmnet"]], "MLP": [[101, "mlp"]], "MPCPlannerBase": [[102, "mpcplannerbase"]], "NoisyLazyLinear": [[103, "noisylazylinear"]], "NoisyLinear": [[104, "noisylinear"]], "ObsDecoder": [[105, "obsdecoder"]], "ObsEncoder": [[106, "obsencoder"]], "OneHotCategorical": [[107, "onehotcategorical"]], "ProbabilisticActor": [[108, "probabilisticactor"], [198, "probabilisticactor"]], "QValueActor": [[109, "qvalueactor"]], "RSSMPosterior": [[110, "rssmposterior"]], "RSSMPrior": [[111, "rssmprior"]], "SafeModule": [[112, "safemodule"]], "SafeProbabilisticModule": [[113, "safeprobabilisticmodule"]], "SafeSequential": [[114, "safesequential"]], "TanhDelta": [[115, "tanhdelta"]], "TanhNormal": [[116, "tanhnormal"]], "TruncatedNormal": [[117, "truncatednormal"]], "ValueOperator": [[118, "valueoperator"]], "reset_noise": [[119, "reset-noise"]], "DistributionalQValueHook": [[120, "distributionalqvaluehook"]], "QValueHook": [[121, "qvaluehook"]], "ensure_tensordict_compatible": [[122, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[123, "is-tensordict-compatible"]], "biased_softplus": [[124, "biased-softplus"]], "inv_softplus": [[125, "inv-softplus"]], "mappings": [[126, "mappings"]], "A2CLoss": [[127, "a2closs"]], "ClipPPOLoss": [[128, "clipppoloss"]], "DDPGLoss": [[129, "ddpgloss"]], "DQNLoss": [[130, "dqnloss"]], "DistributionalDQNLoss": [[131, "distributionaldqnloss"]], "HardUpdate": [[132, "hardupdate"]], "KLPENPPOLoss": [[133, "klpenppoloss"]], "PPOLoss": [[134, "ppoloss"]], "REDQLoss": [[135, "redqloss"]], "SACLoss": [[136, "sacloss"]], "SoftUpdate": [[137, "softupdate"]], "distance_loss": [[138, "distance-loss"]], "hold_out_net": [[139, "hold-out-net"]], "hold_out_params": [[140, "hold-out-params"]], "next_state_value": [[141, "next-state-value"]], "GAE": [[142, "gae"]], "TDEstimate": [[143, "tdestimate"]], "TDLambdaEstimate": [[144, "tdlambdaestimate"]], "generalized_advantage_estimate": [[145, "generalized-advantage-estimate"]], "td_advantage_estimate": [[146, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[147, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[148, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[149, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[150, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[151, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[152, "batchsubsampler"]], "ClearCudaCache": [[153, "clearcudacache"]], "CountFramesLog": [[154, "countframeslog"]], "LogReward": [[155, "logreward"]], "OptimizerHook": [[156, "optimizerhook"]], "Recorder": [[157, "recorder"]], "RewardNormalizer": [[159, "rewardnormalizer"]], "SelectKeys": [[160, "selectkeys"]], "Trainer": [[161, "trainer"]], "UpdateWeights": [[162, "updateweights"]], "correct_for_frame_skip": [[163, "correct-for-frame-skip"]], "get_stats_random_rollout": [[164, "get-stats-random-rollout"]], "make_a2c_loss": [[165, "make-a2c-loss"]], "make_a2c_model": [[166, "make-a2c-model"]], "make_collector_offpolicy": [[167, "make-collector-offpolicy"]], "make_collector_onpolicy": [[168, "make-collector-onpolicy"]], "make_ddpg_actor": [[169, "make-ddpg-actor"]], "make_ddpg_loss": [[170, "make-ddpg-loss"]], "make_dqn_actor": [[171, "make-dqn-actor"]], "make_dqn_loss": [[172, "make-dqn-loss"]], "make_ppo_loss": [[173, "make-ppo-loss"]], "make_ppo_model": [[174, "make-ppo-model"]], "make_redq_loss": [[175, "make-redq-loss"]], "make_redq_model": [[176, "make-redq-model"]], "make_replay_buffer": [[177, "make-replay-buffer"]], "make_sac_loss": [[178, "make-sac-loss"]], "make_sac_model": [[179, "make-sac-model"]], "make_target_updater": [[180, "make-target-updater"]], "make_trainer": [[181, "make-trainer"]], "parallel_env_constructor": [[182, "parallel-env-constructor"]], "sync_async_collector": [[183, "sync-async-collector"]], "sync_sync_collector": [[184, "sync-sync-collector"]], "transformed_env_constructor": [[185, "transformed-env-constructor"]], "README Demos": [[186, "readme-demos"], [195, "readme-demos"]], "API Reference": [[187, "api-reference"]], "Knowledge Base": [[188, "knowledge-base"]], "Contributing": [[188, "contributing"], [201, "contributing"]], "Contents:": [[188, null]], "torchrl.modules package": [[189, "torchrl-modules-package"]], "TensorDict modules": [[189, "tensordict-modules"]], "Hooks": [[189, "hooks"]], "Models": [[189, "models"], [201, "models"]], "Exploration": [[189, "exploration"]], "Planners": [[189, "planners"]], "Distributions": [[189, "distributions"]], "torchrl.objectives package": [[190, "torchrl-objectives-package"]], "DQN": [[190, "dqn"]], "DDPG": [[190, "ddpg"]], "SAC": [[190, "sac"]], "REDQ": [[190, "redq"]], "PPO": [[190, "ppo"]], "A2C": [[190, "a2c"]], "Returns": [[190, "returns"]], "torchrl.trainers package": [[191, "torchrl-trainers-package"]], "Checkpointing": [[191, "checkpointing"]], "Trainer and hooks": [[191, "trainer-and-hooks"]], "Builders": [[191, "builders"]], "torchrl._utils package": [[192, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[193, "coding-ddpg-using-torchrl"]], "Environment": [[193, "environment"]], "Parallel execution": [[193, "parallel-execution"]], "Normalization of the observations": [[193, "normalization-of-the-observations"]], "Building the model": [[193, "building-the-model"]], "Evaluator: building your recorder object": [[193, "evaluator-building-your-recorder-object"]], "Replay buffer": [[193, "replay-buffer"]], "Hyperparameters": [[193, "hyperparameters"], [194, "hyperparameters"]], "Initialization": [[193, "initialization"]], "Data collector": [[193, "data-collector"]], "Time to train the policy!": [[193, "time-to-train-the-policy"]], "Experiment results": [[193, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[193, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[194, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[194, "building-the-environment"]], "The problem": [[194, "the-problem"]], "Building the model (Deep Q-network)": [[194, "building-the-model-deep-q-network"]], "Regular DQN": [[194, "regular-dqn"]], "Training loop": [[194, "training-loop"], [194, "id1"]], "TD-lambda": [[194, "td-lambda"]], "Conclusion and possible improvements": [[194, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[196, "task-specific-policy-in-multi-task-environments"]], "Policy": [[196, "policy"]], "Executing diverse tasks in parallel": [[196, "executing-diverse-tasks-in-parallel"]], "Rollout": [[196, "rollout"]], "Computation times": [[197, "computation-times"]], "TensorDictModule": [[198, "tensordictmodule"]], "TensorDictModule by examples": [[198, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[198, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[198, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[198, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[198, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[198, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[198, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[198, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[198, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[198, "benchmarking"]], "TensorDict": [[199, "tensordict"], [201, "tensordict"]], "Improving the modularity of codes": [[199, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[199, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[199, "tensordict-structure"]], "TensorDict Dictionary Features": [[199, "tensordict-dictionary-features"]], "get(key)": [[199, "get-key"]], "set(key, value)": [[199, "set-key-value"]], "keys()": [[199, "keys"]], "values()": [[199, "values"]], "update(tensordict_or_dict)": [[199, "update-tensordict-or-dict"]], "del": [[199, "del"]], "TensorDict tensor features": [[199, "tensordict-tensor-features"]], "Batch size": [[199, "batch-size"]], "Devices": [[199, "devices"]], "Memory sharing via physical memory usage": [[199, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[199, "tensor-operations"]], "TorchRL envs": [[200, "torchrl-envs"]], "Gym environments": [[200, "gym-environments"]], "Env Specs": [[200, "env-specs"]], "Seeding, resetting and steps": [[200, "seeding-resetting-and-steps"]], "Rollouts": [[200, "rollouts"]], "frame_skip": [[200, "frame-skip"]], "Rendering": [[200, "rendering"]], "DeepMind Control environments": [[200, "deepmind-control-environments"]], "Transforming envs": [[200, "transforming-envs"]], "Environment device": [[200, "environment-device"]], "Running environments in parallel": [[200, "running-environments-in-parallel"]], "Closing parallel environments": [[200, "closing-parallel-environments"]], "Seeding": [[200, "seeding"]], "Accessing environment attributes": [[200, "accessing-environment-attributes"]], "kwargs for parallel environments": [[200, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[200, "transforming-parallel-environments"]], "Introduction to TorchRL": [[201, "introduction-to-torchrl"]], "Data": [[201, "data"]], "Replay buffers": [[201, "replay-buffers"]], "Envs": [[201, "envs"]], "Changing environments config": [[201, "changing-environments-config"]], "Vectorized Environments": [[201, "vectorized-environments"]], "Modules": [[201, "modules"]], "TensorDictModules": [[201, "tensordictmodules"]], "Sequences of Modules": [[201, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[201, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[201, "specialized-classes"]], "Using Environments and Modules": [[201, "using-environments-and-modules"]], "Objectives": [[201, "objectives"]], "State of the Library": [[201, "state-of-the-library"]], "Installing the Library": [[201, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[14, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[15, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[16, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[17, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[18, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[19, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[21, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.zero_grad"]], "ndboundedtensorspec (class in torchrl.data)": [[22, "torchrl.data.NdBoundedTensorSpec"]], "assert_is_in() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.encode"]], "index() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.index"]], "is_in() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.is_in"]], "project() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.project"]], "rand() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.type_check"]], "zero() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.zero"]], "ndunboundedcontinuoustensorspec (class in torchrl.data)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.zero"]], "onehotdiscretetensorspec (class in torchrl.data)": [[24, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[26, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[29, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[30, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[34, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[36, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[37, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[38, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[39, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[40, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[40, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[42, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[42, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[42, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[43, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[43, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[43, "id0"], [43, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[43, "id1"], [43, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[43, "id2"], [43, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[43, "id3"], [43, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[43, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[43, "id4"], [43, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[44, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[45, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[45, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[45, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[45, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[45, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[45, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[46, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[46, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[46, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[47, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[47, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[47, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[48, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[49, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[50, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[51, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[52, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[53, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[54, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[55, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[56, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[56, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[57, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[57, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[58, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[59, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[61, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[61, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[61, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[63, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[64, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[65, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[66, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[66, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[70, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[71, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[72, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[73, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[73, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[73, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[74, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viptransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[79, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[79, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[79, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[79, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[80, "torchrl.envs.transforms.gSDENoise.reset"]], "exploration_mode() (in module torchrl.envs.utils)": [[81, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[82, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[83, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[84, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[85, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[86, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[86, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[86, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[87, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[87, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[87, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[88, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[88, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[88, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[89, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[89, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[90, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[90, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[91, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[91, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[92, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[92, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[93, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[93, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[94, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[94, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[95, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[95, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[95, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[95, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[95, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[95, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[96, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[96, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[97, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[98, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[98, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[99, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[99, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[100, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[100, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[101, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[101, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[102, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[102, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[102, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[103, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[103, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[104, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[105, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[105, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[106, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[106, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[107, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[107, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[107, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[107, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[107, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[108, "torchrl.modules.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules)": [[109, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[110, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[110, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[111, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[111, "torchrl.modules.RSSMPrior.forward"]], "safemodule (class in torchrl.modules)": [[112, "torchrl.modules.SafeModule"]], "random() (torchrl.modules.safemodule method)": [[112, "torchrl.modules.SafeModule.random"]], "random_sample() (torchrl.modules.safemodule method)": [[112, "torchrl.modules.SafeModule.random_sample"]], "to() (torchrl.modules.safemodule method)": [[112, "torchrl.modules.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules)": [[113, "torchrl.modules.SafeProbabilisticModule"]], "safesequential (class in torchrl.modules)": [[114, "torchrl.modules.SafeSequential"]], "tanhdelta (class in torchrl.modules)": [[115, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[115, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[115, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[116, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[116, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[117, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[117, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[117, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[118, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[119, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[120, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[121, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[122, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[123, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[124, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[124, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[125, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[126, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[127, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[127, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[128, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[128, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[129, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[129, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[130, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[130, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[131, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[131, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[132, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[133, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[133, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[134, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[134, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[135, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[135, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[136, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[136, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[137, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[138, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[139, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[140, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[141, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[142, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[142, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[143, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[143, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[144, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[144, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[145, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[146, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[147, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[148, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[149, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[150, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[151, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[152, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[153, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[154, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[155, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[156, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[157, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[158, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[158, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[158, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[158, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[159, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[160, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[161, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[162, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[163, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[164, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[165, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[179, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[180, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[181, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[182, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[183, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[184, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[185, "torchrl.trainers.helpers.transformed_env_constructor"]]}})